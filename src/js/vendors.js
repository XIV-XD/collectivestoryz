/*! For license information please see vendors.js.LICENSE.txt */
(window.webpackJsonp = window.webpackJsonp || []).push([
    ["vendors"], {
        "./node_modules/@dogstudio/highway/build/highway.module.js": function (e, t, n) {
            "use strict";

            function r() {}
            r.prototype = {
                on: function (e, t, n) {
                    var r = this.e || (this.e = {});
                    return (r[e] || (r[e] = [])).push({
                        fn: t,
                        ctx: n
                    }), this
                },
                once: function (e, t, n) {
                    var r = this;

                    function i() {
                        r.off(e, i), t.apply(n, arguments)
                    }
                    return i._ = t, this.on(e, i, n)
                },
                emit: function (e) {
                    for (var t = [].slice.call(arguments, 1), n = ((this.e || (this.e = {}))[e] || []).slice(), r = 0, i = n.length; r < i; r++) n[r].fn.apply(n[r].ctx, t);
                    return this
                },
                off: function (e, t) {
                    var n = this.e || (this.e = {}),
                        r = n[e],
                        i = [];
                    if (r && t)
                        for (var o = 0, a = r.length; o < a; o++) r[o].fn !== t && r[o].fn._ !== t && i.push(r[o]);
                    return i.length ? n[e] = i : delete n[e], this
                }
            };
            var i = r;
            i.TinyEmitter = r;
            var o = function (e) {
                this.wrap = document.querySelector("[data-router-wrapper]"), this.properties = e, this.Transition = e.transition ? new e.transition.class(this.wrap, e.transition.name) : null
            };
            o.prototype.setup = function () {
                this.onEnter && this.onEnter(), this.onEnterCompleted && this.onEnterCompleted()
            }, o.prototype.add = function () {
                this.wrap.insertAdjacentHTML("beforeend", this.properties.view.outerHTML)
            }, o.prototype.update = function () {
                document.title = this.properties.page.title
            }, o.prototype.show = function (e) {
                var t = this;
                return new Promise((function (n) {
                    try {
                        function r(e) {
                            t.onEnterCompleted && t.onEnterCompleted(), n()
                        }
                        return t.update(), t.onEnter && t.onEnter(), Promise.resolve(t.Transition ? Promise.resolve(t.Transition.show(e)).then(r) : r())
                    } catch (e) {
                        return Promise.reject(e)
                    }
                }))
            }, o.prototype.hide = function (e) {
                var t = this;
                return new Promise((function (n) {
                    try {
                        function r(e) {
                            t.onLeaveCompleted && t.onLeaveCompleted(), n()
                        }
                        return t.onLeave && t.onLeave(), Promise.resolve(t.Transition ? Promise.resolve(t.Transition.hide(e)).then(r) : r())
                    } catch (e) {
                        return Promise.reject(e)
                    }
                }))
            };
            var a = new window.DOMParser,
                s = function (e, t) {
                    this.renderers = e, this.transitions = t
                };
            s.prototype.getOrigin = function (e) {
                var t = e.match(/(https?:\/\/[\w\-.]+)/);
                return t ? t[1].replace(/https?:\/\//, "") : null
            }, s.prototype.getPathname = function (e) {
                var t = e.match(/https?:\/\/.*?(\/[\w_\-./]+)/);
                return t ? t[1] : "/"
            }, s.prototype.getAnchor = function (e) {
                var t = e.match(/(#.*)$/);
                return t ? t[1] : null
            }, s.prototype.getParams = function (e) {
                var t = e.match(/\?([\w_\-.=&]+)/);
                if (!t) return null;
                for (var n = t[1].split("&"), r = {}, i = 0; i < n.length; i++) {
                    var o = n[i].split("=");
                    r[o[0]] = o[1]
                }
                return r
            }, s.prototype.getDOM = function (e) {
                return "string" == typeof e ? a.parseFromString(e, "text/html") : e
            }, s.prototype.getView = function (e) {
                return e.querySelector("[data-router-view]")
            }, s.prototype.getSlug = function (e) {
                return e.getAttribute("data-router-view")
            }, s.prototype.getRenderer = function (e) {
                if (!this.renderers) return Promise.resolve(o);
                if (e in this.renderers) {
                    var t = this.renderers[e];
                    return "function" != typeof t || o.isPrototypeOf(t) ? "function" == typeof t.then ? Promise.resolve(t).then((function (e) {
                        return e.default
                    })) : Promise.resolve(t) : Promise.resolve(t()).then((function (e) {
                        return e.default
                    }))
                }
                return Promise.resolve(o)
            }, s.prototype.getTransition = function (e) {
                return this.transitions ? e in this.transitions ? {
                    class: this.transitions[e],
                    name: e
                } : "default" in this.transitions ? {
                    class: this.transitions.default,
                    name: "default"
                } : null : null
            }, s.prototype.getProperties = function (e) {
                var t = this.getDOM(e),
                    n = this.getView(t),
                    r = this.getSlug(n);
                return {
                    page: t,
                    view: n,
                    slug: r,
                    renderer: this.getRenderer(r, this.renderers),
                    transition: this.getTransition(r, this.transitions)
                }
            }, s.prototype.getLocation = function (e) {
                return {
                    href: e,
                    anchor: this.getAnchor(e),
                    origin: this.getOrigin(e),
                    params: this.getParams(e),
                    pathname: this.getPathname(e)
                }
            };
            var c = function (e) {
                    function t(t) {
                        var n = this;
                        void 0 === t && (t = {});
                        var r = t.renderers,
                            i = t.transitions;
                        e.call(this), this.Helpers = new s(r, i), this.Transitions = i, this.Contextual = !1, this.location = this.Helpers.getLocation(window.location.href), this.properties = this.Helpers.getProperties(document.cloneNode(!0)), this.popping = !1, this.running = !1, this.trigger = null, this.cache = new Map, this.cache.set(this.location.href, this.properties), this.properties.renderer.then((function (e) {
                            n.From = new e(n.properties), n.From.setup()
                        })), this._navigate = this.navigate.bind(this), window.addEventListener("popstate", this.popState.bind(this)), this.links = document.querySelectorAll("a:not([target]):not([data-router-disabled])"), this.attach(this.links)
                    }
                    return e && (t.__proto__ = e), (t.prototype = Object.create(e && e.prototype)).constructor = t, t.prototype.attach = function (e) {
                        for (var t = 0, n = e; t < n.length; t += 1) n[t].addEventListener("click", this._navigate)
                    }, t.prototype.detach = function (e) {
                        for (var t = 0, n = e; t < n.length; t += 1) n[t].removeEventListener("click", this._navigate)
                    }, t.prototype.navigate = function (e) {
                        if (!e.metaKey && !e.ctrlKey) {
                            e.preventDefault();
                            var t = !!e.currentTarget.hasAttribute("data-transition") && e.currentTarget.dataset.transition;
                            this.redirect(e.currentTarget.href, t, e.currentTarget)
                        }
                    }, t.prototype.redirect = function (e, t, n) {
                        if (void 0 === t && (t = !1), void 0 === n && (n = "script"), this.trigger = n, !this.running && e !== this.location.href) {
                            var r = this.Helpers.getLocation(e);
                            this.Contextual = !1, t && (this.Contextual = this.Transitions.contextual[t].prototype, this.Contextual.name = t), r.origin !== this.location.origin || r.anchor && r.pathname === this.location.pathname ? window.location.href = e : (this.location = r, this.beforeFetch())
                        }
                    }, t.prototype.popState = function () {
                        this.trigger = "popstate", this.Contextual = !1;
                        var e = this.Helpers.getLocation(window.location.href);
                        this.location.pathname !== e.pathname || !this.location.anchor && !e.anchor ? (this.popping = !0, this.location = e, this.beforeFetch()) : this.location = e
                    }, t.prototype.pushState = function () {
                        this.popping || window.history.pushState(this.location, "", this.location.href)
                    }, t.prototype.fetch = function () {
                        try {
                            var e = this;
                            return Promise.resolve(fetch(e.location.href, {
                                mode: "same-origin",
                                method: "GET",
                                headers: {
                                    "X-Requested-With": "Highway"
                                },
                                credentials: "same-origin"
                            })).then((function (t) {
                                if (t.status >= 200 && t.status < 300) return t.text();
                                window.location.href = e.location.href
                            }))
                        } catch (e) {
                            return Promise.reject(e)
                        }
                    }, t.prototype.beforeFetch = function () {
                        try {
                            var e = this;

                            function t() {
                                e.afterFetch()
                            }
                            e.pushState(), e.running = !0, e.emit("NAVIGATE_OUT", {
                                from: {
                                    page: e.From.properties.page,
                                    view: e.From.properties.view
                                },
                                trigger: e.trigger,
                                location: e.location
                            });
                            var n = {
                                    trigger: e.trigger,
                                    contextual: e.Contextual
                                },
                                r = e.cache.has(e.location.href) ? Promise.resolve(e.From.hide(n)).then((function () {
                                    e.properties = e.cache.get(e.location.href)
                                })) : Promise.resolve(Promise.all([e.fetch(), e.From.hide(n)])).then((function (t) {
                                    e.properties = e.Helpers.getProperties(t[0]), e.cache.set(e.location.href, e.properties)
                                }));
                            return Promise.resolve(r && r.then ? r.then(t) : t())
                        } catch (e) {
                            return Promise.reject(e)
                        }
                    }, t.prototype.afterFetch = function () {
                        try {
                            var e = this;
                            return Promise.resolve(e.properties.renderer).then((function (t) {
                                return e.To = new t(e.properties), e.To.add(), e.emit("NAVIGATE_IN", {
                                    to: {
                                        page: e.To.properties.page,
                                        view: e.To.wrap.lastElementChild
                                    },
                                    trigger: e.trigger,
                                    location: e.location
                                }), Promise.resolve(e.To.show({
                                    trigger: e.trigger,
                                    contextual: e.Contextual
                                })).then((function () {
                                    e.popping = !1, e.running = !1, e.detach(e.links), e.links = document.querySelectorAll("a:not([target]):not([data-router-disabled])"), e.attach(e.links), e.emit("NAVIGATE_END", {
                                        to: {
                                            page: e.To.properties.page,
                                            view: e.To.wrap.lastElementChild
                                        },
                                        from: {
                                            page: e.From.properties.page,
                                            view: e.From.properties.view
                                        },
                                        trigger: e.trigger,
                                        location: e.location
                                    }), e.From = e.To, e.trigger = null
                                }))
                            }))
                        } catch (e) {
                            return Promise.reject(e)
                        }
                    }, t
                }(i),
                l = function (e, t) {
                    this.wrap = e, this.name = t
                };
            l.prototype.show = function (e) {
                var t = this,
                    n = e.trigger,
                    r = e.contextual,
                    i = this.wrap.lastElementChild,
                    o = this.wrap.firstElementChild;
                return new Promise((function (e) {
                    r ? (i.setAttribute("data-transition-in", r.name), i.removeAttribute("data-transition-out", r.name), r.in && r.in({
                        to: i,
                        from: o,
                        trigger: n,
                        done: e
                    })) : (i.setAttribute("data-transition-in", t.name), i.removeAttribute("data-transition-out", t.name), t.in && t.in({
                        to: i,
                        from: o,
                        trigger: n,
                        done: e
                    }))
                }))
            }, l.prototype.hide = function (e) {
                var t = this,
                    n = e.trigger,
                    r = e.contextual,
                    i = this.wrap.firstElementChild;
                return new Promise((function (e) {
                    r ? (i.setAttribute("data-transition-out", r.name), i.removeAttribute("data-transition-in", r.name), r.out && r.out({
                        from: i,
                        trigger: n,
                        done: e
                    })) : (i.setAttribute("data-transition-out", t.name), i.removeAttribute("data-transition-in", t.name), t.out && t.out({
                        from: i,
                        trigger: n,
                        done: e
                    }))
                }))
            }, console.log("Highway v2.2.0"), t.a = {
                Core: c,
                Helpers: s,
                Renderer: o,
                Transition: l
            }
        },
        "./node_modules/core-js/fn/array/from.js": function (e, t, n) {
            n("./node_modules/core-js/modules/es6.string.iterator.js"), n("./node_modules/core-js/modules/es6.array.from.js"), e.exports = n("./node_modules/core-js/modules/_core.js").Array.from
        },
        "./node_modules/core-js/fn/map.js": function (e, t, n) {
            n("./node_modules/core-js/modules/es6.object.to-string.js"), n("./node_modules/core-js/modules/es6.string.iterator.js"), n("./node_modules/core-js/modules/web.dom.iterable.js"), n("./node_modules/core-js/modules/es6.map.js"), n("./node_modules/core-js/modules/es7.map.to-json.js"), n("./node_modules/core-js/modules/es7.map.of.js"), n("./node_modules/core-js/modules/es7.map.from.js"), e.exports = n("./node_modules/core-js/modules/_core.js").Map
        },
        "./node_modules/core-js/fn/object/assign.js": function (e, t, n) {
            n("./node_modules/core-js/modules/es6.object.assign.js"), e.exports = n("./node_modules/core-js/modules/_core.js").Object.assign
        },
        "./node_modules/core-js/fn/set.js": function (e, t, n) {
            n("./node_modules/core-js/modules/es6.object.to-string.js"), n("./node_modules/core-js/modules/es6.string.iterator.js"), n("./node_modules/core-js/modules/web.dom.iterable.js"), n("./node_modules/core-js/modules/es6.set.js"), n("./node_modules/core-js/modules/es7.set.to-json.js"), n("./node_modules/core-js/modules/es7.set.of.js"), n("./node_modules/core-js/modules/es7.set.from.js"), e.exports = n("./node_modules/core-js/modules/_core.js").Set
        },
        "./node_modules/core-js/fn/weak-map.js": function (e, t, n) {
            n("./node_modules/core-js/modules/es6.object.to-string.js"), n("./node_modules/core-js/modules/web.dom.iterable.js"), n("./node_modules/core-js/modules/es6.weak-map.js"), n("./node_modules/core-js/modules/es7.weak-map.of.js"), n("./node_modules/core-js/modules/es7.weak-map.from.js"), e.exports = n("./node_modules/core-js/modules/_core.js").WeakMap
        },
        "./node_modules/core-js/modules/_a-function.js": function (e, t) {
            e.exports = function (e) {
                if ("function" != typeof e) throw TypeError(e + " is not a function!");
                return e
            }
        },
        "./node_modules/core-js/modules/_add-to-unscopables.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_wks.js")("unscopables"),
                i = Array.prototype;
            null == i[r] && n("./node_modules/core-js/modules/_hide.js")(i, r, {}), e.exports = function (e) {
                i[r][e] = !0
            }
        },
        "./node_modules/core-js/modules/_an-instance.js": function (e, t) {
            e.exports = function (e, t, n, r) {
                if (!(e instanceof t) || void 0 !== r && r in e) throw TypeError(n + ": incorrect invocation!");
                return e
            }
        },
        "./node_modules/core-js/modules/_an-object.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_is-object.js");
            e.exports = function (e) {
                if (!r(e)) throw TypeError(e + " is not an object!");
                return e
            }
        },
        "./node_modules/core-js/modules/_array-from-iterable.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_for-of.js");
            e.exports = function (e, t) {
                var n = [];
                return r(e, !1, n.push, n, t), n
            }
        },
        "./node_modules/core-js/modules/_array-includes.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_to-iobject.js"),
                i = n("./node_modules/core-js/modules/_to-length.js"),
                o = n("./node_modules/core-js/modules/_to-absolute-index.js");
            e.exports = function (e) {
                return function (t, n, a) {
                    var s, c = r(t),
                        l = i(c.length),
                        u = o(a, l);
                    if (e && n != n) {
                        for (; l > u;)
                            if ((s = c[u++]) != s) return !0
                    } else
                        for (; l > u; u++)
                            if ((e || u in c) && c[u] === n) return e || u || 0;
                    return !e && -1
                }
            }
        },
        "./node_modules/core-js/modules/_array-methods.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_ctx.js"),
                i = n("./node_modules/core-js/modules/_iobject.js"),
                o = n("./node_modules/core-js/modules/_to-object.js"),
                a = n("./node_modules/core-js/modules/_to-length.js"),
                s = n("./node_modules/core-js/modules/_array-species-create.js");
            e.exports = function (e, t) {
                var n = 1 == e,
                    c = 2 == e,
                    l = 3 == e,
                    u = 4 == e,
                    h = 6 == e,
                    d = 5 == e || h,
                    p = t || s;
                return function (t, s, f) {
                    for (var m, g, v = o(t), y = i(v), _ = r(s, f, 3), x = a(y.length), b = 0, w = n ? p(t, x) : c ? p(t, 0) : void 0; x > b; b++)
                        if ((d || b in y) && (g = _(m = y[b], b, v), e))
                            if (n) w[b] = g;
                            else if (g) switch (e) {
                        case 3:
                            return !0;
                        case 5:
                            return m;
                        case 6:
                            return b;
                        case 2:
                            w.push(m)
                    } else if (u) return !1;
                    return h ? -1 : l || u ? u : w
                }
            }
        },
        "./node_modules/core-js/modules/_array-species-constructor.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_is-object.js"),
                i = n("./node_modules/core-js/modules/_is-array.js"),
                o = n("./node_modules/core-js/modules/_wks.js")("species");
            e.exports = function (e) {
                var t;
                return i(e) && ("function" != typeof (t = e.constructor) || t !== Array && !i(t.prototype) || (t = void 0), r(t) && null === (t = t[o]) && (t = void 0)), void 0 === t ? Array : t
            }
        },
        "./node_modules/core-js/modules/_array-species-create.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_array-species-constructor.js");
            e.exports = function (e, t) {
                return new(r(e))(t)
            }
        },
        "./node_modules/core-js/modules/_classof.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_cof.js"),
                i = n("./node_modules/core-js/modules/_wks.js")("toStringTag"),
                o = "Arguments" == r(function () {
                    return arguments
                }());
            e.exports = function (e) {
                var t, n, a;
                return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof (n = function (e, t) {
                    try {
                        return e[t]
                    } catch (e) {}
                }(t = Object(e), i)) ? n : o ? r(t) : "Object" == (a = r(t)) && "function" == typeof t.callee ? "Arguments" : a
            }
        },
        "./node_modules/core-js/modules/_cof.js": function (e, t) {
            var n = {}.toString;
            e.exports = function (e) {
                return n.call(e).slice(8, -1)
            }
        },
        "./node_modules/core-js/modules/_collection-strong.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/core-js/modules/_object-dp.js").f,
                i = n("./node_modules/core-js/modules/_object-create.js"),
                o = n("./node_modules/core-js/modules/_redefine-all.js"),
                a = n("./node_modules/core-js/modules/_ctx.js"),
                s = n("./node_modules/core-js/modules/_an-instance.js"),
                c = n("./node_modules/core-js/modules/_for-of.js"),
                l = n("./node_modules/core-js/modules/_iter-define.js"),
                u = n("./node_modules/core-js/modules/_iter-step.js"),
                h = n("./node_modules/core-js/modules/_set-species.js"),
                d = n("./node_modules/core-js/modules/_descriptors.js"),
                p = n("./node_modules/core-js/modules/_meta.js").fastKey,
                f = n("./node_modules/core-js/modules/_validate-collection.js"),
                m = d ? "_s" : "size",
                g = function (e, t) {
                    var n, r = p(t);
                    if ("F" !== r) return e._i[r];
                    for (n = e._f; n; n = n.n)
                        if (n.k == t) return n
                };
            e.exports = {
                getConstructor: function (e, t, n, l) {
                    var u = e((function (e, r) {
                        s(e, u, t, "_i"), e._t = t, e._i = i(null), e._f = void 0, e._l = void 0, e[m] = 0, null != r && c(r, n, e[l], e)
                    }));
                    return o(u.prototype, {
                        clear: function () {
                            for (var e = f(this, t), n = e._i, r = e._f; r; r = r.n) r.r = !0, r.p && (r.p = r.p.n = void 0), delete n[r.i];
                            e._f = e._l = void 0, e[m] = 0
                        },
                        delete: function (e) {
                            var n = f(this, t),
                                r = g(n, e);
                            if (r) {
                                var i = r.n,
                                    o = r.p;
                                delete n._i[r.i], r.r = !0, o && (o.n = i), i && (i.p = o), n._f == r && (n._f = i), n._l == r && (n._l = o), n[m]--
                            }
                            return !!r
                        },
                        forEach: function (e) {
                            f(this, t);
                            for (var n, r = a(e, arguments.length > 1 ? arguments[1] : void 0, 3); n = n ? n.n : this._f;)
                                for (r(n.v, n.k, this); n && n.r;) n = n.p
                        },
                        has: function (e) {
                            return !!g(f(this, t), e)
                        }
                    }), d && r(u.prototype, "size", {
                        get: function () {
                            return f(this, t)[m]
                        }
                    }), u
                },
                def: function (e, t, n) {
                    var r, i, o = g(e, t);
                    return o ? o.v = n : (e._l = o = {
                        i: i = p(t, !0),
                        k: t,
                        v: n,
                        p: r = e._l,
                        n: void 0,
                        r: !1
                    }, e._f || (e._f = o), r && (r.n = o), e[m]++, "F" !== i && (e._i[i] = o)), e
                },
                getEntry: g,
                setStrong: function (e, t, n) {
                    l(e, t, (function (e, n) {
                        this._t = f(e, t), this._k = n, this._l = void 0
                    }), (function () {
                        for (var e = this._k, t = this._l; t && t.r;) t = t.p;
                        return this._t && (this._l = t = t ? t.n : this._t._f) ? u(0, "keys" == e ? t.k : "values" == e ? t.v : [t.k, t.v]) : (this._t = void 0, u(1))
                    }), n ? "entries" : "values", !n, !0), h(t)
                }
            }
        },
        "./node_modules/core-js/modules/_collection-to-json.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_classof.js"),
                i = n("./node_modules/core-js/modules/_array-from-iterable.js");
            e.exports = function (e) {
                return function () {
                    if (r(this) != e) throw TypeError(e + "#toJSON isn't generic");
                    return i(this)
                }
            }
        },
        "./node_modules/core-js/modules/_collection-weak.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/core-js/modules/_redefine-all.js"),
                i = n("./node_modules/core-js/modules/_meta.js").getWeak,
                o = n("./node_modules/core-js/modules/_an-object.js"),
                a = n("./node_modules/core-js/modules/_is-object.js"),
                s = n("./node_modules/core-js/modules/_an-instance.js"),
                c = n("./node_modules/core-js/modules/_for-of.js"),
                l = n("./node_modules/core-js/modules/_array-methods.js"),
                u = n("./node_modules/core-js/modules/_has.js"),
                h = n("./node_modules/core-js/modules/_validate-collection.js"),
                d = l(5),
                p = l(6),
                f = 0,
                m = function (e) {
                    return e._l || (e._l = new g)
                },
                g = function () {
                    this.a = []
                },
                v = function (e, t) {
                    return d(e.a, (function (e) {
                        return e[0] === t
                    }))
                };
            g.prototype = {
                get: function (e) {
                    var t = v(this, e);
                    if (t) return t[1]
                },
                has: function (e) {
                    return !!v(this, e)
                },
                set: function (e, t) {
                    var n = v(this, e);
                    n ? n[1] = t : this.a.push([e, t])
                },
                delete: function (e) {
                    var t = p(this.a, (function (t) {
                        return t[0] === e
                    }));
                    return ~t && this.a.splice(t, 1), !!~t
                }
            }, e.exports = {
                getConstructor: function (e, t, n, o) {
                    var l = e((function (e, r) {
                        s(e, l, t, "_i"), e._t = t, e._i = f++, e._l = void 0, null != r && c(r, n, e[o], e)
                    }));
                    return r(l.prototype, {
                        delete: function (e) {
                            if (!a(e)) return !1;
                            var n = i(e);
                            return !0 === n ? m(h(this, t)).delete(e) : n && u(n, this._i) && delete n[this._i]
                        },
                        has: function (e) {
                            if (!a(e)) return !1;
                            var n = i(e);
                            return !0 === n ? m(h(this, t)).has(e) : n && u(n, this._i)
                        }
                    }), l
                },
                def: function (e, t, n) {
                    var r = i(o(t), !0);
                    return !0 === r ? m(e).set(t, n) : r[e._i] = n, e
                },
                ufstore: m
            }
        },
        "./node_modules/core-js/modules/_collection.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/core-js/modules/_global.js"),
                i = n("./node_modules/core-js/modules/_export.js"),
                o = n("./node_modules/core-js/modules/_redefine.js"),
                a = n("./node_modules/core-js/modules/_redefine-all.js"),
                s = n("./node_modules/core-js/modules/_meta.js"),
                c = n("./node_modules/core-js/modules/_for-of.js"),
                l = n("./node_modules/core-js/modules/_an-instance.js"),
                u = n("./node_modules/core-js/modules/_is-object.js"),
                h = n("./node_modules/core-js/modules/_fails.js"),
                d = n("./node_modules/core-js/modules/_iter-detect.js"),
                p = n("./node_modules/core-js/modules/_set-to-string-tag.js"),
                f = n("./node_modules/core-js/modules/_inherit-if-required.js");
            e.exports = function (e, t, n, m, g, v) {
                var y = r[e],
                    _ = y,
                    x = g ? "set" : "add",
                    b = _ && _.prototype,
                    w = {},
                    M = function (e) {
                        var t = b[e];
                        o(b, e, "delete" == e || "has" == e ? function (e) {
                            return !(v && !u(e)) && t.call(this, 0 === e ? 0 : e)
                        } : "get" == e ? function (e) {
                            return v && !u(e) ? void 0 : t.call(this, 0 === e ? 0 : e)
                        } : "add" == e ? function (e) {
                            return t.call(this, 0 === e ? 0 : e), this
                        } : function (e, n) {
                            return t.call(this, 0 === e ? 0 : e, n), this
                        })
                    };
                if ("function" == typeof _ && (v || b.forEach && !h((function () {
                        (new _).entries().next()
                    })))) {
                    var T = new _,
                        S = T[x](v ? {} : -0, 1) != T,
                        E = h((function () {
                            T.has(1)
                        })),
                        A = d((function (e) {
                            new _(e)
                        })),
                        j = !v && h((function () {
                            for (var e = new _, t = 5; t--;) e[x](t, t);
                            return !e.has(-0)
                        }));
                    A || ((_ = t((function (t, n) {
                        l(t, _, e);
                        var r = f(new y, t, _);
                        return null != n && c(n, g, r[x], r), r
                    }))).prototype = b, b.constructor = _), (E || j) && (M("delete"), M("has"), g && M("get")), (j || S) && M(x), v && b.clear && delete b.clear
                } else _ = m.getConstructor(t, e, g, x), a(_.prototype, n), s.NEED = !0;
                return p(_, e), w[e] = _, i(i.G + i.W + i.F * (_ != y), w), v || m.setStrong(_, e, g), _
            }
        },
        "./node_modules/core-js/modules/_core.js": function (e, t) {
            var n = e.exports = {
                version: "2.6.11"
            };
            "number" == typeof __e && (__e = n)
        },
        "./node_modules/core-js/modules/_create-property.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/core-js/modules/_object-dp.js"),
                i = n("./node_modules/core-js/modules/_property-desc.js");
            e.exports = function (e, t, n) {
                t in e ? r.f(e, t, i(0, n)) : e[t] = n
            }
        },
        "./node_modules/core-js/modules/_ctx.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_a-function.js");
            e.exports = function (e, t, n) {
                if (r(e), void 0 === t) return e;
                switch (n) {
                    case 1:
                        return function (n) {
                            return e.call(t, n)
                        };
                    case 2:
                        return function (n, r) {
                            return e.call(t, n, r)
                        };
                    case 3:
                        return function (n, r, i) {
                            return e.call(t, n, r, i)
                        }
                }
                return function () {
                    return e.apply(t, arguments)
                }
            }
        },
        "./node_modules/core-js/modules/_defined.js": function (e, t) {
            e.exports = function (e) {
                if (null == e) throw TypeError("Can't call method on  " + e);
                return e
            }
        },
        "./node_modules/core-js/modules/_descriptors.js": function (e, t, n) {
            e.exports = !n("./node_modules/core-js/modules/_fails.js")((function () {
                return 7 != Object.defineProperty({}, "a", {
                    get: function () {
                        return 7
                    }
                }).a
            }))
        },
        "./node_modules/core-js/modules/_dom-create.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_is-object.js"),
                i = n("./node_modules/core-js/modules/_global.js").document,
                o = r(i) && r(i.createElement);
            e.exports = function (e) {
                return o ? i.createElement(e) : {}
            }
        },
        "./node_modules/core-js/modules/_enum-bug-keys.js": function (e, t) {
            e.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")
        },
        "./node_modules/core-js/modules/_export.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_global.js"),
                i = n("./node_modules/core-js/modules/_core.js"),
                o = n("./node_modules/core-js/modules/_hide.js"),
                a = n("./node_modules/core-js/modules/_redefine.js"),
                s = n("./node_modules/core-js/modules/_ctx.js"),
                c = function (e, t, n) {
                    var l, u, h, d, p = e & c.F,
                        f = e & c.G,
                        m = e & c.S,
                        g = e & c.P,
                        v = e & c.B,
                        y = f ? r : m ? r[t] || (r[t] = {}) : (r[t] || {}).prototype,
                        _ = f ? i : i[t] || (i[t] = {}),
                        x = _.prototype || (_.prototype = {});
                    for (l in f && (n = t), n) h = ((u = !p && y && void 0 !== y[l]) ? y : n)[l], d = v && u ? s(h, r) : g && "function" == typeof h ? s(Function.call, h) : h, y && a(y, l, h, e & c.U), _[l] != h && o(_, l, d), g && x[l] != h && (x[l] = h)
                };
            r.core = i, c.F = 1, c.G = 2, c.S = 4, c.P = 8, c.B = 16, c.W = 32, c.U = 64, c.R = 128, e.exports = c
        },
        "./node_modules/core-js/modules/_fails.js": function (e, t) {
            e.exports = function (e) {
                try {
                    return !!e()
                } catch (e) {
                    return !0
                }
            }
        },
        "./node_modules/core-js/modules/_for-of.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_ctx.js"),
                i = n("./node_modules/core-js/modules/_iter-call.js"),
                o = n("./node_modules/core-js/modules/_is-array-iter.js"),
                a = n("./node_modules/core-js/modules/_an-object.js"),
                s = n("./node_modules/core-js/modules/_to-length.js"),
                c = n("./node_modules/core-js/modules/core.get-iterator-method.js"),
                l = {},
                u = {};
            (t = e.exports = function (e, t, n, h, d) {
                var p, f, m, g, v = d ? function () {
                        return e
                    } : c(e),
                    y = r(n, h, t ? 2 : 1),
                    _ = 0;
                if ("function" != typeof v) throw TypeError(e + " is not iterable!");
                if (o(v)) {
                    for (p = s(e.length); p > _; _++)
                        if ((g = t ? y(a(f = e[_])[0], f[1]) : y(e[_])) === l || g === u) return g
                } else
                    for (m = v.call(e); !(f = m.next()).done;)
                        if ((g = i(m, y, f.value, t)) === l || g === u) return g
            }).BREAK = l, t.RETURN = u
        },
        "./node_modules/core-js/modules/_function-to-string.js": function (e, t, n) {
            e.exports = n("./node_modules/core-js/modules/_shared.js")("native-function-to-string", Function.toString)
        },
        "./node_modules/core-js/modules/_global.js": function (e, t) {
            var n = e.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
            "number" == typeof __g && (__g = n)
        },
        "./node_modules/core-js/modules/_has.js": function (e, t) {
            var n = {}.hasOwnProperty;
            e.exports = function (e, t) {
                return n.call(e, t)
            }
        },
        "./node_modules/core-js/modules/_hide.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_object-dp.js"),
                i = n("./node_modules/core-js/modules/_property-desc.js");
            e.exports = n("./node_modules/core-js/modules/_descriptors.js") ? function (e, t, n) {
                return r.f(e, t, i(1, n))
            } : function (e, t, n) {
                return e[t] = n, e
            }
        },
        "./node_modules/core-js/modules/_html.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_global.js").document;
            e.exports = r && r.documentElement
        },
        "./node_modules/core-js/modules/_ie8-dom-define.js": function (e, t, n) {
            e.exports = !n("./node_modules/core-js/modules/_descriptors.js") && !n("./node_modules/core-js/modules/_fails.js")((function () {
                return 7 != Object.defineProperty(n("./node_modules/core-js/modules/_dom-create.js")("div"), "a", {
                    get: function () {
                        return 7
                    }
                }).a
            }))
        },
        "./node_modules/core-js/modules/_inherit-if-required.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_is-object.js"),
                i = n("./node_modules/core-js/modules/_set-proto.js").set;
            e.exports = function (e, t, n) {
                var o, a = t.constructor;
                return a !== n && "function" == typeof a && (o = a.prototype) !== n.prototype && r(o) && i && i(e, o), e
            }
        },
        "./node_modules/core-js/modules/_iobject.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_cof.js");
            e.exports = Object("z").propertyIsEnumerable(0) ? Object : function (e) {
                return "String" == r(e) ? e.split("") : Object(e)
            }
        },
        "./node_modules/core-js/modules/_is-array-iter.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_iterators.js"),
                i = n("./node_modules/core-js/modules/_wks.js")("iterator"),
                o = Array.prototype;
            e.exports = function (e) {
                return void 0 !== e && (r.Array === e || o[i] === e)
            }
        },
        "./node_modules/core-js/modules/_is-array.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_cof.js");
            e.exports = Array.isArray || function (e) {
                return "Array" == r(e)
            }
        },
        "./node_modules/core-js/modules/_is-object.js": function (e, t) {
            e.exports = function (e) {
                return "object" == typeof e ? null !== e : "function" == typeof e
            }
        },
        "./node_modules/core-js/modules/_iter-call.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_an-object.js");
            e.exports = function (e, t, n, i) {
                try {
                    return i ? t(r(n)[0], n[1]) : t(n)
                } catch (t) {
                    var o = e.return;
                    throw void 0 !== o && r(o.call(e)), t
                }
            }
        },
        "./node_modules/core-js/modules/_iter-create.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/core-js/modules/_object-create.js"),
                i = n("./node_modules/core-js/modules/_property-desc.js"),
                o = n("./node_modules/core-js/modules/_set-to-string-tag.js"),
                a = {};
            n("./node_modules/core-js/modules/_hide.js")(a, n("./node_modules/core-js/modules/_wks.js")("iterator"), (function () {
                return this
            })), e.exports = function (e, t, n) {
                e.prototype = r(a, {
                    next: i(1, n)
                }), o(e, t + " Iterator")
            }
        },
        "./node_modules/core-js/modules/_iter-define.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/core-js/modules/_library.js"),
                i = n("./node_modules/core-js/modules/_export.js"),
                o = n("./node_modules/core-js/modules/_redefine.js"),
                a = n("./node_modules/core-js/modules/_hide.js"),
                s = n("./node_modules/core-js/modules/_iterators.js"),
                c = n("./node_modules/core-js/modules/_iter-create.js"),
                l = n("./node_modules/core-js/modules/_set-to-string-tag.js"),
                u = n("./node_modules/core-js/modules/_object-gpo.js"),
                h = n("./node_modules/core-js/modules/_wks.js")("iterator"),
                d = !([].keys && "next" in [].keys()),
                p = function () {
                    return this
                };
            e.exports = function (e, t, n, f, m, g, v) {
                c(n, t, f);
                var y, _, x, b = function (e) {
                        if (!d && e in S) return S[e];
                        switch (e) {
                            case "keys":
                            case "values":
                                return function () {
                                    return new n(this, e)
                                }
                        }
                        return function () {
                            return new n(this, e)
                        }
                    },
                    w = t + " Iterator",
                    M = "values" == m,
                    T = !1,
                    S = e.prototype,
                    E = S[h] || S["@@iterator"] || m && S[m],
                    A = E || b(m),
                    j = m ? M ? b("entries") : A : void 0,
                    L = "Array" == t && S.entries || E;
                if (L && (x = u(L.call(new e))) !== Object.prototype && x.next && (l(x, w, !0), r || "function" == typeof x[h] || a(x, h, p)), M && E && "values" !== E.name && (T = !0, A = function () {
                        return E.call(this)
                    }), r && !v || !d && !T && S[h] || a(S, h, A), s[t] = A, s[w] = p, m)
                    if (y = {
                            values: M ? A : b("values"),
                            keys: g ? A : b("keys"),
                            entries: j
                        }, v)
                        for (_ in y) _ in S || o(S, _, y[_]);
                    else i(i.P + i.F * (d || T), t, y);
                return y
            }
        },
        "./node_modules/core-js/modules/_iter-detect.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_wks.js")("iterator"),
                i = !1;
            try {
                var o = [7][r]();
                o.return = function () {
                    i = !0
                }, Array.from(o, (function () {
                    throw 2
                }))
            } catch (e) {}
            e.exports = function (e, t) {
                if (!t && !i) return !1;
                var n = !1;
                try {
                    var o = [7],
                        a = o[r]();
                    a.next = function () {
                        return {
                            done: n = !0
                        }
                    }, o[r] = function () {
                        return a
                    }, e(o)
                } catch (e) {}
                return n
            }
        },
        "./node_modules/core-js/modules/_iter-step.js": function (e, t) {
            e.exports = function (e, t) {
                return {
                    value: t,
                    done: !!e
                }
            }
        },
        "./node_modules/core-js/modules/_iterators.js": function (e, t) {
            e.exports = {}
        },
        "./node_modules/core-js/modules/_library.js": function (e, t) {
            e.exports = !1
        },
        "./node_modules/core-js/modules/_meta.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_uid.js")("meta"),
                i = n("./node_modules/core-js/modules/_is-object.js"),
                o = n("./node_modules/core-js/modules/_has.js"),
                a = n("./node_modules/core-js/modules/_object-dp.js").f,
                s = 0,
                c = Object.isExtensible || function () {
                    return !0
                },
                l = !n("./node_modules/core-js/modules/_fails.js")((function () {
                    return c(Object.preventExtensions({}))
                })),
                u = function (e) {
                    a(e, r, {
                        value: {
                            i: "O" + ++s,
                            w: {}
                        }
                    })
                },
                h = e.exports = {
                    KEY: r,
                    NEED: !1,
                    fastKey: function (e, t) {
                        if (!i(e)) return "symbol" == typeof e ? e : ("string" == typeof e ? "S" : "P") + e;
                        if (!o(e, r)) {
                            if (!c(e)) return "F";
                            if (!t) return "E";
                            u(e)
                        }
                        return e[r].i
                    },
                    getWeak: function (e, t) {
                        if (!o(e, r)) {
                            if (!c(e)) return !0;
                            if (!t) return !1;
                            u(e)
                        }
                        return e[r].w
                    },
                    onFreeze: function (e) {
                        return l && h.NEED && c(e) && !o(e, r) && u(e), e
                    }
                }
        },
        "./node_modules/core-js/modules/_object-assign.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/core-js/modules/_descriptors.js"),
                i = n("./node_modules/core-js/modules/_object-keys.js"),
                o = n("./node_modules/core-js/modules/_object-gops.js"),
                a = n("./node_modules/core-js/modules/_object-pie.js"),
                s = n("./node_modules/core-js/modules/_to-object.js"),
                c = n("./node_modules/core-js/modules/_iobject.js"),
                l = Object.assign;
            e.exports = !l || n("./node_modules/core-js/modules/_fails.js")((function () {
                var e = {},
                    t = {},
                    n = Symbol(),
                    r = "abcdefghijklmnopqrst";
                return e[n] = 7, r.split("").forEach((function (e) {
                    t[e] = e
                })), 7 != l({}, e)[n] || Object.keys(l({}, t)).join("") != r
            })) ? function (e, t) {
                for (var n = s(e), l = arguments.length, u = 1, h = o.f, d = a.f; l > u;)
                    for (var p, f = c(arguments[u++]), m = h ? i(f).concat(h(f)) : i(f), g = m.length, v = 0; g > v;) p = m[v++], r && !d.call(f, p) || (n[p] = f[p]);
                return n
            } : l
        },
        "./node_modules/core-js/modules/_object-create.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_an-object.js"),
                i = n("./node_modules/core-js/modules/_object-dps.js"),
                o = n("./node_modules/core-js/modules/_enum-bug-keys.js"),
                a = n("./node_modules/core-js/modules/_shared-key.js")("IE_PROTO"),
                s = function () {},
                c = function () {
                    var e, t = n("./node_modules/core-js/modules/_dom-create.js")("iframe"),
                        r = o.length;
                    for (t.style.display = "none", n("./node_modules/core-js/modules/_html.js").appendChild(t), t.src = "javascript:", (e = t.contentWindow.document).open(), e.write("<script>document.F=Object<\/script>"), e.close(), c = e.F; r--;) delete c.prototype[o[r]];
                    return c()
                };
            e.exports = Object.create || function (e, t) {
                var n;
                return null !== e ? (s.prototype = r(e), n = new s, s.prototype = null, n[a] = e) : n = c(), void 0 === t ? n : i(n, t)
            }
        },
        "./node_modules/core-js/modules/_object-dp.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_an-object.js"),
                i = n("./node_modules/core-js/modules/_ie8-dom-define.js"),
                o = n("./node_modules/core-js/modules/_to-primitive.js"),
                a = Object.defineProperty;
            t.f = n("./node_modules/core-js/modules/_descriptors.js") ? Object.defineProperty : function (e, t, n) {
                if (r(e), t = o(t, !0), r(n), i) try {
                    return a(e, t, n)
                } catch (e) {}
                if ("get" in n || "set" in n) throw TypeError("Accessors not supported!");
                return "value" in n && (e[t] = n.value), e
            }
        },
        "./node_modules/core-js/modules/_object-dps.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_object-dp.js"),
                i = n("./node_modules/core-js/modules/_an-object.js"),
                o = n("./node_modules/core-js/modules/_object-keys.js");
            e.exports = n("./node_modules/core-js/modules/_descriptors.js") ? Object.defineProperties : function (e, t) {
                i(e);
                for (var n, a = o(t), s = a.length, c = 0; s > c;) r.f(e, n = a[c++], t[n]);
                return e
            }
        },
        "./node_modules/core-js/modules/_object-gopd.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_object-pie.js"),
                i = n("./node_modules/core-js/modules/_property-desc.js"),
                o = n("./node_modules/core-js/modules/_to-iobject.js"),
                a = n("./node_modules/core-js/modules/_to-primitive.js"),
                s = n("./node_modules/core-js/modules/_has.js"),
                c = n("./node_modules/core-js/modules/_ie8-dom-define.js"),
                l = Object.getOwnPropertyDescriptor;
            t.f = n("./node_modules/core-js/modules/_descriptors.js") ? l : function (e, t) {
                if (e = o(e), t = a(t, !0), c) try {
                    return l(e, t)
                } catch (e) {}
                if (s(e, t)) return i(!r.f.call(e, t), e[t])
            }
        },
        "./node_modules/core-js/modules/_object-gops.js": function (e, t) {
            t.f = Object.getOwnPropertySymbols
        },
        "./node_modules/core-js/modules/_object-gpo.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_has.js"),
                i = n("./node_modules/core-js/modules/_to-object.js"),
                o = n("./node_modules/core-js/modules/_shared-key.js")("IE_PROTO"),
                a = Object.prototype;
            e.exports = Object.getPrototypeOf || function (e) {
                return e = i(e), r(e, o) ? e[o] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? a : null
            }
        },
        "./node_modules/core-js/modules/_object-keys-internal.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_has.js"),
                i = n("./node_modules/core-js/modules/_to-iobject.js"),
                o = n("./node_modules/core-js/modules/_array-includes.js")(!1),
                a = n("./node_modules/core-js/modules/_shared-key.js")("IE_PROTO");
            e.exports = function (e, t) {
                var n, s = i(e),
                    c = 0,
                    l = [];
                for (n in s) n != a && r(s, n) && l.push(n);
                for (; t.length > c;) r(s, n = t[c++]) && (~o(l, n) || l.push(n));
                return l
            }
        },
        "./node_modules/core-js/modules/_object-keys.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_object-keys-internal.js"),
                i = n("./node_modules/core-js/modules/_enum-bug-keys.js");
            e.exports = Object.keys || function (e) {
                return r(e, i)
            }
        },
        "./node_modules/core-js/modules/_object-pie.js": function (e, t) {
            t.f = {}.propertyIsEnumerable
        },
        "./node_modules/core-js/modules/_property-desc.js": function (e, t) {
            e.exports = function (e, t) {
                return {
                    enumerable: !(1 & e),
                    configurable: !(2 & e),
                    writable: !(4 & e),
                    value: t
                }
            }
        },
        "./node_modules/core-js/modules/_redefine-all.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_redefine.js");
            e.exports = function (e, t, n) {
                for (var i in t) r(e, i, t[i], n);
                return e
            }
        },
        "./node_modules/core-js/modules/_redefine.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_global.js"),
                i = n("./node_modules/core-js/modules/_hide.js"),
                o = n("./node_modules/core-js/modules/_has.js"),
                a = n("./node_modules/core-js/modules/_uid.js")("src"),
                s = n("./node_modules/core-js/modules/_function-to-string.js"),
                c = ("" + s).split("toString");
            n("./node_modules/core-js/modules/_core.js").inspectSource = function (e) {
                return s.call(e)
            }, (e.exports = function (e, t, n, s) {
                var l = "function" == typeof n;
                l && (o(n, "name") || i(n, "name", t)), e[t] !== n && (l && (o(n, a) || i(n, a, e[t] ? "" + e[t] : c.join(String(t)))), e === r ? e[t] = n : s ? e[t] ? e[t] = n : i(e, t, n) : (delete e[t], i(e, t, n)))
            })(Function.prototype, "toString", (function () {
                return "function" == typeof this && this[a] || s.call(this)
            }))
        },
        "./node_modules/core-js/modules/_set-collection-from.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/core-js/modules/_export.js"),
                i = n("./node_modules/core-js/modules/_a-function.js"),
                o = n("./node_modules/core-js/modules/_ctx.js"),
                a = n("./node_modules/core-js/modules/_for-of.js");
            e.exports = function (e) {
                r(r.S, e, {
                    from: function (e) {
                        var t, n, r, s, c = arguments[1];
                        return i(this), (t = void 0 !== c) && i(c), null == e ? new this : (n = [], t ? (r = 0, s = o(c, arguments[2], 2), a(e, !1, (function (e) {
                            n.push(s(e, r++))
                        }))) : a(e, !1, n.push, n), new this(n))
                    }
                })
            }
        },
        "./node_modules/core-js/modules/_set-collection-of.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/core-js/modules/_export.js");
            e.exports = function (e) {
                r(r.S, e, {
                    of: function () {
                        for (var e = arguments.length, t = new Array(e); e--;) t[e] = arguments[e];
                        return new this(t)
                    }
                })
            }
        },
        "./node_modules/core-js/modules/_set-proto.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_is-object.js"),
                i = n("./node_modules/core-js/modules/_an-object.js"),
                o = function (e, t) {
                    if (i(e), !r(t) && null !== t) throw TypeError(t + ": can't set as prototype!")
                };
            e.exports = {
                set: Object.setPrototypeOf || ("__proto__" in {} ? function (e, t, r) {
                    try {
                        (r = n("./node_modules/core-js/modules/_ctx.js")(Function.call, n("./node_modules/core-js/modules/_object-gopd.js").f(Object.prototype, "__proto__").set, 2))(e, []), t = !(e instanceof Array)
                    } catch (e) {
                        t = !0
                    }
                    return function (e, n) {
                        return o(e, n), t ? e.__proto__ = n : r(e, n), e
                    }
                }({}, !1) : void 0),
                check: o
            }
        },
        "./node_modules/core-js/modules/_set-species.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/core-js/modules/_global.js"),
                i = n("./node_modules/core-js/modules/_object-dp.js"),
                o = n("./node_modules/core-js/modules/_descriptors.js"),
                a = n("./node_modules/core-js/modules/_wks.js")("species");
            e.exports = function (e) {
                var t = r[e];
                o && t && !t[a] && i.f(t, a, {
                    configurable: !0,
                    get: function () {
                        return this
                    }
                })
            }
        },
        "./node_modules/core-js/modules/_set-to-string-tag.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_object-dp.js").f,
                i = n("./node_modules/core-js/modules/_has.js"),
                o = n("./node_modules/core-js/modules/_wks.js")("toStringTag");
            e.exports = function (e, t, n) {
                e && !i(e = n ? e : e.prototype, o) && r(e, o, {
                    configurable: !0,
                    value: t
                })
            }
        },
        "./node_modules/core-js/modules/_shared-key.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_shared.js")("keys"),
                i = n("./node_modules/core-js/modules/_uid.js");
            e.exports = function (e) {
                return r[e] || (r[e] = i(e))
            }
        },
        "./node_modules/core-js/modules/_shared.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_core.js"),
                i = n("./node_modules/core-js/modules/_global.js"),
                o = i["__core-js_shared__"] || (i["__core-js_shared__"] = {});
            (e.exports = function (e, t) {
                return o[e] || (o[e] = void 0 !== t ? t : {})
            })("versions", []).push({
                version: r.version,
                mode: n("./node_modules/core-js/modules/_library.js") ? "pure" : "global",
                copyright: "© 2019 Denis Pushkarev (zloirock.ru)"
            })
        },
        "./node_modules/core-js/modules/_string-at.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_to-integer.js"),
                i = n("./node_modules/core-js/modules/_defined.js");
            e.exports = function (e) {
                return function (t, n) {
                    var o, a, s = String(i(t)),
                        c = r(n),
                        l = s.length;
                    return c < 0 || c >= l ? e ? "" : void 0 : (o = s.charCodeAt(c)) < 55296 || o > 56319 || c + 1 === l || (a = s.charCodeAt(c + 1)) < 56320 || a > 57343 ? e ? s.charAt(c) : o : e ? s.slice(c, c + 2) : a - 56320 + (o - 55296 << 10) + 65536
                }
            }
        },
        "./node_modules/core-js/modules/_to-absolute-index.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_to-integer.js"),
                i = Math.max,
                o = Math.min;
            e.exports = function (e, t) {
                return (e = r(e)) < 0 ? i(e + t, 0) : o(e, t)
            }
        },
        "./node_modules/core-js/modules/_to-integer.js": function (e, t) {
            var n = Math.ceil,
                r = Math.floor;
            e.exports = function (e) {
                return isNaN(e = +e) ? 0 : (e > 0 ? r : n)(e)
            }
        },
        "./node_modules/core-js/modules/_to-iobject.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_iobject.js"),
                i = n("./node_modules/core-js/modules/_defined.js");
            e.exports = function (e) {
                return r(i(e))
            }
        },
        "./node_modules/core-js/modules/_to-length.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_to-integer.js"),
                i = Math.min;
            e.exports = function (e) {
                return e > 0 ? i(r(e), 9007199254740991) : 0
            }
        },
        "./node_modules/core-js/modules/_to-object.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_defined.js");
            e.exports = function (e) {
                return Object(r(e))
            }
        },
        "./node_modules/core-js/modules/_to-primitive.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_is-object.js");
            e.exports = function (e, t) {
                if (!r(e)) return e;
                var n, i;
                if (t && "function" == typeof (n = e.toString) && !r(i = n.call(e))) return i;
                if ("function" == typeof (n = e.valueOf) && !r(i = n.call(e))) return i;
                if (!t && "function" == typeof (n = e.toString) && !r(i = n.call(e))) return i;
                throw TypeError("Can't convert object to primitive value")
            }
        },
        "./node_modules/core-js/modules/_uid.js": function (e, t) {
            var n = 0,
                r = Math.random();
            e.exports = function (e) {
                return "Symbol(".concat(void 0 === e ? "" : e, ")_", (++n + r).toString(36))
            }
        },
        "./node_modules/core-js/modules/_validate-collection.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_is-object.js");
            e.exports = function (e, t) {
                if (!r(e) || e._t !== t) throw TypeError("Incompatible receiver, " + t + " required!");
                return e
            }
        },
        "./node_modules/core-js/modules/_wks.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_shared.js")("wks"),
                i = n("./node_modules/core-js/modules/_uid.js"),
                o = n("./node_modules/core-js/modules/_global.js").Symbol,
                a = "function" == typeof o;
            (e.exports = function (e) {
                return r[e] || (r[e] = a && o[e] || (a ? o : i)("Symbol." + e))
            }).store = r
        },
        "./node_modules/core-js/modules/core.get-iterator-method.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_classof.js"),
                i = n("./node_modules/core-js/modules/_wks.js")("iterator"),
                o = n("./node_modules/core-js/modules/_iterators.js");
            e.exports = n("./node_modules/core-js/modules/_core.js").getIteratorMethod = function (e) {
                if (null != e) return e[i] || e["@@iterator"] || o[r(e)]
            }
        },
        "./node_modules/core-js/modules/es6.array.from.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/core-js/modules/_ctx.js"),
                i = n("./node_modules/core-js/modules/_export.js"),
                o = n("./node_modules/core-js/modules/_to-object.js"),
                a = n("./node_modules/core-js/modules/_iter-call.js"),
                s = n("./node_modules/core-js/modules/_is-array-iter.js"),
                c = n("./node_modules/core-js/modules/_to-length.js"),
                l = n("./node_modules/core-js/modules/_create-property.js"),
                u = n("./node_modules/core-js/modules/core.get-iterator-method.js");
            i(i.S + i.F * !n("./node_modules/core-js/modules/_iter-detect.js")((function (e) {
                Array.from(e)
            })), "Array", {
                from: function (e) {
                    var t, n, i, h, d = o(e),
                        p = "function" == typeof this ? this : Array,
                        f = arguments.length,
                        m = f > 1 ? arguments[1] : void 0,
                        g = void 0 !== m,
                        v = 0,
                        y = u(d);
                    if (g && (m = r(m, f > 2 ? arguments[2] : void 0, 2)), null == y || p == Array && s(y))
                        for (n = new p(t = c(d.length)); t > v; v++) l(n, v, g ? m(d[v], v) : d[v]);
                    else
                        for (h = y.call(d), n = new p; !(i = h.next()).done; v++) l(n, v, g ? a(h, m, [i.value, v], !0) : i.value);
                    return n.length = v, n
                }
            })
        },
        "./node_modules/core-js/modules/es6.array.iterator.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/core-js/modules/_add-to-unscopables.js"),
                i = n("./node_modules/core-js/modules/_iter-step.js"),
                o = n("./node_modules/core-js/modules/_iterators.js"),
                a = n("./node_modules/core-js/modules/_to-iobject.js");
            e.exports = n("./node_modules/core-js/modules/_iter-define.js")(Array, "Array", (function (e, t) {
                this._t = a(e), this._i = 0, this._k = t
            }), (function () {
                var e = this._t,
                    t = this._k,
                    n = this._i++;
                return !e || n >= e.length ? (this._t = void 0, i(1)) : i(0, "keys" == t ? n : "values" == t ? e[n] : [n, e[n]])
            }), "values"), o.Arguments = o.Array, r("keys"), r("values"), r("entries")
        },
        "./node_modules/core-js/modules/es6.map.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/core-js/modules/_collection-strong.js"),
                i = n("./node_modules/core-js/modules/_validate-collection.js");
            e.exports = n("./node_modules/core-js/modules/_collection.js")("Map", (function (e) {
                return function () {
                    return e(this, arguments.length > 0 ? arguments[0] : void 0)
                }
            }), {
                get: function (e) {
                    var t = r.getEntry(i(this, "Map"), e);
                    return t && t.v
                },
                set: function (e, t) {
                    return r.def(i(this, "Map"), 0 === e ? 0 : e, t)
                }
            }, r, !0)
        },
        "./node_modules/core-js/modules/es6.object.assign.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_export.js");
            r(r.S + r.F, "Object", {
                assign: n("./node_modules/core-js/modules/_object-assign.js")
            })
        },
        "./node_modules/core-js/modules/es6.object.to-string.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/core-js/modules/_classof.js"),
                i = {};
            i[n("./node_modules/core-js/modules/_wks.js")("toStringTag")] = "z", i + "" != "[object z]" && n("./node_modules/core-js/modules/_redefine.js")(Object.prototype, "toString", (function () {
                return "[object " + r(this) + "]"
            }), !0)
        },
        "./node_modules/core-js/modules/es6.set.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/core-js/modules/_collection-strong.js"),
                i = n("./node_modules/core-js/modules/_validate-collection.js");
            e.exports = n("./node_modules/core-js/modules/_collection.js")("Set", (function (e) {
                return function () {
                    return e(this, arguments.length > 0 ? arguments[0] : void 0)
                }
            }), {
                add: function (e) {
                    return r.def(i(this, "Set"), e = 0 === e ? 0 : e, e)
                }
            }, r)
        },
        "./node_modules/core-js/modules/es6.string.iterator.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/core-js/modules/_string-at.js")(!0);
            n("./node_modules/core-js/modules/_iter-define.js")(String, "String", (function (e) {
                this._t = String(e), this._i = 0
            }), (function () {
                var e, t = this._t,
                    n = this._i;
                return n >= t.length ? {
                    value: void 0,
                    done: !0
                } : (e = r(t, n), this._i += e.length, {
                    value: e,
                    done: !1
                })
            }))
        },
        "./node_modules/core-js/modules/es6.weak-map.js": function (e, t, n) {
            "use strict";
            var r, i = n("./node_modules/core-js/modules/_global.js"),
                o = n("./node_modules/core-js/modules/_array-methods.js")(0),
                a = n("./node_modules/core-js/modules/_redefine.js"),
                s = n("./node_modules/core-js/modules/_meta.js"),
                c = n("./node_modules/core-js/modules/_object-assign.js"),
                l = n("./node_modules/core-js/modules/_collection-weak.js"),
                u = n("./node_modules/core-js/modules/_is-object.js"),
                h = n("./node_modules/core-js/modules/_validate-collection.js"),
                d = n("./node_modules/core-js/modules/_validate-collection.js"),
                p = !i.ActiveXObject && "ActiveXObject" in i,
                f = s.getWeak,
                m = Object.isExtensible,
                g = l.ufstore,
                v = function (e) {
                    return function () {
                        return e(this, arguments.length > 0 ? arguments[0] : void 0)
                    }
                },
                y = {
                    get: function (e) {
                        if (u(e)) {
                            var t = f(e);
                            return !0 === t ? g(h(this, "WeakMap")).get(e) : t ? t[this._i] : void 0
                        }
                    },
                    set: function (e, t) {
                        return l.def(h(this, "WeakMap"), e, t)
                    }
                },
                _ = e.exports = n("./node_modules/core-js/modules/_collection.js")("WeakMap", v, y, l, !0, !0);
            d && p && (c((r = l.getConstructor(v, "WeakMap")).prototype, y), s.NEED = !0, o(["delete", "has", "get", "set"], (function (e) {
                var t = _.prototype,
                    n = t[e];
                a(t, e, (function (t, i) {
                    if (u(t) && !m(t)) {
                        this._f || (this._f = new r);
                        var o = this._f[e](t, i);
                        return "set" == e ? this : o
                    }
                    return n.call(this, t, i)
                }))
            })))
        },
        "./node_modules/core-js/modules/es7.map.from.js": function (e, t, n) {
            n("./node_modules/core-js/modules/_set-collection-from.js")("Map")
        },
        "./node_modules/core-js/modules/es7.map.of.js": function (e, t, n) {
            n("./node_modules/core-js/modules/_set-collection-of.js")("Map")
        },
        "./node_modules/core-js/modules/es7.map.to-json.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_export.js");
            r(r.P + r.R, "Map", {
                toJSON: n("./node_modules/core-js/modules/_collection-to-json.js")("Map")
            })
        },
        "./node_modules/core-js/modules/es7.set.from.js": function (e, t, n) {
            n("./node_modules/core-js/modules/_set-collection-from.js")("Set")
        },
        "./node_modules/core-js/modules/es7.set.of.js": function (e, t, n) {
            n("./node_modules/core-js/modules/_set-collection-of.js")("Set")
        },
        "./node_modules/core-js/modules/es7.set.to-json.js": function (e, t, n) {
            var r = n("./node_modules/core-js/modules/_export.js");
            r(r.P + r.R, "Set", {
                toJSON: n("./node_modules/core-js/modules/_collection-to-json.js")("Set")
            })
        },
        "./node_modules/core-js/modules/es7.weak-map.from.js": function (e, t, n) {
            n("./node_modules/core-js/modules/_set-collection-from.js")("WeakMap")
        },
        "./node_modules/core-js/modules/es7.weak-map.of.js": function (e, t, n) {
            n("./node_modules/core-js/modules/_set-collection-of.js")("WeakMap")
        },
        "./node_modules/core-js/modules/web.dom.iterable.js": function (e, t, n) {
            for (var r = n("./node_modules/core-js/modules/es6.array.iterator.js"), i = n("./node_modules/core-js/modules/_object-keys.js"), o = n("./node_modules/core-js/modules/_redefine.js"), a = n("./node_modules/core-js/modules/_global.js"), s = n("./node_modules/core-js/modules/_hide.js"), c = n("./node_modules/core-js/modules/_iterators.js"), l = n("./node_modules/core-js/modules/_wks.js"), u = l("iterator"), h = l("toStringTag"), d = c.Array, p = {
                    CSSRuleList: !0,
                    CSSStyleDeclaration: !1,
                    CSSValueList: !1,
                    ClientRectList: !1,
                    DOMRectList: !1,
                    DOMStringList: !1,
                    DOMTokenList: !0,
                    DataTransferItemList: !1,
                    FileList: !1,
                    HTMLAllCollection: !1,
                    HTMLCollection: !1,
                    HTMLFormElement: !1,
                    HTMLSelectElement: !1,
                    MediaList: !0,
                    MimeTypeArray: !1,
                    NamedNodeMap: !1,
                    NodeList: !0,
                    PaintRequestList: !1,
                    Plugin: !1,
                    PluginArray: !1,
                    SVGLengthList: !1,
                    SVGNumberList: !1,
                    SVGPathSegList: !1,
                    SVGPointList: !1,
                    SVGStringList: !1,
                    SVGTransformList: !1,
                    SourceBufferList: !1,
                    StyleSheetList: !0,
                    TextTrackCueList: !1,
                    TextTrackList: !1,
                    TouchList: !1
                }, f = i(p), m = 0; m < f.length; m++) {
                var g, v = f[m],
                    y = p[v],
                    _ = a[v],
                    x = _ && _.prototype;
                if (x && (x[u] || s(x, u, d), x[h] || s(x, h, v), c[v] = d, y))
                    for (g in r) x[g] || o(x, g, r[g], !0)
            }
        },
        "./node_modules/ev-emitter/ev-emitter.js": function (e, t, n) {
            var r, i;
            "undefined" != typeof window && window, void 0 === (i = "function" == typeof (r = function () {
                "use strict";

                function e() {}
                var t = e.prototype;
                return t.on = function (e, t) {
                    if (e && t) {
                        var n = this._events = this._events || {},
                            r = n[e] = n[e] || [];
                        return -1 == r.indexOf(t) && r.push(t), this
                    }
                }, t.once = function (e, t) {
                    if (e && t) {
                        this.on(e, t);
                        var n = this._onceEvents = this._onceEvents || {};
                        return (n[e] = n[e] || {})[t] = !0, this
                    }
                }, t.off = function (e, t) {
                    var n = this._events && this._events[e];
                    if (n && n.length) {
                        var r = n.indexOf(t);
                        return -1 != r && n.splice(r, 1), this
                    }
                }, t.emitEvent = function (e, t) {
                    var n = this._events && this._events[e];
                    if (n && n.length) {
                        n = n.slice(0), t = t || [];
                        for (var r = this._onceEvents && this._onceEvents[e], i = 0; i < n.length; i++) {
                            var o = n[i];
                            r && r[o] && (this.off(e, o), delete r[o]), o.apply(this, t)
                        }
                        return this
                    }
                }, t.allOff = function () {
                    delete this._events, delete this._onceEvents
                }, e
            }) ? r.call(t, n, t, e) : r) || (e.exports = i)
        },
        "./node_modules/gsap/CSSPlugin.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return fe
            }));
            var r, i, o, a, s, c, l, u, h = n("./node_modules/gsap/gsap-core.js"),
                d = {},
                p = 180 / Math.PI,
                f = Math.PI / 180,
                m = Math.atan2,
                g = /([A-Z])/g,
                v = /(?:left|right|width|margin|padding|x)/i,
                y = /[\s,\(]\S/,
                _ = {
                    autoAlpha: "opacity,visibility",
                    scale: "scaleX,scaleY",
                    alpha: "opacity"
                },
                x = function (e, t) {
                    return t.set(t.t, t.p, Math.round(1e4 * (t.s + t.c * e)) / 1e4 + t.u, t)
                },
                b = function (e, t) {
                    return t.set(t.t, t.p, 1 === e ? t.e : Math.round(1e4 * (t.s + t.c * e)) / 1e4 + t.u, t)
                },
                w = function (e, t) {
                    return t.set(t.t, t.p, e ? Math.round(1e4 * (t.s + t.c * e)) / 1e4 + t.u : t.b, t)
                },
                M = function (e, t) {
                    var n = t.s + t.c * e;
                    t.set(t.t, t.p, ~~(n + (n < 0 ? -.5 : .5)) + t.u, t)
                },
                T = function (e, t) {
                    return t.set(t.t, t.p, e ? t.e : t.b, t)
                },
                S = function (e, t) {
                    return t.set(t.t, t.p, 1 !== e ? t.b : t.e, t)
                },
                E = function (e, t, n) {
                    return e.style[t] = n
                },
                A = function (e, t, n) {
                    return e.style.setProperty(t, n)
                },
                j = function (e, t, n) {
                    return e._gsap[t] = n
                },
                L = function (e, t, n) {
                    return e._gsap.scaleX = e._gsap.scaleY = n
                },
                C = function (e, t, n, r, i) {
                    var o = e._gsap;
                    o.scaleX = o.scaleY = n, o.renderTransform(i, o)
                },
                P = function (e, t, n, r, i) {
                    var o = e._gsap;
                    o[t] = n, o.renderTransform(i, o)
                },
                O = "transform",
                R = O + "Origin",
                D = function (e, t) {
                    var n = i.createElementNS ? i.createElementNS((t || "http://www.w3.org/1999/xhtml").replace(/^https/, "http"), e) : i.createElement(e);
                    return n.style ? n : i.createElement(e)
                },
                N = function e(t, n, r) {
                    var i = getComputedStyle(t);
                    return i[n] || i.getPropertyValue(n.replace(g, "-$1").toLowerCase()) || i.getPropertyValue(n) || !r && e(t, k(n) || n, 1) || ""
                },
                I = "O,Moz,ms,Ms,Webkit".split(","),
                k = function (e, t, n) {
                    var r = (t || s).style,
                        i = 5;
                    if (e in r && !n) return e;
                    for (e = e.charAt(0).toUpperCase() + e.substr(1); i-- && !(I[i] + e in r););
                    return i < 0 ? null : (3 === i ? "ms" : i >= 0 ? I[i] : "") + e
                },
                z = function () {
                    "undefined" != typeof window && window.document && (r = window, i = r.document, o = i.documentElement, s = D("div") || {
                        style: {}
                    }, c = D("div"), O = k(O), R = O + "Origin", s.style.cssText = "border-width:0;line-height:0;position:absolute;padding:0", u = !!k("perspective"), a = 1)
                },
                B = function e(t) {
                    var n, r = D("svg", this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"),
                        i = this.parentNode,
                        a = this.nextSibling,
                        s = this.style.cssText;
                    if (o.appendChild(r), r.appendChild(this), this.style.display = "block", t) try {
                        n = this.getBBox(), this._gsapBBox = this.getBBox, this.getBBox = e
                    } catch (e) {} else this._gsapBBox && (n = this._gsapBBox());
                    return i && (a ? i.insertBefore(this, a) : i.appendChild(this)), o.removeChild(r), this.style.cssText = s, n
                },
                F = function (e, t) {
                    for (var n = t.length; n--;)
                        if (e.hasAttribute(t[n])) return e.getAttribute(t[n])
                },
                U = function (e) {
                    var t;
                    try {
                        t = e.getBBox()
                    } catch (n) {
                        t = B.call(e, !0)
                    }
                    return t && (t.width || t.height) || e.getBBox === B || (t = B.call(e, !0)), !t || t.width || t.x || t.y ? t : {
                        x: +F(e, ["x", "cx", "x1"]) || 0,
                        y: +F(e, ["y", "cy", "y1"]) || 0,
                        width: 0,
                        height: 0
                    }
                },
                H = function (e) {
                    return !(!e.getCTM || e.parentNode && !e.ownerSVGElement || !U(e))
                },
                G = function (e, t) {
                    if (t) {
                        var n = e.style;
                        t in d && t !== R && (t = O), n.removeProperty ? ("ms" !== t.substr(0, 2) && "webkit" !== t.substr(0, 6) || (t = "-" + t), n.removeProperty(t.replace(g, "-$1").toLowerCase())) : n.removeAttribute(t)
                    }
                },
                V = function (e, t, n, r, i, o) {
                    var a = new h.b(e._pt, t, n, 0, 1, o ? S : T);
                    return e._pt = a, a.b = r, a.e = i, e._props.push(n), a
                },
                W = {
                    deg: 1,
                    rad: 1,
                    turn: 1
                },
                q = function e(t, n, r, o) {
                    var a, c, l, u, p = parseFloat(r) || 0,
                        f = (r + "").trim().substr((p + "").length) || "px",
                        m = s.style,
                        g = v.test(n),
                        y = "svg" === t.tagName.toLowerCase(),
                        _ = (y ? "client" : "offset") + (g ? "Width" : "Height"),
                        x = "px" === o,
                        b = "%" === o;
                    return o === f || !p || W[o] || W[f] ? p : ("px" !== f && !x && (p = e(t, n, r, "px")), u = t.getCTM && H(t), b && (d[n] || ~n.indexOf("adius")) ? Object(h.s)(p / (u ? t.getBBox()[g ? "width" : "height"] : t[_]) * 100) : (m[g ? "width" : "height"] = 100 + (x ? f : o), c = ~n.indexOf("adius") || "em" === o && t.appendChild && !y ? t : t.parentNode, u && (c = (t.ownerSVGElement || {}).parentNode), c && c !== i && c.appendChild || (c = i.body), (l = c._gsap) && b && l.width && g && l.time === h.u.time ? Object(h.s)(p / l.width * 100) : ((b || "%" === f) && (m.position = N(t, "position")), c === t && (m.position = "static"), c.appendChild(s), a = s[_], c.removeChild(s), m.position = "absolute", g && b && ((l = Object(h.g)(c)).time = h.u.time, l.width = c[_]), Object(h.s)(x ? a * p / 100 : a && p ? 100 / a * p : 0))))
                },
                X = function (e, t, n, r) {
                    var i;
                    return a || z(), t in _ && "transform" !== t && ~(t = _[t]).indexOf(",") && (t = t.split(",")[0]), d[t] && "transform" !== t ? (i = ie(e, r), i = "transformOrigin" !== t ? i[t] : oe(N(e, R)) + " " + i.zOrigin + "px") : (!(i = e.style[t]) || "auto" === i || r || ~(i + "").indexOf("calc(")) && (i = Q[t] && Q[t](e, t, n) || N(e, t) || Object(h.h)(e, t) || ("opacity" === t ? 1 : 0)), n && !~(i + "").indexOf(" ") ? q(e, t, i, n) + n : i
                },
                Y = function (e, t, n, r) {
                    if (!n || "none" === n) {
                        var i = k(t, e, 1),
                            o = i && N(e, i, 1);
                        o && o !== n ? (t = i, n = o) : "borderColor" === t && (n = N(e, "borderTopColor"))
                    }
                    var a, s, c, l, u, d, p, f, m, g, v, y, _ = new h.b(this._pt, e.style, t, 0, 1, h.q),
                        x = 0,
                        b = 0;
                    if (_.b = n, _.e = r, n += "", "auto" === (r += "") && (e.style[t] = r, r = N(e, t) || r, e.style[t] = n), a = [n, r], Object(h.d)(a), r = a[1], c = (n = a[0]).match(h.n) || [], (r.match(h.n) || []).length) {
                        for (; s = h.n.exec(r);) p = s[0], m = r.substring(x, s.index), u ? u = (u + 1) % 5 : "rgba(" !== m.substr(-5) && "hsla(" !== m.substr(-5) || (u = 1), p !== (d = c[b++] || "") && (l = parseFloat(d) || 0, v = d.substr((l + "").length), (y = "=" === p.charAt(1) ? +(p.charAt(0) + "1") : 0) && (p = p.substr(2)), f = parseFloat(p), g = p.substr((f + "").length), x = h.n.lastIndex - g.length, g || (g = g || h.e.units[t] || v, x === r.length && (r += g, _.e += g)), v !== g && (l = q(e, t, d, g) || 0), _._pt = {
                            _next: _._pt,
                            p: m || 1 === b ? m : ",",
                            s: l,
                            c: y ? y * f : f - l,
                            m: u && u < 4 ? Math.round : 0
                        });
                        _.c = x < r.length ? r.substring(x, r.length) : ""
                    } else _.r = "display" === t && "none" === r ? S : T;
                    return h.p.test(r) && (_.e = 0), this._pt = _, _
                },
                J = {
                    top: "0%",
                    bottom: "100%",
                    left: "0%",
                    right: "100%",
                    center: "50%"
                },
                Z = function (e, t) {
                    if (t.tween && t.tween._time === t.tween._dur) {
                        var n, r, i, o = t.t,
                            a = o.style,
                            s = t.u,
                            c = o._gsap;
                        if ("all" === s || !0 === s) a.cssText = "", r = 1;
                        else
                            for (i = (s = s.split(",")).length; --i > -1;) n = s[i], d[n] && (r = 1, n = "transformOrigin" === n ? R : O), G(o, n);
                        r && (G(o, O), c && (c.svg && o.removeAttribute("transform"), ie(o, 1), c.uncache = 1))
                    }
                },
                Q = {
                    clearProps: function (e, t, n, r, i) {
                        if ("isFromStart" !== i.data) {
                            var o = e._pt = new h.b(e._pt, t, n, 0, 0, Z);
                            return o.u = r, o.pr = -10, o.tween = i, e._props.push(n), 1
                        }
                    }
                },
                $ = [1, 0, 0, 1, 0, 0],
                K = {},
                ee = function (e) {
                    return "matrix(1, 0, 0, 1, 0, 0)" === e || "none" === e || !e
                },
                te = function (e) {
                    var t = N(e, O);
                    return ee(t) ? $ : t.substr(7).match(h.m).map(h.s)
                },
                ne = function (e, t) {
                    var n, r, i, a, s = e._gsap || Object(h.g)(e),
                        c = e.style,
                        l = te(e);
                    return s.svg && e.getAttribute("transform") ? "1,0,0,1,0,0" === (l = [(i = e.transform.baseVal.consolidate().matrix).a, i.b, i.c, i.d, i.e, i.f]).join(",") ? $ : l : (l !== $ || e.offsetParent || e === o || s.svg || (i = c.display, c.display = "block", (n = e.parentNode) && e.offsetParent || (a = 1, r = e.nextSibling, o.appendChild(e)), l = te(e), i ? c.display = i : G(e, "display"), a && (r ? n.insertBefore(e, r) : n ? n.appendChild(e) : o.removeChild(e))), t && l.length > 6 ? [l[0], l[1], l[4], l[5], l[12], l[13]] : l)
                },
                re = function (e, t, n, r, i, o) {
                    var a, s, c, l = e._gsap,
                        u = i || ne(e, !0),
                        h = l.xOrigin || 0,
                        d = l.yOrigin || 0,
                        p = l.xOffset || 0,
                        f = l.yOffset || 0,
                        m = u[0],
                        g = u[1],
                        v = u[2],
                        y = u[3],
                        _ = u[4],
                        x = u[5],
                        b = t.split(" "),
                        w = parseFloat(b[0]) || 0,
                        M = parseFloat(b[1]) || 0;
                    n ? u !== $ && (s = m * y - g * v) && (c = w * (-g / s) + M * (m / s) - (m * x - g * _) / s, w = w * (y / s) + M * (-v / s) + (v * x - y * _) / s, M = c) : (w = (a = U(e)).x + (~b[0].indexOf("%") ? w / 100 * a.width : w), M = a.y + (~(b[1] || b[0]).indexOf("%") ? M / 100 * a.height : M)), r || !1 !== r && l.smooth ? (_ = w - h, x = M - d, l.xOffset = p + (_ * m + x * v) - _, l.yOffset = f + (_ * g + x * y) - x) : l.xOffset = l.yOffset = 0, l.xOrigin = w, l.yOrigin = M, l.smooth = !!r, l.origin = t, l.originIsAbsolute = !!n, e.style[R] = "0px 0px", o && (V(o, l, "xOrigin", h, w), V(o, l, "yOrigin", d, M), V(o, l, "xOffset", p, l.xOffset), V(o, l, "yOffset", f, l.yOffset)), e.setAttribute("data-svg-origin", w + " " + M)
                },
                ie = function (e, t) {
                    var n = e._gsap || new h.a(e);
                    if ("x" in n && !t && !n.uncache) return n;
                    var r, i, o, a, s, c, l, d, g, v, y, _, x, b, w, M, T, S, E, A, j, L, C, P, D, I, k, z, B, F, U, G, V = e.style,
                        W = n.scaleX < 0,
                        q = N(e, R) || "0";
                    return r = i = o = c = l = d = g = v = y = 0, a = s = 1, n.svg = !(!e.getCTM || !H(e)), b = ne(e, n.svg), n.svg && (P = !n.uncache && e.getAttribute("data-svg-origin"), re(e, P || q, !!P || n.originIsAbsolute, !1 !== n.smooth, b)), _ = n.xOrigin || 0, x = n.yOrigin || 0, b !== $ && (S = b[0], E = b[1], A = b[2], j = b[3], r = L = b[4], i = C = b[5], 6 === b.length ? (a = Math.sqrt(S * S + E * E), s = Math.sqrt(j * j + A * A), c = S || E ? m(E, S) * p : 0, (g = A || j ? m(A, j) * p + c : 0) && (s *= Math.cos(g * f)), n.svg && (r -= _ - (_ * S + x * A), i -= x - (_ * E + x * j))) : (G = b[6], F = b[7], k = b[8], z = b[9], B = b[10], U = b[11], r = b[12], i = b[13], o = b[14], l = (w = m(G, B)) * p, w && (P = L * (M = Math.cos(-w)) + k * (T = Math.sin(-w)), D = C * M + z * T, I = G * M + B * T, k = L * -T + k * M, z = C * -T + z * M, B = G * -T + B * M, U = F * -T + U * M, L = P, C = D, G = I), d = (w = m(-A, B)) * p, w && (M = Math.cos(-w), U = j * (T = Math.sin(-w)) + U * M, S = P = S * M - k * T, E = D = E * M - z * T, A = I = A * M - B * T), c = (w = m(E, S)) * p, w && (P = S * (M = Math.cos(w)) + E * (T = Math.sin(w)), D = L * M + C * T, E = E * M - S * T, C = C * M - L * T, S = P, L = D), l && Math.abs(l) + Math.abs(c) > 359.9 && (l = c = 0, d = 180 - d), a = Object(h.s)(Math.sqrt(S * S + E * E + A * A)), s = Object(h.s)(Math.sqrt(C * C + G * G)), w = m(L, C), g = Math.abs(w) > 2e-4 ? w * p : 0, y = U ? 1 / (U < 0 ? -U : U) : 0), n.svg && (P = e.getAttribute("transform"), n.forceCSS = e.setAttribute("transform", "") || !ee(N(e, O)), P && e.setAttribute("transform", P))), Math.abs(g) > 90 && Math.abs(g) < 270 && (W ? (a *= -1, g += c <= 0 ? 180 : -180, c += c <= 0 ? 180 : -180) : (s *= -1, g += g <= 0 ? 180 : -180)), n.x = ((n.xPercent = r && Math.round(e.offsetWidth / 2) === Math.round(-r) ? -50 : 0) ? 0 : r) + "px", n.y = ((n.yPercent = i && Math.round(e.offsetHeight / 2) === Math.round(-i) ? -50 : 0) ? 0 : i) + "px", n.z = o + "px", n.scaleX = Object(h.s)(a), n.scaleY = Object(h.s)(s), n.rotation = Object(h.s)(c) + "deg", n.rotationX = Object(h.s)(l) + "deg", n.rotationY = Object(h.s)(d) + "deg", n.skewX = g + "deg", n.skewY = v + "deg", n.transformPerspective = y + "px", (n.zOrigin = parseFloat(q.split(" ")[2]) || 0) && (V[R] = oe(q)), n.xOffset = n.yOffset = 0, n.force3D = h.e.force3D, n.renderTransform = n.svg ? le : u ? ce : se, n.uncache = 0, n
                },
                oe = function (e) {
                    return (e = e.split(" "))[0] + " " + e[1]
                },
                ae = function (e, t, n) {
                    var r = Object(h.v)(t);
                    return Object(h.s)(parseFloat(t) + parseFloat(q(e, "x", n + "px", r))) + r
                },
                se = function (e, t) {
                    t.z = "0px", t.rotationY = t.rotationX = "0deg", t.force3D = 0, ce(e, t)
                },
                ce = function (e, t) {
                    var n = t || this,
                        r = n.xPercent,
                        i = n.yPercent,
                        o = n.x,
                        a = n.y,
                        s = n.z,
                        c = n.rotation,
                        l = n.rotationY,
                        u = n.rotationX,
                        h = n.skewX,
                        d = n.skewY,
                        p = n.scaleX,
                        m = n.scaleY,
                        g = n.transformPerspective,
                        v = n.force3D,
                        y = n.target,
                        _ = n.zOrigin,
                        x = "",
                        b = "auto" === v && e && 1 !== e || !0 === v;
                    if (_ && ("0deg" !== u || "0deg" !== l)) {
                        var w, M = parseFloat(l) * f,
                            T = Math.sin(M),
                            S = Math.cos(M);
                        M = parseFloat(u) * f, w = Math.cos(M), o = ae(y, o, T * w * -_), a = ae(y, a, -Math.sin(M) * -_), s = ae(y, s, S * w * -_ + _)
                    }
                    "0px" !== g && (x += "perspective(" + g + ") "), (r || i) && (x += "translate(" + r + "%, " + i + "%) "), (b || "0px" !== o || "0px" !== a || "0px" !== s) && (x += "0px" !== s || b ? "translate3d(" + o + ", " + a + ", " + s + ") " : "translate(" + o + ", " + a + ") "), "0deg" !== c && (x += "rotate(" + c + ") "), "0deg" !== l && (x += "rotateY(" + l + ") "), "0deg" !== u && (x += "rotateX(" + u + ") "), "0deg" === h && "0deg" === d || (x += "skew(" + h + ", " + d + ") "), 1 === p && 1 === m || (x += "scale(" + p + ", " + m + ") "), y.style[O] = x || "translate(0, 0)"
                },
                le = function (e, t) {
                    var n, r, i, o, a, s = t || this,
                        c = s.xPercent,
                        l = s.yPercent,
                        u = s.x,
                        d = s.y,
                        p = s.rotation,
                        m = s.skewX,
                        g = s.skewY,
                        v = s.scaleX,
                        y = s.scaleY,
                        _ = s.target,
                        x = s.xOrigin,
                        b = s.yOrigin,
                        w = s.xOffset,
                        M = s.yOffset,
                        T = s.forceCSS,
                        S = parseFloat(u),
                        E = parseFloat(d);
                    p = parseFloat(p), m = parseFloat(m), (g = parseFloat(g)) && (m += g = parseFloat(g), p += g), p || m ? (p *= f, m *= f, n = Math.cos(p) * v, r = Math.sin(p) * v, i = Math.sin(p - m) * -y, o = Math.cos(p - m) * y, m && (g *= f, a = Math.tan(m - g), i *= a = Math.sqrt(1 + a * a), o *= a, g && (a = Math.tan(g), n *= a = Math.sqrt(1 + a * a), r *= a)), n = Object(h.s)(n), r = Object(h.s)(r), i = Object(h.s)(i), o = Object(h.s)(o)) : (n = v, o = y, r = i = 0), (S && !~(u + "").indexOf("px") || E && !~(d + "").indexOf("px")) && (S = q(_, "x", u, "px"), E = q(_, "y", d, "px")), (x || b || w || M) && (S = Object(h.s)(S + x - (x * n + b * i) + w), E = Object(h.s)(E + b - (x * r + b * o) + M)), (c || l) && (a = _.getBBox(), S = Object(h.s)(S + c / 100 * a.width), E = Object(h.s)(E + l / 100 * a.height)), a = "matrix(" + n + "," + r + "," + i + "," + o + "," + S + "," + E + ")", _.setAttribute("transform", a), T && (_.style[O] = a)
                },
                ue = function (e, t, n, r, i, o) {
                    var a, s, c = Object(h.j)(i),
                        l = parseFloat(i) * (c && ~i.indexOf("rad") ? p : 1),
                        u = o ? l * o : l - r,
                        d = r + u + "deg";
                    return c && ("short" === (a = i.split("_")[1]) && (u %= 360) !== u % 180 && (u += u < 0 ? 360 : -360), "cw" === a && u < 0 ? u = (u + 36e9) % 360 - 360 * ~~(u / 360) : "ccw" === a && u > 0 && (u = (u - 36e9) % 360 - 360 * ~~(u / 360))), e._pt = s = new h.b(e._pt, t, n, r, u, b), s.e = d, s.u = "deg", e._props.push(n), s
                },
                he = function (e, t, n) {
                    var r, o, a, s, l, u, p, f = c.style,
                        m = n._gsap;
                    for (o in f.cssText = getComputedStyle(n).cssText + ";position:absolute;display:block;", f[O] = t, i.body.appendChild(c), r = ie(c, 1), d)(a = m[o]) !== (s = r[o]) && "perspective,force3D,transformOrigin,svgOrigin".indexOf(o) < 0 && (l = Object(h.v)(a) !== (p = Object(h.v)(s)) ? q(n, o, a, p) : parseFloat(a), u = parseFloat(s), e._pt = new h.b(e._pt, m, o, l, u - l, x), e._pt.u = p || 0, e._props.push(o));
                    i.body.removeChild(c)
                };
            Object(h.f)("padding,margin,Width,Radius", (function (e, t) {
                var n = "Top",
                    r = "Right",
                    i = "Bottom",
                    o = "Left",
                    a = (t < 3 ? [n, r, i, o] : [n + o, n + r, i + r, i + o]).map((function (n) {
                        return t < 2 ? e + n : "border" + n + e
                    }));
                Q[t > 1 ? "border" + e : e] = function (e, t, n, r, i) {
                    var o, s;
                    if (arguments.length < 4) return o = a.map((function (t) {
                        return X(e, t, n)
                    })), 5 === (s = o.join(" ")).split(o[0]).length ? o[0] : s;
                    o = (r + "").split(" "), s = {}, a.forEach((function (e, t) {
                        return s[e] = o[t] = o[t] || o[(t - 1) / 2 | 0]
                    })), e.init(t, s, i)
                }
            }));
            var de, pe, fe = {
                name: "css",
                register: z,
                targetTest: function (e) {
                    return e.style && e.nodeType
                },
                init: function (e, t, n, r, i) {
                    var o, s, c, l, u, p, f, m, g, v, b, T, S, E, A, j, L, C, P, R = this._props,
                        D = e.style;
                    for (f in a || z(), t)
                        if ("autoRound" !== f && (s = t[f], !h.o[f] || !Object(h.c)(f, t, n, r, e, i)))
                            if (u = typeof s, p = Q[f], "function" === u && (u = typeof (s = s.call(n, r, e, i))), "string" === u && ~s.indexOf("random(") && (s = Object(h.r)(s)), p) p(this, e, f, s, n) && (A = 1);
                            else if ("--" === f.substr(0, 2)) this.add(D, "setProperty", getComputedStyle(e).getPropertyValue(f) + "", s + "", r, i, 0, 0, f);
                    else {
                        if (o = X(e, f), l = parseFloat(o), (v = "string" === u && "=" === s.charAt(1) ? +(s.charAt(0) + "1") : 0) && (s = s.substr(2)), c = parseFloat(s), f in _ && ("autoAlpha" === f && (1 === l && "hidden" === X(e, "visibility") && c && (l = 0), V(this, D, "visibility", l ? "inherit" : "hidden", c ? "inherit" : "hidden", !c)), "scale" !== f && "transform" !== f && ~(f = _[f]).indexOf(",") && (f = f.split(",")[0])), b = f in d)
                            if (T || ((S = e._gsap).renderTransform || ie(e), E = !1 !== t.smoothOrigin && S.smooth, (T = this._pt = new h.b(this._pt, D, O, 0, 1, S.renderTransform, S, 0, -1)).dep = 1), "scale" === f) this._pt = new h.b(this._pt, S, "scaleY", S.scaleY, v ? v * c : c - S.scaleY), R.push("scaleY", f), f += "X";
                            else {
                                if ("transformOrigin" === f) {
                                    L = void 0, C = void 0, P = void 0, L = (j = s).split(" "), C = L[0], P = L[1] || "50%", "top" !== C && "bottom" !== C && "left" !== P && "right" !== P || (j = C, C = P, P = j), L[0] = J[C] || C, L[1] = J[P] || P, s = L.join(" "), S.svg ? re(e, s, 0, E, 0, this) : ((g = parseFloat(s.split(" ")[2]) || 0) !== S.zOrigin && V(this, S, "zOrigin", S.zOrigin, g), V(this, D, f, oe(o), oe(s)));
                                    continue
                                }
                                if ("svgOrigin" === f) {
                                    re(e, s, 1, E, 0, this);
                                    continue
                                }
                                if (f in K) {
                                    ue(this, S, f, l, s, v);
                                    continue
                                }
                                if ("smoothOrigin" === f) {
                                    V(this, S, "smooth", S.smooth, s);
                                    continue
                                }
                                if ("force3D" === f) {
                                    S[f] = s;
                                    continue
                                }
                                if ("transform" === f) {
                                    he(this, s, e);
                                    continue
                                }
                            }
                        else f in D || (f = k(f) || f);
                        if (b || (c || 0 === c) && (l || 0 === l) && !y.test(s) && f in D) c || (c = 0), (m = (o + "").substr((l + "").length)) !== (g = (s + "").substr((c + "").length) || (f in h.e.units ? h.e.units[f] : m)) && (l = q(e, f, o, g)), this._pt = new h.b(this._pt, b ? S : D, f, l, v ? v * c : c - l, "px" !== g || !1 === t.autoRound || b ? x : M), this._pt.u = g || 0, m !== g && (this._pt.b = o, this._pt.r = w);
                        else if (f in D) Y.call(this, e, f, o, s);
                        else {
                            if (!(f in e)) {
                                Object(h.l)(f, s);
                                continue
                            }
                            this.add(e, f, e[f], s, r, i)
                        }
                        R.push(f)
                    }
                    A && Object(h.t)(this)
                },
                get: X,
                aliases: _,
                getSetter: function (e, t, n) {
                    var r = _[t];
                    return r && r.indexOf(",") < 0 && (t = r), t in d && t !== R && (e._gsap.x || X(e, "x")) ? n && l === n ? "scale" === t ? L : j : (l = n || {}) && ("scale" === t ? C : P) : e.style && !Object(h.k)(e.style[t]) ? E : ~t.indexOf("-") ? A : Object(h.i)(e, t)
                },
                core: {
                    _removeProperty: G,
                    _getMatrix: ne
                }
            };
            h.w.utils.checkPrefix = k, de = "rotation,rotationX,rotationY,skewX,skewY", pe = Object(h.f)("x,y,z,scale,scaleX,scaleY,xPercent,yPercent," + de + ",transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective", (function (e) {
                d[e] = 1
            })), Object(h.f)(de, (function (e) {
                h.e.units[e] = "deg", K[e] = 1
            })), _[pe[13]] = "x,y,z,scale,scaleX,scaleY,xPercent,yPercent," + de, Object(h.f)("0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY", (function (e) {
                var t = e.split(":");
                _[t[1]] = pe[t[0]]
            })), Object(h.f)("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective", (function (e) {
                h.e.units[e] = "px"
            })), h.w.registerPlugin(fe)
        },
        "./node_modules/gsap/ScrollToPlugin.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return y
            }));
            var r, i, o, a, s, c, l, u = function () {
                    return "undefined" != typeof window
                },
                h = function () {
                    return r || u() && (r = window.gsap) && r.registerPlugin && r
                },
                d = function (e) {
                    return "string" == typeof e
                },
                p = function (e, t) {
                    var n = "x" === t ? "Width" : "Height",
                        r = "scroll" + n,
                        i = "client" + n;
                    return e === o || e === a || e === s ? Math.max(a[r], s[r]) - (o["inner" + n] || a[i] || s[i]) : e[r] - e["offset" + n]
                },
                f = function (e, t) {
                    var n = "scroll" + ("x" === t ? "Left" : "Top");
                    return e === o && (null != e.pageXOffset ? n = "page" + t.toUpperCase() + "Offset" : e = null != a[n] ? a : s),
                        function () {
                            return e[n]
                        }
                },
                m = function (e, t) {
                    var n = c(e)[0].getBoundingClientRect(),
                        r = !t || t === o || t === s,
                        i = r ? {
                            top: a.clientTop - (o.pageYOffset || a.scrollTop || s.scrollTop || 0),
                            left: a.clientLeft - (o.pageXOffset || a.scrollLeft || s.scrollLeft || 0)
                        } : t.getBoundingClientRect(),
                        l = {
                            x: n.left - i.left,
                            y: n.top - i.top
                        };
                    return !r && t && (l.x += f(t, "x")(), l.y += f(t, "y")()), l
                },
                g = function (e, t, n, r) {
                    return isNaN(e) || "object" == typeof e ? d(e) && "=" === e.charAt(1) ? parseFloat(e.substr(2)) * ("-" === e.charAt(0) ? -1 : 1) + r : "max" === e ? p(t, n) : Math.min(p(t, n), m(e, t)[n]) : parseFloat(e)
                },
                v = function () {
                    r = h(), u() && r && document.body && (o = window, s = document.body, a = document.documentElement, c = r.utils.toArray, r.config({
                        autoKillThreshold: 7
                    }), l = r.config(), i = 1)
                },
                y = {
                    version: "3.4.2",
                    name: "scrollTo",
                    rawVars: 1,
                    register: function (e) {
                        r = e, v()
                    },
                    init: function (e, t, n, r, a) {
                        i || v();
                        this.isWin = e === o, this.target = e, this.tween = n, "object" != typeof t ? d((t = {
                            y: t
                        }).y) && "max" !== t.y && "=" !== t.y.charAt(1) && (t.x = t.y) : t.nodeType && (t = {
                            y: t,
                            x: t
                        }), this.vars = t, this.autoKill = !!t.autoKill, this.getX = f(e, "x"), this.getY = f(e, "y"), this.x = this.xPrev = this.getX(), this.y = this.yPrev = this.getY(), null != t.x ? (this.add(this, "x", this.x, g(t.x, e, "x", this.x) - (t.offsetX || 0), r, a, Math.round), this._props.push("scrollTo_x")) : this.skipX = 1, null != t.y ? (this.add(this, "y", this.y, g(t.y, e, "y", this.y) - (t.offsetY || 0), r, a, Math.round), this._props.push("scrollTo_y")) : this.skipY = 1
                    },
                    render: function (e, t) {
                        for (var n, r, i, a, s, c = t._pt, u = t.target, h = t.tween, d = t.autoKill, f = t.xPrev, m = t.yPrev, g = t.isWin; c;) c.r(e, c.d), c = c._next;
                        n = g || !t.skipX ? t.getX() : f, i = (r = g || !t.skipY ? t.getY() : m) - m, a = n - f, s = l.autoKillThreshold, t.x < 0 && (t.x = 0), t.y < 0 && (t.y = 0), d && (!t.skipX && (a > s || a < -s) && n < p(u, "x") && (t.skipX = 1), !t.skipY && (i > s || i < -s) && r < p(u, "y") && (t.skipY = 1), t.skipX && t.skipY && (h.kill(), t.vars.onAutoKill && t.vars.onAutoKill.apply(h, t.vars.onAutoKillParams || []))), g ? o.scrollTo(t.skipX ? n : t.x, t.skipY ? r : t.y) : (t.skipY || (u.scrollTop = t.y), t.skipX || (u.scrollLeft = t.x)), t.xPrev = t.x, t.yPrev = t.y
                    },
                    kill: function (e) {
                        var t = "scrollTo" === e;
                        (t || "scrollTo_x" === e) && (this.skipX = 1), (t || "scrollTo_y" === e) && (this.skipY = 1)
                    }
                };
            y.max = p, y.getOffset = m, y.buildGetter = f, h() && r.registerPlugin(y)
        },
        "./node_modules/gsap/ScrollTrigger.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return He
            }));
            var r, i, o, a, s, c, l, u, h, d, p, f, m, g, v, y, _, x, b, w, M, T, S, E, A, j = 1,
                L = [],
                C = [],
                P = Date.now,
                O = P(),
                R = 0,
                D = 1,
                N = function (e) {
                    return e
                },
                I = function () {
                    return "undefined" != typeof window
                },
                k = function () {
                    return r || I() && (r = window.gsap) && r.registerPlugin && r
                },
                z = function (e) {
                    return !!~l.indexOf(e)
                },
                B = function (e, t) {
                    return ~L.indexOf(e) && L[L.indexOf(e) + 1][t]
                },
                F = function (e, t) {
                    var n = t.s,
                        r = t.sc,
                        i = C.indexOf(e),
                        o = ~i ? C[i + 1] : B(e, n) || (z(e) ? r : function (t) {
                            return arguments.length ? e[n] = t : e[n]
                        });
                    return !~i && C.push(e, o), o
                },
                U = function (e) {
                    return B(e, "getBoundingClientRect") || (z(e) ? function () {
                        return ze.width = o.innerWidth, ze.height = o.innerHeight, ze
                    } : function () {
                        return re(e)
                    })
                },
                H = function (e, t) {
                    var n = t.s,
                        r = t.d2,
                        i = t.d,
                        a = t.a;
                    return (n = "scroll" + r) && (a = B(e, n)) ? a() - U(e)()[i] : z(e) ? Math.max(s[n], c[n]) - (o["inner" + r] || s["client" + r] || c["client" + r]) : e[n] - e["offset" + r]
                },
                G = function (e, t) {
                    for (var n = 0; n < M.length; n += 3)(!t || ~t.indexOf(M[n + 1])) && e(M[n], M[n + 1], M[n + 2])
                },
                V = function (e) {
                    return "string" == typeof e
                },
                W = function (e) {
                    return "function" == typeof e
                },
                q = function (e) {
                    return "number" == typeof e
                },
                X = function (e) {
                    return "object" == typeof e
                },
                Y = function (e) {
                    return W(e) && e()
                },
                J = function (e, t) {
                    return function () {
                        var n = Y(e),
                            r = Y(t);
                        return function () {
                            Y(n), Y(r)
                        }
                    }
                },
                Z = Math.abs,
                Q = "padding",
                $ = "px",
                K = {
                    s: "scrollLeft",
                    p: "left",
                    p2: "Left",
                    os: "right",
                    os2: "Right",
                    d: "width",
                    d2: "Width",
                    a: "x",
                    sc: function (e) {
                        return arguments.length ? o.scrollTo(e, ee.sc()) : o.pageXOffset || a.scrollLeft || s.scrollLeft || c.scrollLeft || 0
                    }
                },
                ee = {
                    s: "scrollTop",
                    p: "top",
                    p2: "Top",
                    os: "bottom",
                    os2: "Bottom",
                    d: "height",
                    d2: "Height",
                    a: "y",
                    op: K,
                    sc: function (e) {
                        return arguments.length ? o.scrollTo(K.sc(), e) : o.pageYOffset || a.scrollTop || s.scrollTop || c.scrollTop || 0
                    }
                },
                te = function (e) {
                    return o.getComputedStyle(e)
                },
                ne = function (e, t) {
                    for (var n in t) n in e || (e[n] = t[n]);
                    return e
                },
                re = function (e, t) {
                    var n = t && "matrix(1, 0, 0, 1, 0, 0)" !== te(e)[_] && r.to(e, {
                            x: 0,
                            y: 0,
                            xPercent: 0,
                            yPercent: 0,
                            rotation: 0,
                            rotationX: 0,
                            rotationY: 0,
                            scale: 1,
                            skewX: 0,
                            skewY: 0
                        }).progress(1),
                        i = e.getBoundingClientRect();
                    return n && n.progress(0).kill(), i
                },
                ie = function (e, t) {
                    var n = t.d2;
                    return e["offset" + n] || e["client" + n] || 0
                },
                oe = function (e, t, n, r) {
                    return n.split(",").forEach((function (n) {
                        return e(t, n, r)
                    }))
                },
                ae = function (e, t, n) {
                    return e.addEventListener(t, n, {
                        passive: !0
                    })
                },
                se = function (e, t, n) {
                    return e.removeEventListener(t, n)
                },
                ce = {
                    startColor: "green",
                    endColor: "red",
                    indent: 0,
                    fontSize: "16px",
                    fontWeight: "normal"
                },
                le = {
                    toggleActions: "play",
                    anticipatePin: 0
                },
                ue = {
                    top: 0,
                    left: 0,
                    center: .5,
                    bottom: 1,
                    right: 1
                },
                he = function (e, t) {
                    if (V(e)) {
                        var n = e.indexOf("="),
                            r = ~n ? +(e.charAt(n - 1) + 1) * parseFloat(e.substr(n + 1)) : 0;
                        r && (e.indexOf("%") > n && (r *= t / 100), e = e.substr(0, n - 1)), e = r + (e in ue ? ue[e] * t : ~e.indexOf("%") ? parseFloat(e) * t / 100 : parseFloat(e) || 0)
                    }
                    return e
                },
                de = function (e, t, n, r, i, o, s) {
                    var l = i.startColor,
                        u = i.endColor,
                        h = i.fontSize,
                        d = i.indent,
                        p = i.fontWeight,
                        f = a.createElement("div"),
                        m = z(n) || "fixed" === B(n, "pinType"),
                        g = -1 !== e.indexOf("scroller"),
                        v = m ? c : n,
                        y = -1 !== e.indexOf("start"),
                        _ = y ? l : u,
                        x = "border-color:" + _ + ";font-size:" + h + ";color:" + _ + ";font-weight:" + p + ";pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;";
                    return x += "position:" + (g && m ? "fixed;" : "absolute;"), (g || !m) && (x += (r === ee ? "right" : "bottom") + ":" + (o + parseFloat(d)) + "px;"), s && (x += "box-sizing:border-box;text-align:left;width:" + s.offsetWidth + "px;"), f._isStart = y, f.setAttribute("class", "gsap-marker-" + e), f.style.cssText = x, f.innerText = t || 0 === t ? e + "-" + t : e, v.insertBefore(f, v.children[0]), f._offset = f["offset" + r.op.d2], pe(f, 0, r, y), f
                },
                pe = function (e, t, n, i) {
                    var o = {
                            display: "block"
                        },
                        a = n[i ? "os2" : "p2"],
                        s = n[i ? "p2" : "os2"];
                    e._isFlipped = i, o[n.a + "Percent"] = i ? -100 : 0, o[n.a] = i ? 1 : 0, o["border" + a + "Width"] = 1, o["border" + s + "Width"] = 0, o[n.p] = t, r.set(e, o)
                },
                fe = [],
                me = {},
                ge = function () {
                    return d || (d = h(Pe))
                },
                ve = function () {
                    d || (d = h(Pe), R || Te("scrollStart"), R = P())
                },
                ye = function () {
                    return !v && u.restart(!0)
                },
                _e = {},
                xe = [],
                be = [],
                we = function (e) {
                    var t = r.ticker.frame,
                        n = [],
                        i = 0;
                    if (A !== t || j) {
                        for (Ae(); i < be.length; i += 3) o.matchMedia(be[i]).matches ? n.push(i) : Ae(1, be[i]) || W(be[i + 2]) && be[i + 2]();
                        for (Ee(), i = 0; i < n.length; i++) E = be[n[i]], be[n[i] + 2] = be[n[i] + 1](e);
                        E = 0, je(0, 1), A = t
                    }
                },
                Me = function e() {
                    return se(He, "scrollEnd", e) || je(!0)
                },
                Te = function (e) {
                    return _e[e] && _e[e].map((function (e) {
                        return e()
                    })) || xe
                },
                Se = [],
                Ee = function (e) {
                    for (var t = 0; t < Se.length; t += 4) e && Se[t + 3] !== e || (Se[t].style.cssText = Se[t + 1], Se[t + 2].uncache = 1)
                },
                Ae = function (e, t) {
                    var n;
                    for (x = 0; x < fe.length; x++) n = fe[x], t && n.media !== t || (e ? n.kill(1) : (n.scroll.rec || (n.scroll.rec = n.scroll()), n.revert()));
                    Ee(t), t || Te("revert")
                },
                je = function (e, t) {
                    if (!R || e) {
                        var n = Te("refreshInit");
                        for (T && He.sort(), t || Ae(), x = 0; x < fe.length; x++) fe[x].refresh();
                        for (n.forEach((function (e) {
                                return e && e.render && e.render(-1)
                            })), x = fe.length; x--;) fe[x].scroll.rec = 0;
                        Te("refresh")
                    } else ae(He, "scrollEnd", Me)
                },
                Le = 0,
                Ce = 1,
                Pe = function () {
                    var e = fe.length,
                        t = P(),
                        n = t - O >= 50,
                        r = e && fe[0].scroll();
                    if (Ce = Le > r ? -1 : 1, Le = r, n && (R && !y && t - R > 200 && (R = 0, Te("scrollEnd")), m = O, O = t), Ce < 0) {
                        for (x = e; x--;) fe[x].update(0, n);
                        Ce = 1
                    } else
                        for (x = 0; x < e; x++) fe[x] && fe[x].update(0, n);
                    d = 0
                },
                Oe = ["left", "top", "bottom", "right", "marginBottom", "marginRight", "marginTop", "marginLeft", "display", "flexShrink", "float"],
                Re = Oe.concat(["width", "height", "boxSizing", "maxWidth", "maxHeight", "position", "margin", Q, Q + "Top", Q + "Right", Q + "Bottom", Q + "Left"]),
                De = function (e, t, n, r) {
                    if (e.parentNode !== t) {
                        for (var i, o = Oe.length, a = t.style, s = e.style; o--;) a[i = Oe[o]] = n[i];
                        a.position = "absolute" === n.position ? "absolute" : "relative", "inline" === n.display && (a.display = "inline-block"), s.bottom = s.right = "auto", a.overflow = "visible", a.boxSizing = "border-box", a.width = ie(e, K) + $, a.height = ie(e, ee) + $, a[Q] = s.margin = s.top = s.left = "0", Ie(r), s.width = n.width, s.height = n.height, s[Q] = n[Q], e.parentNode.insertBefore(t, e), t.appendChild(e)
                    }
                },
                Ne = /([A-Z])/g,
                Ie = function (e) {
                    if (e)
                        for (var t, n, r = e.t.style, i = e.length, o = 0; o < i; o += 2) n = e[o + 1], t = e[o], n ? r[t] = n : r[t] && r.removeProperty(t.replace(Ne, "-$1").toLowerCase())
                },
                ke = function (e) {
                    for (var t = Re.length, n = e.style, r = [], i = 0; i < t; i++) r.push(Re[i], n[Re[i]]);
                    return r.t = e, r
                },
                ze = {
                    left: 0,
                    top: 0
                },
                Be = function (e, t, n, r, i, o, a, l, u, h, d, f) {
                    if (W(e) && (e = e(l)), V(e) && "max" === e.substr(0, 3) && (e = f + ("=" === e.charAt(4) ? he("0" + e.substr(3), n) : 0)), q(e)) a && pe(a, n, r, !0);
                    else {
                        W(t) && (t = t(l));
                        var m, g, v, y = p(t)[0] || c,
                            _ = re(y) || {},
                            x = e.split(" ");
                        _ && (_.left || _.top) || "none" !== te(y).display || (v = y.style.display, y.style.display = "block", _ = re(y), v ? y.style.display = v : y.style.removeProperty("display")), m = he(x[0], _[r.d]), g = he(x[1] || "0", n), e = _[r.p] - u[r.p] - h + m + i - g, a && pe(a, g, r, n - g < 20 || a._isStart && g > 20), n -= n - g
                    }
                    if (o) {
                        var b = e + n,
                            w = o._isStart;
                        f = "scroll" + r.d2, pe(o, b, r, w && b > 20 || !w && (d ? Math.max(c[f], s[f]) : o.parentNode[f]) <= b + 1), d && (u = re(a), d && (o.style[r.op.p] = u[r.op.p] - r.op.m - o._offset + $))
                    }
                    return Math.round(e)
                },
                Fe = /(?:webkit|moz|length)/i,
                Ue = function (e, t) {
                    var n, i = F(e, t),
                        o = "_scroll" + t.p2;
                    return e[o] = i,
                        function t(a, s, c, l, u) {
                            var h = t.tween,
                                d = s.onComplete,
                                p = {};
                            return h && h.kill(), n = i(), s[o] = a, s.modifiers = p, p[o] = function (e) {
                                return Math.abs(i() - n) > 7 ? (h.kill(), t.tween = 0, e = i()) : l && (e = c + l * h.ratio + u * h.ratio * h.ratio), n = Math.round(e)
                            }, s.onComplete = function () {
                                t.tween = 0, d && d.call(h)
                            }, h = t.tween = r.to(e, s)
                        }
                };
            K.op = ee;
            var He = function () {
                function e(t, n) {
                    i || e.register(r) || console.warn("Please gsap.registerPlugin(ScrollTrigger)"), this.init(t, n)
                }
                return e.prototype.init = function (t, n) {
                    if (this.progress = 0, this.vars && this.kill(1), D) {
                        var i, l, u, h, d, g, _, b, w, M, A, C, O, I, k, G, Y, J, oe, ue, pe, ge, _e, xe, be, we, Te, Se, Ee, Ae, je, Le, Pe, Oe, Re, Ne, He, Ge, Ve, We = (t = ne(V(t) || q(t) || t.nodeType ? {
                                trigger: t
                            } : t, le)).horizontal ? K : ee,
                            qe = t,
                            Xe = qe.onUpdate,
                            Ye = qe.toggleClass,
                            Je = qe.id,
                            Ze = qe.onToggle,
                            Qe = qe.onRefresh,
                            $e = qe.scrub,
                            Ke = qe.trigger,
                            et = qe.pin,
                            tt = qe.pinSpacing,
                            nt = qe.invalidateOnRefresh,
                            rt = qe.anticipatePin,
                            it = qe.onScrubComplete,
                            ot = qe.onSnapComplete,
                            at = qe.once,
                            st = qe.snap,
                            ct = qe.pinReparent,
                            lt = !$e && 0 !== $e,
                            ut = p(t.scroller || o)[0],
                            ht = r.core.getCache(ut),
                            dt = z(ut),
                            pt = dt || "fixed" === B(ut, "pinType"),
                            ft = [t.onEnter, t.onLeave, t.onEnterBack, t.onLeaveBack],
                            mt = lt && (at ? "play" : t.toggleActions).split(" "),
                            gt = "markers" in t ? t.markers : le.markers,
                            vt = dt ? 0 : parseFloat(te(ut)["border" + We.p2 + "Width"]) || 0,
                            yt = this,
                            _t = t.onRefreshInit && function () {
                                return t.onRefreshInit(yt)
                            },
                            xt = function (e, t, n) {
                                var r = n.d,
                                    i = n.d2,
                                    a = n.a;
                                return (a = B(e, "getBoundingClientRect")) ? function () {
                                    return a()[r]
                                } : function () {
                                    return (t ? o["inner" + i] : e["client" + i]) || 0
                                }
                            }(ut, dt, We),
                            bt = function (e, t) {
                                return !t || ~L.indexOf(e) ? U(e) : function () {
                                    return ze
                                }
                            }(ut, dt);
                        yt.media = E, rt *= 45, fe.push(yt), yt.scroller = ut, yt.scroll = F(ut, We), d = yt.scroll(), yt.vars = t, n = n || t.animation, "refreshPriority" in t && (T = 1), ht.tweenScroll = ht.tweenScroll || {
                            top: Ue(ut, ee),
                            left: Ue(ut, K)
                        }, yt.tweenTo = i = ht.tweenScroll[We.p], n && (n.vars.lazy = !1, n._initted || !1 !== n.vars.immediateRender && !1 !== t.immediateRender && n.render(0, !0, !0), yt.animation = n.pause(), n.scrollTrigger = yt, (Pe = q($e) && $e) && (Le = r.to(n, {
                            ease: "power3",
                            duration: Pe,
                            onComplete: function () {
                                return it && it(yt)
                            }
                        })), Ee = 0, Je || (Je = n.vars.id)), st && (X(st) || (st = {
                            snapTo: st
                        }), r.set(dt ? [c, s] : ut, {
                            scrollBehavior: "auto"
                        }), u = W(st.snapTo) ? st.snapTo : "labels" === st.snapTo ? function (e) {
                            return function (t) {
                                var n, i = [],
                                    o = e.labels,
                                    a = e.duration();
                                for (n in o) i.push(o[n] / a);
                                return r.utils.snap(i, t)
                            }
                        }(n) : r.utils.snap(st.snapTo), Oe = st.duration || {
                            min: .1,
                            max: 2
                        }, Oe = X(Oe) ? f(Oe.min, Oe.max) : f(Oe, Oe), Re = r.delayedCall(st.delay || Pe / 2 || .1, (function () {
                            if (!R || R === je && !y) {
                                var e = n && !lt ? n.totalProgress() : yt.progress,
                                    t = (e - Ae) / (P() - m) * 1e3 || 0,
                                    r = Z(t / 2) * t / .185,
                                    o = e + r,
                                    a = f(0, 1, u(o, yt)),
                                    s = a - e - r,
                                    c = yt.scroll(),
                                    l = Math.round(_ + a * I),
                                    h = i.tween;
                                if (c <= b && c >= _) {
                                    if (h && !h._initted) {
                                        if (h.data <= Math.abs(l - c)) return;
                                        h.kill()
                                    }
                                    i(l, {
                                        duration: Oe(Z(.185 * Math.max(Z(o - e), Z(a - e)) / t / .05 || 0)),
                                        ease: st.ease || "power3",
                                        data: Math.abs(l - c),
                                        onComplete: function () {
                                            Ee = Ae = n && !lt ? n.totalProgress() : yt.progress, ot && ot(yt)
                                        }
                                    }, _ + e * I, r * I, s * I)
                                }
                            } else Re.restart(!0)
                        })).pause()), Je && (me[Je] = yt), Ke = yt.trigger = p(Ke || et)[0], et = !0 === et ? Ke : p(et)[0], V(Ye) && (Ye = {
                            targets: Ke,
                            className: Ye
                        }), et && (!1 === tt || "margin" === tt || (tt = "flex" !== te(et.parentNode).display && Q), yt.pin = et, !1 !== t.force3D && r.set(et, {
                            force3D: !0
                        }), (l = r.core.getCache(et)).spacer ? k = l.pinState : (l.spacer = J = a.createElement("div"), J.setAttribute("class", "pin-spacer" + (Je ? " pin-spacer-" + Je : "")), l.pinState = k = ke(et)), yt.spacer = J = l.spacer, Se = te(et), xe = Se[tt + We.os2], ue = r.getProperty(et), pe = r.quickSetter(et, We.a, $), et.firstChild && !H(et, We) && (et.style.overflow = "hidden"), De(et, J, Se), Y = ke(et)), gt && (O = X(gt) ? ne(gt, ce) : ce, A = de("scroller-start", Je, ut, We, O, 0), C = de("scroller-end", Je, ut, We, O, 0, A), oe = A["offset" + We.op.d2], w = de("start", Je, ut, We, O, oe), M = de("end", Je, ut, We, O, oe), pt || ((Ve = ut).style.position = "absolute" === te(Ve).position ? "absolute" : "relative", r.set([A, C], {
                            force3D: !0
                        }), we = r.quickSetter(A, We.a, $), Te = r.quickSetter(C, We.a, $))), yt.revert = function (e) {
                            var t = !1 !== e || !yt.enabled,
                                r = v;
                            t !== h && (t && (He = Math.max(yt.scroll(), yt.scroll.rec || 0), Ne = yt.progress, Ge = n && n.progress()), w && [w, M, A, C].forEach((function (e) {
                                return e.style.display = t ? "none" : "block"
                            })), v = 1, yt.update(t), v = r, et && (t ? function (e, t, n) {
                                if (Ie(n), e.parentNode === t) {
                                    var r = t.parentNode;
                                    r && (r.insertBefore(e, t), r.removeChild(t))
                                }
                            }(et, J, k) : De(et, J, te(et), be)), h = t)
                        }, yt.refresh = function (i) {
                            if (!v && yt.enabled)
                                if (et && i && R) ae(e, "scrollEnd", Me);
                                else {
                                    v = 1, Le && Le.kill(), nt && n && n.progress(0).invalidate(), h || yt.revert();
                                    for (var o, a, s, l, u, p, f, m = xt(), y = bt(), x = H(ut, We), T = 0, S = 0, E = t.end, j = t.endTrigger || Ke, L = t.start || (et || !Ke ? "0 0" : "0 100%"), P = Ke && Math.max(0, fe.indexOf(yt)) || 0, O = P; O--;)(f = fe[O].pin) && (f === Ke || f === et) && fe[O].revert();
                                    for (_ = Be(L, Ke, m, We, yt.scroll(), w, A, yt, y, vt, pt, x) || (et ? -.001 : 0), W(E) && (E = E(yt)), V(E) && !E.indexOf("+=") && (~E.indexOf(" ") ? E = (V(L) ? L.split(" ")[0] : "") + E : (T = he(E.substr(2), m), E = V(L) ? L : _ + T, j = Ke)), b = Math.max(_, Be(E || (j ? "100% 0" : x), j, m, We, yt.scroll() + T, M, C, yt, y, vt, pt, x)) || -.001, I = b - _ || (_ -= .01) && .001, T = 0, O = P; O--;)(f = (p = fe[O]).pin) && p.start - p._pinPush < _ && (o = p.end - p.start, f === Ke && (T += o), f === et && (S += o));
                                    if (_ += T, b += T, yt._pinPush = S, w && T && ((o = {})[We.a] = "+=" + T, r.set([w, M], o)), et) o = te(et), l = We === ee, s = yt.scroll(), ge = parseFloat(ue(We.a)) + S, De(et, J, o), Y = ke(et), a = re(et, !0), tt && ((be = [tt + We.os2, I + S + $]).t = J, (O = tt === Q ? ie(et, We) + I + S : 0) && be.push(We.d, O + $), Ie(be), pt && yt.scroll(He)), pt && ((u = {
                                        top: a.top + (l ? s - _ : 0) + $,
                                        left: a.left + (l ? 0 : s - _) + $,
                                        boxSizing: "border-box",
                                        position: "fixed"
                                    }).width = u.maxWidth = Math.ceil(a.width) + $, u.height = u.maxHeight = Math.ceil(a.height) + $, u.margin = u.marginTop = u.marginRight = u.marginBottom = u.marginLeft = "0", u[Q] = o[Q], u[Q + "Top"] = o[Q + "Top"], u[Q + "Right"] = o[Q + "Right"], u[Q + "Bottom"] = o[Q + "Bottom"], u[Q + "Left"] = o[Q + "Left"], G = function (e, t, n) {
                                        for (var r, i = [], o = e.length, a = n ? 8 : 0; a < o; a += 2) r = e[a], i.push(r, r in t ? t[r] : e[a + 1]);
                                        return i.t = e.t, i
                                    }(k, u, ct)), n ? (n.progress(1, !0), _e = ue(We.a) - ge + I + S, I !== _e && G.splice(G.length - 2, 2), n.progress(0, !0)) : _e = I;
                                    else if (Ke && yt.scroll())
                                        for (a = Ke.parentNode; a && a !== c;) a._pinOffset && (_ -= a._pinOffset, b -= a._pinOffset), a = a.parentNode;
                                    for (O = 0; O < P; O++)(p = fe[O].pin) && (p === Ke || p === et) && fe[O].revert(!1);
                                    yt.start = _, yt.end = b, (d = g = yt.scroll()) < He && yt.scroll(He), yt.revert(!1), v = 0, Ge && lt && n.progress(Ge, !0), Ne !== yt.progress && (Le && n.totalProgress(Ne, !0), yt.progress = Ne, yt.update()), et && tt && (J._pinOffset = Math.round(yt.progress * _e)), Qe && Qe(yt)
                                }
                        }, yt.getVelocity = function () {
                            return (yt.scroll() - g) / (P() - m) * 1e3 || 0
                        }, yt.update = function (e, t) {
                            var r, o, a, s, l, u = yt.scroll(),
                                h = e ? 0 : (u - _) / I,
                                f = h < 0 ? 0 : h > 1 ? 1 : h || 0,
                                y = yt.progress;
                            if (t && (g = d, d = u, st && (Ae = Ee, Ee = n && !lt ? n.totalProgress() : f)), rt && !f && et && !v && !j && R && _ < u + (u - g) / (P() - m) * rt && (f = 1e-4), f !== y && yt.enabled) {
                                if (s = (l = (r = yt.isActive = !!f && f < 1) !== (!!y && y < 1)) || !!f != !!y, yt.direction = f > y ? 1 : -1, yt.progress = f, lt || (!Le || v || j ? n && n.totalProgress(f, !!v) : (Le.vars.totalProgress = f, Le.invalidate().restart())), et)
                                    if (e && tt && (J.style[tt + We.os2] = xe), pt) {
                                        if (s) {
                                            if (a = !e && f > y && b + 1 > u && u + 1 >= H(ut, We), ct) {
                                                if (!v && (r || a)) {
                                                    var x = re(et, !0),
                                                        w = u - _;
                                                    et.style.top = x.top + (We === ee ? w : 0) + $, et.style.left = x.left + (We === ee ? 0 : w) + $
                                                }! function (e, t) {
                                                    if (e.parentNode !== t) {
                                                        var n, r, i = e.style;
                                                        if (t === c)
                                                            for (n in e._stOrig = i.cssText, r = te(e)) + n || Fe.test(n) || !r[n] || "string" != typeof i[n] || "0" === n || (i[n] = r[n]);
                                                        else i.cssText = e._stOrig;
                                                        t.appendChild(e)
                                                    }
                                                }(et, v || !r && !a ? J : c)
                                            }
                                            Ie(r || a ? G : Y), _e !== I && f < 1 && r || pe(ge + (1 !== f || a ? 0 : _e))
                                        }
                                    } else pe(ge + _e * f);
                                !st || i.tween || v || j || (je = R, Re.restart(!0)), Ye && l && (!at || r) && p(Ye.targets).forEach((function (e) {
                                    return e.classList[r ? "add" : "remove"](Ye.className)
                                })), Xe && !lt && !e && Xe(yt), s && !v ? (o = f && !y ? 0 : 1 === f ? 1 : 1 === y ? 2 : 3, lt && (a = !l && "none" !== mt[o + 1] && mt[o + 1] || mt[o], n && ("complete" === a || "reset" === a || a in n) && ("complete" === a ? n.pause().totalProgress(1) : "reset" === a ? n.restart(!0).pause() : n[a]()), Xe && Xe(yt)), !l && S || (Ze && l && Ze(yt), ft[o] && ft[o](yt), at && (1 === f ? yt.kill(!1, 1) : ft[o] = 0), l || ft[o = 1 === f ? 1 : 3] && ft[o](yt))) : lt && Xe && !v && Xe(yt)
                            }
                            Te && (we(u + (A._isFlipped ? 1 : 0)), Te(u))
                        }, yt.enable = function () {
                            yt.enabled || (yt.enabled = !0, ae(ut, "resize", ye), ae(ut, "scroll", ve), _t && ae(e, "refreshInit", _t), n && n.add ? r.delayedCall(.01, yt.refresh) && (I = .01) && (_ = b = 0) : yt.refresh())
                        }, yt.disable = function (t, n) {
                            if (yt.enabled && (!1 !== t && yt.revert(), yt.enabled = yt.isActive = !1, n || Le && Le.pause(), He = 0, l && (l.uncache = 1), _t && se(e, "refreshInit", _t), Re && (Re.pause(), i.tween && i.tween.kill()), !dt)) {
                                for (var r = fe.length; r--;)
                                    if (fe[r].scroller === ut && fe[r] !== yt) return;
                                se(ut, "resize", ye), se(ut, "scroll", ve)
                            }
                        }, yt.kill = function (e, t) {
                            yt.disable(e, t), Je && delete me[Je];
                            var r = fe.indexOf(yt);
                            fe.splice(r, 1), r === x && Ce > 0 && x--, n && (n.scrollTrigger = null, e && n.render(-1), t && Le || n.kill()), w && [w, M, A, C].forEach((function (e) {
                                return e.parentNode.removeChild(e)
                            })), l && (l.uncache = 1)
                        }, yt.enable()
                    } else this.update = this.refresh = this.kill = N
                }, e.register = function (t) {
                    if (!i && (r = t || k(), I() && window.document && (o = window, a = document, s = a.documentElement, c = a.body), r && (p = r.utils.toArray, f = r.utils.clamp, r.core.globals("ScrollTrigger", e), c))) {
                        h = o.requestAnimationFrame || function (e) {
                            return setTimeout(e, 16)
                        }, ae(o, "mousewheel", ve), l = [o, a, s, c], ae(a, "scroll", ve);
                        var n, d = c.style,
                            m = d.borderTop;
                        d.borderTop = "1px solid #000", n = re(c), ee.m = Math.round(n.top + ee.sc()) || 0, K.m = Math.round(n.left + K.sc()) || 0, m ? d.borderTop = m : d.removeProperty("border-top"), g = setInterval(ge, 200), r.delayedCall(.5, (function () {
                            return j = 0
                        })), ae(a, "touchcancel", N), ae(c, "touchstart", N), oe(ae, a, "pointerdown,touchstart,mousedown", (function () {
                            return y = 1
                        })), oe(ae, a, "pointerup,touchend,mouseup", (function () {
                            return y = 0
                        })), _ = r.utils.checkPrefix("transform"), Re.push(_), i = P(), u = r.delayedCall(.2, je).pause(), M = [a, "visibilitychange", function () {
                            var e = o.innerWidth,
                                t = o.innerHeight;
                            a.hidden ? (b = e, w = t) : b === e && w === t || ye()
                        }, a, "DOMContentLoaded", je, o, "load", function () {
                            return R || je()
                        }, o, "resize", ye], G(ae)
                    }
                    return i
                }, e.defaults = function (e) {
                    for (var t in e) le[t] = e[t]
                }, e.kill = function () {
                    D = 0, fe.slice(0).forEach((function (e) {
                        return e.kill(1)
                    }))
                }, e.config = function (e) {
                    "limitCallbacks" in e && (S = !!e.limitCallbacks);
                    var t = e.syncInterval;
                    t && clearInterval(g) || (g = t) && setInterval(ge, t), "autoRefreshEvents" in e && (G(se) || G(ae, e.autoRefreshEvents || "none"))
                }, e.scrollerProxy = function (e, t) {
                    var n = p(e)[0];
                    z(n) ? L.unshift(o, t, c, t, s, t) : L.unshift(n, t)
                }, e.matchMedia = function (e) {
                    var t, n, r, i, a;
                    for (n in e) r = be.indexOf(n), i = e[n], E = n, "all" === n ? i() : (t = o.matchMedia(n)) && (t.matches && (a = i()), ~r ? (be[r + 1] = J(be[r + 1], i), be[r + 2] = J(be[r + 2], a)) : (r = be.length, be.push(n, i, a), t.addListener ? t.addListener(we) : t.addEventListener("change", we))), E = 0;
                    return be
                }, e
            }();
            He.version = "3.4.2", He.saveStyles = function (e) {
                return e ? p(e).forEach((function (e) {
                    var t = Se.indexOf(e);
                    t >= 0 && Se.splice(t, 4), Se.push(e, e.style.cssText, r.core.getCache(e), E)
                })) : Se
            }, He.revert = function (e, t) {
                return Ae(!e, t)
            }, He.create = function (e, t) {
                return new He(e, t)
            }, He.refresh = function (e) {
                return e ? ye() : je(!0)
            }, He.update = Pe, He.maxScroll = function (e, t) {
                return H(e, t ? K : ee)
            }, He.getScrollFunc = function (e, t) {
                return F(p(e)[0], t ? K : ee)
            }, He.getById = function (e) {
                return me[e]
            }, He.getAll = function () {
                return fe.slice(0)
            }, He.isScrolling = function () {
                return !!R
            }, He.addEventListener = function (e, t) {
                var n = _e[e] || (_e[e] = []);
                ~n.indexOf(t) || n.push(t)
            }, He.removeEventListener = function (e, t) {
                var n = _e[e],
                    r = n && n.indexOf(t);
                r >= 0 && n.splice(r, 1)
            }, He.batch = function (e, t) {
                var n, i = [],
                    o = {},
                    a = t.interval || .016,
                    s = t.batchMax || 1e9,
                    c = function (e, t) {
                        var n = [],
                            i = [],
                            o = r.delayedCall(a, (function () {
                                t(n, i), n = [], i = []
                            })).pause();
                        return function (e) {
                            n.length || o.restart(!0), n.push(e.trigger), i.push(e), s <= n.length && o.progress(1)
                        }
                    };
                for (n in t) o[n] = "on" === n.substr(0, 2) && W(t[n]) && "onRefreshInit" !== n ? c(0, t[n]) : t[n];
                return W(s) && (s = s(), ae(He, "refresh", (function () {
                    return s = t.batchMax()
                }))), p(e).forEach((function (e) {
                    var t = {};
                    for (n in o) t[n] = o[n];
                    t.trigger = e, i.push(He.create(t))
                })), i
            }, He.sort = function (e) {
                return fe.sort(e || function (e, t) {
                    return -1e6 * (e.vars.refreshPriority || 0) + e.start - (t.start + -1e6 * (t.vars.refreshPriority || 0))
                })
            }, k() && r.registerPlugin(He)
        },
        "./node_modules/gsap/gsap-core.js": function (e, t, n) {
            "use strict";

            function r(e) {
                if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return e
            }

            function i(e, t) {
                e.prototype = Object.create(t.prototype), e.prototype.constructor = e, e.__proto__ = t
            }
            n.d(t, "a", (function () {
                return It
            })), n.d(t, "b", (function () {
                return cn
            })), n.d(t, "w", (function () {
                return dn
            })), n.d(t, "v", (function () {
                return $e
            })), n.d(t, "h", (function () {
                return ye
            })), n.d(t, "m", (function () {
                return J
            })), n.d(t, "n", (function () {
                return Z
            })), n.d(t, "j", (function () {
                return B
            })), n.d(t, "k", (function () {
                return H
            })), n.d(t, "q", (function () {
                return tn
            })), n.d(t, "p", (function () {
                return K
            })), n.d(t, "f", (function () {
                return _e
            })), n.d(t, "t", (function () {
                return sn
            })), n.d(t, "d", (function () {
                return wt
            })), n.d(t, "r", (function () {
                return lt
            })), n.d(t, "c", (function () {
                return Ht
            })), n.d(t, "o", (function () {
                return he
            })), n.d(t, "u", (function () {
                return Mt
            })), n.d(t, "e", (function () {
                return C
            })), n.d(t, "s", (function () {
                return xe
            })), n.d(t, "l", (function () {
                return ie
            })), n.d(t, "i", (function () {
                return $t
            })), n.d(t, "g", (function () {
                return ve
            }));
            var o, a, s, c, l, u, h, d, p, f, m, g, v, y, _, x, b, w, M, T, S, E, A, j, L, C = {
                    autoSleep: 120,
                    force3D: "auto",
                    nullTargetWarn: 1,
                    units: {
                        lineHeight: ""
                    }
                },
                P = {
                    duration: .5,
                    overwrite: !1,
                    delay: 0
                },
                O = 1e8,
                R = 2 * Math.PI,
                D = R / 4,
                N = 0,
                I = Math.sqrt,
                k = Math.cos,
                z = Math.sin,
                B = function (e) {
                    return "string" == typeof e
                },
                F = function (e) {
                    return "function" == typeof e
                },
                U = function (e) {
                    return "number" == typeof e
                },
                H = function (e) {
                    return void 0 === e
                },
                G = function (e) {
                    return "object" == typeof e
                },
                V = function (e) {
                    return !1 !== e
                },
                W = function () {
                    return "undefined" != typeof window
                },
                q = function (e) {
                    return F(e) || B(e)
                },
                X = Array.isArray,
                Y = /(?:-?\.?\d|\.)+/gi,
                J = /[-+=.]*\d+[.e\-+]*\d*[e\-\+]*\d*/g,
                Z = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g,
                Q = /[-+=.]*\d+(?:\.|e-|e)*\d*/gi,
                $ = /\(([^()]+)\)/i,
                K = /[+-]=-?[\.\d]+/,
                ee = /[#\-+.]*\b[a-z\d-=+%.]+/gi,
                te = {},
                ne = {},
                re = function (e) {
                    return (ne = Le(e, te)) && dn
                },
                ie = function (e, t) {
                    return console.warn("Invalid property", e, "set to", t, "Missing plugin? gsap.registerPlugin()")
                },
                oe = function (e, t) {
                    return !t && console.warn(e)
                },
                ae = function (e, t) {
                    return e && (te[e] = t) && ne && (ne[e] = t) || te
                },
                se = function () {
                    return 0
                },
                ce = {},
                le = [],
                ue = {},
                he = {},
                de = {},
                pe = 30,
                fe = [],
                me = "",
                ge = function (e) {
                    var t, n, r = e[0];
                    if (G(r) || F(r) || (e = [e]), !(t = (r._gsap || {}).harness)) {
                        for (n = fe.length; n-- && !fe[n].targetTest(r););
                        t = fe[n]
                    }
                    for (n = e.length; n--;) e[n] && (e[n]._gsap || (e[n]._gsap = new It(e[n], t))) || e.splice(n, 1);
                    return e
                },
                ve = function (e) {
                    return e._gsap || ge(nt(e))[0]._gsap
                },
                ye = function (e, t) {
                    var n = e[t];
                    return F(n) ? e[t]() : H(n) && e.getAttribute(t) || n
                },
                _e = function (e, t) {
                    return (e = e.split(",")).forEach(t) || e
                },
                xe = function (e) {
                    return Math.round(1e5 * e) / 1e5 || 0
                },
                be = function (e, t) {
                    for (var n = t.length, r = 0; e.indexOf(t[r]) < 0 && ++r < n;);
                    return r < n
                },
                we = function (e, t, n) {
                    var r, i = U(e[1]),
                        o = (i ? 2 : 1) + (t < 2 ? 0 : 1),
                        a = e[o];
                    if (i && (a.duration = e[1]), a.parent = n, t) {
                        for (r = a; n && !("immediateRender" in r);) r = n.vars.defaults || {}, n = V(n.vars.inherit) && n.parent;
                        a.immediateRender = V(r.immediateRender), t < 2 ? a.runBackwards = 1 : a.startAt = e[o - 1]
                    }
                    return a
                },
                Me = function () {
                    var e, t, n = le.length,
                        r = le.slice(0);
                    for (ue = {}, le.length = 0, e = 0; e < n; e++)(t = r[e]) && t._lazy && (t.render(t._lazy[0], t._lazy[1], !0)._lazy = 0)
                },
                Te = function (e, t, n, r) {
                    le.length && Me(), e.render(t, n, r), le.length && Me()
                },
                Se = function (e) {
                    var t = parseFloat(e);
                    return (t || 0 === t) && (e + "").match(ee).length < 2 ? t : e
                },
                Ee = function (e) {
                    return e
                },
                Ae = function (e, t) {
                    for (var n in t) n in e || (e[n] = t[n]);
                    return e
                },
                je = function (e, t) {
                    for (var n in t) n in e || "duration" === n || "ease" === n || (e[n] = t[n])
                },
                Le = function (e, t) {
                    for (var n in t) e[n] = t[n];
                    return e
                },
                Ce = function e(t, n) {
                    for (var r in n) t[r] = G(n[r]) ? e(t[r] || (t[r] = {}), n[r]) : n[r];
                    return t
                },
                Pe = function (e, t) {
                    var n, r = {};
                    for (n in e) n in t || (r[n] = e[n]);
                    return r
                },
                Oe = function (e) {
                    var t = e.parent || o,
                        n = e.keyframes ? je : Ae;
                    if (V(e.inherit))
                        for (; t;) n(e, t.vars.defaults), t = t.parent || t._dp;
                    return e
                },
                Re = function (e, t, n, r) {
                    void 0 === n && (n = "_first"), void 0 === r && (r = "_last");
                    var i = t._prev,
                        o = t._next;
                    i ? i._next = o : e[n] === t && (e[n] = o), o ? o._prev = i : e[r] === t && (e[r] = i), t._next = t._prev = t.parent = null
                },
                De = function (e, t) {
                    e.parent && (!t || e.parent.autoRemoveChildren) && e.parent.remove(e), e._act = 0
                },
                Ne = function (e) {
                    for (var t = e; t;) t._dirty = 1, t = t.parent;
                    return e
                },
                Ie = function (e) {
                    for (var t = e.parent; t && t.parent;) t._dirty = 1, t.totalDuration(), t = t.parent;
                    return e
                },
                ke = function (e) {
                    return e._repeat ? ze(e._tTime, e = e.duration() + e._rDelay) * e : 0
                },
                ze = function (e, t) {
                    return (e /= t) && ~~e === e ? ~~e - 1 : ~~e
                },
                Be = function (e, t) {
                    return (e - t._start) * t._ts + (t._ts >= 0 ? 0 : t._dirty ? t.totalDuration() : t._tDur)
                },
                Fe = function (e) {
                    return e._end = xe(e._start + (e._tDur / Math.abs(e._ts || e._rts || 1e-8) || 0))
                },
                Ue = function (e, t) {
                    var n = e._dp;
                    return n && n.smoothChildTiming && e._ts && (e._start = xe(e._dp._time - (e._ts > 0 ? t / e._ts : ((e._dirty ? e.totalDuration() : e._tDur) - t) / -e._ts)), Fe(e), n._dirty || Ne(n)), e
                },
                He = function (e, t) {
                    var n;
                    if ((t._time || t._initted && !t._dur) && (n = Be(e.rawTime(), t), (!t._dur || Qe(0, t.totalDuration(), n) - t._tTime > 1e-8) && t.render(n, !0)), Ne(e)._dp && e._initted && e._time >= e._dur && e._ts) {
                        if (e._dur < e.duration())
                            for (n = e; n._dp;) n.rawTime() >= 0 && n.totalTime(n._tTime), n = n._dp;
                        e._zTime = -1e-8
                    }
                },
                Ge = function (e, t, n, r) {
                    return t.parent && De(t), t._start = xe(n + t._delay), t._end = xe(t._start + (t.totalDuration() / Math.abs(t.timeScale()) || 0)),
                        function (e, t, n, r, i) {
                            void 0 === n && (n = "_first"), void 0 === r && (r = "_last");
                            var o, a = e[r];
                            if (i)
                                for (o = t[i]; a && a[i] > o;) a = a._prev;
                            a ? (t._next = a._next, a._next = t) : (t._next = e[n], e[n] = t), t._next ? t._next._prev = t : e[r] = t, t._prev = a, t.parent = t._dp = e
                        }(e, t, "_first", "_last", e._sort ? "_start" : 0), e._recent = t, r || He(e, t), e
                },
                Ve = function (e, t) {
                    return (te.ScrollTrigger || ie("scrollTrigger", t)) && te.ScrollTrigger.create(t, e)
                },
                We = function (e, t, n, r) {
                    return Gt(e, t), e._initted ? !n && e._pt && (e._dur && !1 !== e.vars.lazy || !e._dur && e.vars.lazy) && u !== Mt.frame ? (le.push(e), e._lazy = [t, r], 1) : void 0 : 1
                },
                qe = function (e, t, n) {
                    var r = e._repeat,
                        i = xe(t) || 0;
                    return e._dur = i, e._tDur = r ? r < 0 ? 1e10 : xe(i * (r + 1) + e._rDelay * r) : i, e._time > i && (e._time = i, e._tTime = Math.min(e._tTime, e._tDur)), !n && Ne(e.parent), e.parent && Fe(e), e
                },
                Xe = function (e) {
                    return e instanceof zt ? Ne(e) : qe(e, e._dur)
                },
                Ye = {
                    _start: 0,
                    endTime: se
                },
                Je = function e(t, n) {
                    var r, i, o = t.labels,
                        a = t._recent || Ye,
                        s = t.duration() >= O ? a.endTime(!1) : t._dur;
                    return B(n) && (isNaN(n) || n in o) ? "<" === (r = n.charAt(0)) || ">" === r ? ("<" === r ? a._start : a.endTime(a._repeat >= 0)) + (parseFloat(n.substr(1)) || 0) : (r = n.indexOf("=")) < 0 ? (n in o || (o[n] = s), o[n]) : (i = +(n.charAt(r - 1) + n.substr(r + 1)), r > 1 ? e(t, n.substr(0, r - 1)) + i : s + i) : null == n ? s : +n
                },
                Ze = function (e, t) {
                    return e || 0 === e ? t(e) : t
                },
                Qe = function (e, t, n) {
                    return n < e ? e : n > t ? t : n
                },
                $e = function (e) {
                    return (e + "").substr((parseFloat(e) + "").length)
                },
                Ke = [].slice,
                et = function (e, t) {
                    return e && G(e) && "length" in e && (!t && !e.length || e.length - 1 in e && G(e[0])) && !e.nodeType && e !== a
                },
                tt = function (e, t, n) {
                    return void 0 === n && (n = []), e.forEach((function (e) {
                        var r;
                        return B(e) && !t || et(e, 1) ? (r = n).push.apply(r, nt(e)) : n.push(e)
                    })) || n
                },
                nt = function (e, t) {
                    return !B(e) || t || !s && Tt() ? X(e) ? tt(e, t) : et(e) ? Ke.call(e, 0) : e ? [e] : [] : Ke.call(c.querySelectorAll(e), 0)
                },
                rt = function (e) {
                    return e.sort((function () {
                        return .5 - Math.random()
                    }))
                },
                it = function (e) {
                    if (F(e)) return e;
                    var t = G(e) ? e : {
                            each: e
                        },
                        n = Pt(t.ease),
                        r = t.from || 0,
                        i = parseFloat(t.base) || 0,
                        o = {},
                        a = r > 0 && r < 1,
                        s = isNaN(r) || a,
                        c = t.axis,
                        l = r,
                        u = r;
                    return B(r) ? l = u = {
                            center: .5,
                            edges: .5,
                            end: 1
                        } [r] || 0 : !a && s && (l = r[0], u = r[1]),
                        function (e, a, h) {
                            var d, p, f, m, g, v, y, _, x, b = (h || t).length,
                                w = o[b];
                            if (!w) {
                                if (!(x = "auto" === t.grid ? 0 : (t.grid || [1, O])[1])) {
                                    for (y = -O; y < (y = h[x++].getBoundingClientRect().left) && x < b;);
                                    x--
                                }
                                for (w = o[b] = [], d = s ? Math.min(x, b) * l - .5 : r % x, p = s ? b * u / x - .5 : r / x | 0, y = 0, _ = O, v = 0; v < b; v++) f = v % x - d, m = p - (v / x | 0), w[v] = g = c ? Math.abs("y" === c ? m : f) : I(f * f + m * m), g > y && (y = g), g < _ && (_ = g);
                                "random" === r && rt(w), w.max = y - _, w.min = _, w.v = b = (parseFloat(t.amount) || parseFloat(t.each) * (x > b ? b - 1 : c ? "y" === c ? b / x : x : Math.max(x, b / x)) || 0) * ("edges" === r ? -1 : 1), w.b = b < 0 ? i - b : i, w.u = $e(t.amount || t.each) || 0, n = n && b < 0 ? Lt(n) : n
                            }
                            return b = (w[e] - w.min) / w.max || 0, xe(w.b + (n ? n(b) : b) * w.v) + w.u
                        }
                },
                ot = function (e) {
                    var t = e < 1 ? Math.pow(10, (e + "").length - 2) : 1;
                    return function (n) {
                        return Math.floor(Math.round(parseFloat(n) / e) * e * t) / t + (U(n) ? 0 : $e(n))
                    }
                },
                at = function (e, t) {
                    var n, r, i = X(e);
                    return !i && G(e) && (n = i = e.radius || O, e.values ? (e = nt(e.values), (r = !U(e[0])) && (n *= n)) : e = ot(e.increment)), Ze(t, i ? F(e) ? function (t) {
                        return r = e(t), Math.abs(r - t) <= n ? r : t
                    } : function (t) {
                        for (var i, o, a = parseFloat(r ? t.x : t), s = parseFloat(r ? t.y : 0), c = O, l = 0, u = e.length; u--;)(i = r ? (i = e[u].x - a) * i + (o = e[u].y - s) * o : Math.abs(e[u] - a)) < c && (c = i, l = u);
                        return l = !n || c <= n ? e[l] : t, r || l === t || U(t) ? l : l + $e(t)
                    } : ot(e))
                },
                st = function (e, t, n, r) {
                    return Ze(X(e) ? !t : !0 === n ? !!(n = 0) : !r, (function () {
                        return X(e) ? e[~~(Math.random() * e.length)] : (n = n || 1e-5) && (r = n < 1 ? Math.pow(10, (n + "").length - 2) : 1) && Math.floor(Math.round((e + Math.random() * (t - e)) / n) * n * r) / r
                    }))
                },
                ct = function (e, t, n) {
                    return Ze(n, (function (n) {
                        return e[~~t(n)]
                    }))
                },
                lt = function (e) {
                    for (var t, n, r, i, o = 0, a = ""; ~(t = e.indexOf("random(", o));) r = e.indexOf(")", t), i = "[" === e.charAt(t + 7), n = e.substr(t + 7, r - t - 7).match(i ? ee : Y), a += e.substr(o, t - o) + st(i ? n : +n[0], +n[1], +n[2] || 1e-5), o = r + 1;
                    return a + e.substr(o, e.length - o)
                },
                ut = function (e, t, n, r, i) {
                    var o = t - e,
                        a = r - n;
                    return Ze(i, (function (t) {
                        return n + ((t - e) / o * a || 0)
                    }))
                },
                ht = function (e, t, n) {
                    var r, i, o, a = e.labels,
                        s = O;
                    for (r in a)(i = a[r] - t) < 0 == !!n && i && s > (i = Math.abs(i)) && (o = r, s = i);
                    return o
                },
                dt = function (e, t, n) {
                    var r, i, o = e.vars,
                        a = o[t];
                    if (a) return r = o[t + "Params"], i = o.callbackScope || e, n && le.length && Me(), r ? a.apply(i, r) : a.call(i)
                },
                pt = function (e) {
                    return De(e), e.progress() < 1 && dt(e, "onInterrupt"), e
                },
                ft = function (e) {
                    var t = (e = !e.name && e.default || e).name,
                        n = F(e),
                        r = t && !n && e.init ? function () {
                            this._props = []
                        } : e,
                        i = {
                            init: se,
                            render: nn,
                            add: Ut,
                            kill: on,
                            modifier: rn,
                            rawVars: 0
                        },
                        o = {
                            targetTest: 0,
                            get: 0,
                            getSetter: $t,
                            aliases: {},
                            register: 0
                        };
                    if (Tt(), e !== r) {
                        if (he[t]) return;
                        Ae(r, Ae(Pe(e, i), o)), Le(r.prototype, Le(i, Pe(e, o))), he[r.prop = t] = r, e.targetTest && (fe.push(r), ce[t] = 1), t = ("css" === t ? "CSS" : t.charAt(0).toUpperCase() + t.substr(1)) + "Plugin"
                    }
                    ae(t, r), e.register && e.register(dn, r, cn)
                },
                mt = {
                    aqua: [0, 255, 255],
                    lime: [0, 255, 0],
                    silver: [192, 192, 192],
                    black: [0, 0, 0],
                    maroon: [128, 0, 0],
                    teal: [0, 128, 128],
                    blue: [0, 0, 255],
                    navy: [0, 0, 128],
                    white: [255, 255, 255],
                    olive: [128, 128, 0],
                    yellow: [255, 255, 0],
                    orange: [255, 165, 0],
                    gray: [128, 128, 128],
                    purple: [128, 0, 128],
                    green: [0, 128, 0],
                    red: [255, 0, 0],
                    pink: [255, 192, 203],
                    cyan: [0, 255, 255],
                    transparent: [255, 255, 255, 0]
                },
                gt = function (e, t, n) {
                    return 255 * (6 * (e = e < 0 ? e + 1 : e > 1 ? e - 1 : e) < 1 ? t + (n - t) * e * 6 : e < .5 ? n : 3 * e < 2 ? t + (n - t) * (2 / 3 - e) * 6 : t) + .5 | 0
                },
                vt = function (e, t, n) {
                    var r, i, o, a, s, c, l, u, h, d, p = e ? U(e) ? [e >> 16, e >> 8 & 255, 255 & e] : 0 : mt.black;
                    if (!p) {
                        if ("," === e.substr(-1) && (e = e.substr(0, e.length - 1)), mt[e]) p = mt[e];
                        else if ("#" === e.charAt(0)) 4 === e.length && (r = e.charAt(1), i = e.charAt(2), o = e.charAt(3), e = "#" + r + r + i + i + o + o), p = [(e = parseInt(e.substr(1), 16)) >> 16, e >> 8 & 255, 255 & e];
                        else if ("hsl" === e.substr(0, 3))
                            if (p = d = e.match(Y), t) {
                                if (~e.indexOf("=")) return p = e.match(J), n && p.length < 4 && (p[3] = 1), p
                            } else a = +p[0] % 360 / 360, s = +p[1] / 100, r = 2 * (c = +p[2] / 100) - (i = c <= .5 ? c * (s + 1) : c + s - c * s), p.length > 3 && (p[3] *= 1), p[0] = gt(a + 1 / 3, r, i), p[1] = gt(a, r, i), p[2] = gt(a - 1 / 3, r, i);
                        else p = e.match(Y) || mt.transparent;
                        p = p.map(Number)
                    }
                    return t && !d && (r = p[0] / 255, i = p[1] / 255, o = p[2] / 255, c = ((l = Math.max(r, i, o)) + (u = Math.min(r, i, o))) / 2, l === u ? a = s = 0 : (h = l - u, s = c > .5 ? h / (2 - l - u) : h / (l + u), a = l === r ? (i - o) / h + (i < o ? 6 : 0) : l === i ? (o - r) / h + 2 : (r - i) / h + 4, a *= 60), p[0] = ~~(a + .5), p[1] = ~~(100 * s + .5), p[2] = ~~(100 * c + .5)), n && p.length < 4 && (p[3] = 1), p
                },
                yt = function (e) {
                    var t = [],
                        n = [],
                        r = -1;
                    return e.split(xt).forEach((function (e) {
                        var i = e.match(Z) || [];
                        t.push.apply(t, i), n.push(r += i.length + 1)
                    })), t.c = n, t
                },
                _t = function (e, t, n) {
                    var r, i, o, a, s = "",
                        c = (e + s).match(xt),
                        l = t ? "hsla(" : "rgba(",
                        u = 0;
                    if (!c) return e;
                    if (c = c.map((function (e) {
                            return (e = vt(e, t, 1)) && l + (t ? e[0] + "," + e[1] + "%," + e[2] + "%," + e[3] : e.join(",")) + ")"
                        })), n && (o = yt(e), (r = n.c).join(s) !== o.c.join(s)))
                        for (a = (i = e.replace(xt, "1").split(Z)).length - 1; u < a; u++) s += i[u] + (~r.indexOf(u) ? c.shift() || l + "0,0,0,0)" : (o.length ? o : c.length ? c : n).shift());
                    if (!i)
                        for (a = (i = e.split(xt)).length - 1; u < a; u++) s += i[u] + c[u];
                    return s + i[a]
                },
                xt = function () {
                    var e, t = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";
                    for (e in mt) t += "|" + e + "\\b";
                    return new RegExp(t + ")", "gi")
                }(),
                bt = /hsl[a]?\(/,
                wt = function (e) {
                    var t, n = e.join(" ");
                    if (xt.lastIndex = 0, xt.test(n)) return t = bt.test(n), e[1] = _t(e[1], t), e[0] = _t(e[0], t, yt(e[1])), !0
                },
                Mt = (v = Date.now, y = 500, _ = 33, x = v(), b = x, M = w = 1 / 240, S = function e(t) {
                    var n, r, i = v() - b,
                        o = !0 === t;
                    i > y && (x += i - _), b += i, g.time = (b - x) / 1e3, ((n = g.time - M) > 0 || o) && (g.frame++, M += n + (n >= w ? .004 : w - n), r = 1), o || (p = f(e)), r && T.forEach((function (e) {
                        return e(g.time, i, g.frame, t)
                    }))
                }, g = {
                    time: 0,
                    frame: 0,
                    tick: function () {
                        S(!0)
                    },
                    wake: function () {
                        l && (!s && W() && (a = s = window, c = a.document || {}, te.gsap = dn, (a.gsapVersions || (a.gsapVersions = [])).push(dn.version), re(ne || a.GreenSockGlobals || !a.gsap && a || {}), m = a.requestAnimationFrame), p && g.sleep(), f = m || function (e) {
                            return setTimeout(e, 1e3 * (M - g.time) + 1 | 0)
                        }, d = 1, S(2))
                    },
                    sleep: function () {
                        (m ? a.cancelAnimationFrame : clearTimeout)(p), d = 0, f = se
                    },
                    lagSmoothing: function (e, t) {
                        y = e || 1 / 1e-8, _ = Math.min(t, y, 0)
                    },
                    fps: function (e) {
                        w = 1 / (e || 240), M = g.time + w
                    },
                    add: function (e) {
                        T.indexOf(e) < 0 && T.push(e), Tt()
                    },
                    remove: function (e) {
                        var t;
                        ~(t = T.indexOf(e)) && T.splice(t, 1)
                    },
                    _listeners: T = []
                }),
                Tt = function () {
                    return !d && Mt.wake()
                },
                St = {},
                Et = /^[\d.\-M][\d.\-,\s]/,
                At = /["']/g,
                jt = function (e) {
                    for (var t, n, r, i = {}, o = e.substr(1, e.length - 3).split(":"), a = o[0], s = 1, c = o.length; s < c; s++) n = o[s], t = s !== c - 1 ? n.lastIndexOf(",") : n.length, r = n.substr(0, t), i[a] = isNaN(r) ? r.replace(At, "").trim() : +r, a = n.substr(t + 1).trim();
                    return i
                },
                Lt = function (e) {
                    return function (t) {
                        return 1 - e(1 - t)
                    }
                },
                Ct = function e(t, n) {
                    for (var r, i = t._first; i;) i instanceof zt ? e(i, n) : !i.vars.yoyoEase || i._yoyo && i._repeat || i._yoyo === n || (i.timeline ? e(i.timeline, n) : (r = i._ease, i._ease = i._yEase, i._yEase = r, i._yoyo = n)), i = i._next
                },
                Pt = function (e, t) {
                    return e && (F(e) ? e : St[e] || function (e) {
                        var t = (e + "").split("("),
                            n = St[t[0]];
                        return n && t.length > 1 && n.config ? n.config.apply(null, ~e.indexOf("{") ? [jt(t[1])] : $.exec(e)[1].split(",").map(Se)) : St._CE && Et.test(e) ? St._CE("", e) : n
                    }(e)) || t
                },
                Ot = function (e, t, n, r) {
                    void 0 === n && (n = function (e) {
                        return 1 - t(1 - e)
                    }), void 0 === r && (r = function (e) {
                        return e < .5 ? t(2 * e) / 2 : 1 - t(2 * (1 - e)) / 2
                    });
                    var i, o = {
                        easeIn: t,
                        easeOut: n,
                        easeInOut: r
                    };
                    return _e(e, (function (e) {
                        for (var t in St[e] = te[e] = o, St[i = e.toLowerCase()] = n, o) St[i + ("easeIn" === t ? ".in" : "easeOut" === t ? ".out" : ".inOut")] = St[e + "." + t] = o[t]
                    })), o
                },
                Rt = function (e) {
                    return function (t) {
                        return t < .5 ? (1 - e(1 - 2 * t)) / 2 : .5 + e(2 * (t - .5)) / 2
                    }
                },
                Dt = function e(t, n, r) {
                    var i = n >= 1 ? n : 1,
                        o = (r || (t ? .3 : .45)) / (n < 1 ? n : 1),
                        a = o / R * (Math.asin(1 / i) || 0),
                        s = function (e) {
                            return 1 === e ? 1 : i * Math.pow(2, -10 * e) * z((e - a) * o) + 1
                        },
                        c = "out" === t ? s : "in" === t ? function (e) {
                            return 1 - s(1 - e)
                        } : Rt(s);
                    return o = R / o, c.config = function (n, r) {
                        return e(t, n, r)
                    }, c
                },
                Nt = function e(t, n) {
                    void 0 === n && (n = 1.70158);
                    var r = function (e) {
                            return e ? --e * e * ((n + 1) * e + n) + 1 : 0
                        },
                        i = "out" === t ? r : "in" === t ? function (e) {
                            return 1 - r(1 - e)
                        } : Rt(r);
                    return i.config = function (n) {
                        return e(t, n)
                    }, i
                };
            _e("Linear,Quad,Cubic,Quart,Quint,Strong", (function (e, t) {
                var n = t < 5 ? t + 1 : t;
                Ot(e + ",Power" + (n - 1), t ? function (e) {
                    return Math.pow(e, n)
                } : function (e) {
                    return e
                }, (function (e) {
                    return 1 - Math.pow(1 - e, n)
                }), (function (e) {
                    return e < .5 ? Math.pow(2 * e, n) / 2 : 1 - Math.pow(2 * (1 - e), n) / 2
                }))
            })), St.Linear.easeNone = St.none = St.Linear.easeIn, Ot("Elastic", Dt("in"), Dt("out"), Dt()), E = 7.5625, j = 1 / (A = 2.75), Ot("Bounce", (function (e) {
                return 1 - L(1 - e)
            }), L = function (e) {
                return e < j ? E * e * e : e < .7272727272727273 ? E * Math.pow(e - 1.5 / A, 2) + .75 : e < .9090909090909092 ? E * (e -= 2.25 / A) * e + .9375 : E * Math.pow(e - 2.625 / A, 2) + .984375
            }), Ot("Expo", (function (e) {
                return e ? Math.pow(2, 10 * (e - 1)) : 0
            })), Ot("Circ", (function (e) {
                return -(I(1 - e * e) - 1)
            })), Ot("Sine", (function (e) {
                return 1 === e ? 1 : 1 - k(e * D)
            })), Ot("Back", Nt("in"), Nt("out"), Nt()), St.SteppedEase = St.steps = te.SteppedEase = {
                config: function (e, t) {
                    void 0 === e && (e = 1);
                    var n = 1 / e,
                        r = e + (t ? 0 : 1),
                        i = t ? 1 : 0;
                    return function (e) {
                        return ((r * Qe(0, 1 - 1e-8, e) | 0) + i) * n
                    }
                }
            }, P.ease = St["quad.out"], _e("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt", (function (e) {
                return me += e + "," + e + "Params,"
            }));
            var It = function (e, t) {
                    this.id = N++, e._gsap = this, this.target = e, this.harness = t, this.get = t ? t.get : ye, this.set = t ? t.getSetter : $t
                },
                kt = function () {
                    function e(e, t) {
                        var n = e.parent || o;
                        this.vars = e, this._delay = +e.delay || 0, (this._repeat = e.repeat || 0) && (this._rDelay = e.repeatDelay || 0, this._yoyo = !!e.yoyo || !!e.yoyoEase), this._ts = 1, qe(this, +e.duration, 1), this.data = e.data, d || Mt.wake(), n && Ge(n, this, t || 0 === t ? t : n._time, 1), e.reversed && this.reverse(), e.paused && this.paused(!0)
                    }
                    var t = e.prototype;
                    return t.delay = function (e) {
                        return e || 0 === e ? (this.parent && this.parent.smoothChildTiming && this.startTime(this._start + e - this._delay), this._delay = e, this) : this._delay
                    }, t.duration = function (e) {
                        return arguments.length ? this.totalDuration(this._repeat > 0 ? e + (e + this._rDelay) * this._repeat : e) : this.totalDuration() && this._dur
                    }, t.totalDuration = function (e) {
                        if (!arguments.length) return this._tDur;
                        this._dirty = 0;
                        var t = this._time / this._dur || 0;
                        return qe(this, this._repeat < 0 ? e : (e - this._repeat * this._rDelay) / (this._repeat + 1)), this._tTime ? Ue(this, t * e + ke(this)) : this
                    }, t.totalTime = function (e, t) {
                        if (Tt(), !arguments.length) return this._tTime;
                        var n = this._dp;
                        if (n && n.smoothChildTiming && this._ts) {
                            for (Ue(this, e); n.parent;) n.parent._time !== n._start + (n._ts >= 0 ? n._tTime / n._ts : (n.totalDuration() - n._tTime) / -n._ts) && n.totalTime(n._tTime, !0), n = n.parent;
                            !this.parent && this._dp.autoRemoveChildren && (this._ts > 0 && e < this._tDur || this._ts < 0 && e > 0 || !this._tDur && !e) && Ge(this._dp, this, this._start - this._delay)
                        }
                        return (this._tTime !== e || !this._dur && !t || this._initted && 1e-8 === Math.abs(this._zTime) || !e && !this._initted) && (this._ts || (this._pTime = e), Te(this, e, t)), this
                    }, t.time = function (e, t) {
                        return arguments.length ? this.totalTime(Math.min(this.totalDuration(), e + ke(this)) % this._dur || (e ? this._dur : 0), t) : this._time
                    }, t.totalProgress = function (e, t) {
                        return arguments.length ? this.totalTime(this.totalDuration() * e, t) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.ratio
                    }, t.progress = function (e, t) {
                        return arguments.length ? this.totalTime(this.duration() * (!this._yoyo || 1 & this.iteration() ? e : 1 - e) + ke(this), t) : this.duration() ? Math.min(1, this._time / this._dur) : this.ratio
                    }, t.iteration = function (e, t) {
                        var n = this.duration() + this._rDelay;
                        return arguments.length ? this.totalTime(this._time + (e - 1) * n, t) : this._repeat ? ze(this._tTime, n) + 1 : 1
                    }, t.timeScale = function (e) {
                        if (!arguments.length) return -1e-8 === this._rts ? 0 : this._rts;
                        if (this._rts === e) return this;
                        var t = this.parent && this._ts ? Be(this.parent._time, this) : this._tTime;
                        return this._rts = +e || 0, this._ts = this._ps || -1e-8 === e ? 0 : this._rts, Ie(this.totalTime(Qe(-this._delay, this._tDur, t), !0))
                    }, t.paused = function (e) {
                        return arguments.length ? (this._ps !== e && (this._ps = e, e ? (this._pTime = this._tTime || Math.max(-this._delay, this.rawTime()), this._ts = this._act = 0) : (Tt(), this._ts = this._rts, this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, 1 === this.progress() && (this._tTime -= 1e-8) && 1e-8 !== Math.abs(this._zTime)))), this) : this._ps
                    }, t.startTime = function (e) {
                        if (arguments.length) {
                            this._start = e;
                            var t = this.parent || this._dp;
                            return t && (t._sort || !this.parent) && Ge(t, this, e - this._delay), this
                        }
                        return this._start
                    }, t.endTime = function (e) {
                        return this._start + (V(e) ? this.totalDuration() : this.duration()) / Math.abs(this._ts)
                    }, t.rawTime = function (e) {
                        var t = this.parent || this._dp;
                        return t ? e && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : this._ts ? Be(t.rawTime(e), this) : this._tTime : this._tTime
                    }, t.globalTime = function (e) {
                        for (var t = this, n = arguments.length ? e : t.rawTime(); t;) n = t._start + n / (t._ts || 1), t = t._dp;
                        return n
                    }, t.repeat = function (e) {
                        return arguments.length ? (this._repeat = e, Xe(this)) : this._repeat
                    }, t.repeatDelay = function (e) {
                        return arguments.length ? (this._rDelay = e, Xe(this)) : this._rDelay
                    }, t.yoyo = function (e) {
                        return arguments.length ? (this._yoyo = e, this) : this._yoyo
                    }, t.seek = function (e, t) {
                        return this.totalTime(Je(this, e), V(t))
                    }, t.restart = function (e, t) {
                        return this.play().totalTime(e ? -this._delay : 0, V(t))
                    }, t.play = function (e, t) {
                        return null != e && this.seek(e, t), this.reversed(!1).paused(!1)
                    }, t.reverse = function (e, t) {
                        return null != e && this.seek(e || this.totalDuration(), t), this.reversed(!0).paused(!1)
                    }, t.pause = function (e, t) {
                        return null != e && this.seek(e, t), this.paused(!0)
                    }, t.resume = function () {
                        return this.paused(!1)
                    }, t.reversed = function (e) {
                        return arguments.length ? (!!e !== this.reversed() && this.timeScale(-this._rts || (e ? -1e-8 : 0)), this) : this._rts < 0
                    }, t.invalidate = function () {
                        return this._initted = 0, this._zTime = -1e-8, this
                    }, t.isActive = function () {
                        var e, t = this.parent || this._dp,
                            n = this._start;
                        return !(t && !(this._ts && this._initted && t.isActive() && (e = t.rawTime(!0)) >= n && e < this.endTime(!0) - 1e-8))
                    }, t.eventCallback = function (e, t, n) {
                        var r = this.vars;
                        return arguments.length > 1 ? (t ? (r[e] = t, n && (r[e + "Params"] = n), "onUpdate" === e && (this._onUpdate = t)) : delete r[e], this) : r[e]
                    }, t.then = function (e) {
                        var t = this;
                        return new Promise((function (n) {
                            var r = F(e) ? e : Ee,
                                i = function () {
                                    var e = t.then;
                                    t.then = null, F(r) && (r = r(t)) && (r.then || r === t) && (t.then = e), n(r), t.then = e
                                };
                            t._initted && 1 === t.totalProgress() && t._ts >= 0 || !t._tTime && t._ts < 0 ? i() : t._prom = i
                        }))
                    }, t.kill = function () {
                        pt(this)
                    }, e
                }();
            Ae(kt.prototype, {
                _time: 0,
                _start: 0,
                _end: 0,
                _tTime: 0,
                _tDur: 0,
                _dirty: 0,
                _repeat: 0,
                _yoyo: !1,
                parent: null,
                _initted: !1,
                _rDelay: 0,
                _ts: 1,
                _dp: 0,
                ratio: 0,
                _zTime: -1e-8,
                _prom: 0,
                _ps: !1,
                _rts: 1
            });
            var zt = function (e) {
                function t(t, n) {
                    var i;
                    return void 0 === t && (t = {}), (i = e.call(this, t, n) || this).labels = {}, i.smoothChildTiming = !!t.smoothChildTiming, i.autoRemoveChildren = !!t.autoRemoveChildren, i._sort = V(t.sortChildren), i.parent && He(i.parent, r(i)), t.scrollTrigger && Ve(r(i), t.scrollTrigger), i
                }
                i(t, e);
                var n = t.prototype;
                return n.to = function (e, t, n) {
                    return new Xt(e, we(arguments, 0, this), Je(this, U(t) ? arguments[3] : n)), this
                }, n.from = function (e, t, n) {
                    return new Xt(e, we(arguments, 1, this), Je(this, U(t) ? arguments[3] : n)), this
                }, n.fromTo = function (e, t, n, r) {
                    return new Xt(e, we(arguments, 2, this), Je(this, U(t) ? arguments[4] : r)), this
                }, n.set = function (e, t, n) {
                    return t.duration = 0, t.parent = this, Oe(t).repeatDelay || (t.repeat = 0), t.immediateRender = !!t.immediateRender, new Xt(e, t, Je(this, n), 1), this
                }, n.call = function (e, t, n) {
                    return Ge(this, Xt.delayedCall(0, e, t), Je(this, n))
                }, n.staggerTo = function (e, t, n, r, i, o, a) {
                    return n.duration = t, n.stagger = n.stagger || r, n.onComplete = o, n.onCompleteParams = a, n.parent = this, new Xt(e, n, Je(this, i)), this
                }, n.staggerFrom = function (e, t, n, r, i, o, a) {
                    return n.runBackwards = 1, Oe(n).immediateRender = V(n.immediateRender), this.staggerTo(e, t, n, r, i, o, a)
                }, n.staggerFromTo = function (e, t, n, r, i, o, a, s) {
                    return r.startAt = n, Oe(r).immediateRender = V(r.immediateRender), this.staggerTo(e, t, r, i, o, a, s)
                }, n.render = function (e, t, n) {
                    var r, i, a, s, c, l, u, h, d, p, f, m, g = this._time,
                        v = this._dirty ? this.totalDuration() : this._tDur,
                        y = this._dur,
                        _ = this !== o && e > v - 1e-8 && e >= 0 ? v : e < 1e-8 ? 0 : e,
                        x = this._zTime < 0 != e < 0 && (this._initted || !y);
                    if (_ !== this._tTime || n || x) {
                        if (g !== this._time && y && (_ += this._time - g, e += this._time - g), r = _, d = this._start, l = !(h = this._ts), x && (y || (g = this._zTime), (e || !t) && (this._zTime = e)), this._repeat && (f = this._yoyo, c = y + this._rDelay, ((r = xe(_ % c)) > y || v === _) && (r = y), (s = ~~(_ / c)) && s === _ / c && (r = y, s--), p = ze(this._tTime, c), !g && this._tTime && p !== s && (p = s), f && 1 & s && (r = y - r, m = 1), s !== p && !this._lock)) {
                            var b = f && 1 & p,
                                w = b === (f && 1 & s);
                            if (s < p && (b = !b), g = b ? 0 : y, this._lock = 1, this.render(g || (m ? 0 : xe(s * c)), t, !y)._lock = 0, !t && this.parent && dt(this, "onRepeat"), this.vars.repeatRefresh && !m && (this.invalidate()._lock = 1), g !== this._time || l !== !this._ts) return this;
                            if (w && (this._lock = 2, g = b ? y + 1e-4 : -1e-4, this.render(g, !0), this.vars.repeatRefresh && !m && this.invalidate()), this._lock = 0, !this._ts && !l) return this;
                            Ct(this, m)
                        }
                        if (this._hasPause && !this._forcing && this._lock < 2 && (u = function (e, t, n) {
                                var r;
                                if (n > t)
                                    for (r = e._first; r && r._start <= n;) {
                                        if (!r._dur && "isPause" === r.data && r._start > t) return r;
                                        r = r._next
                                    } else
                                        for (r = e._last; r && r._start >= n;) {
                                            if (!r._dur && "isPause" === r.data && r._start < t) return r;
                                            r = r._prev
                                        }
                            }(this, xe(g), xe(r))) && (_ -= r - (r = u._start)), this._tTime = _, this._time = r, this._act = !h, this._initted || (this._onUpdate = this.vars.onUpdate, this._initted = 1, this._zTime = e), g || !r || t || dt(this, "onStart"), r >= g && e >= 0)
                            for (i = this._first; i;) {
                                if (a = i._next, (i._act || r >= i._start) && i._ts && u !== i) {
                                    if (i.parent !== this) return this.render(e, t, n);
                                    if (i.render(i._ts > 0 ? (r - i._start) * i._ts : (i._dirty ? i.totalDuration() : i._tDur) + (r - i._start) * i._ts, t, n), r !== this._time || !this._ts && !l) {
                                        u = 0, a && (_ += this._zTime = -1e-8);
                                        break
                                    }
                                }
                                i = a
                            } else {
                                i = this._last;
                                for (var M = e < 0 ? e : r; i;) {
                                    if (a = i._prev, (i._act || M <= i._end) && i._ts && u !== i) {
                                        if (i.parent !== this) return this.render(e, t, n);
                                        if (i.render(i._ts > 0 ? (M - i._start) * i._ts : (i._dirty ? i.totalDuration() : i._tDur) + (M - i._start) * i._ts, t, n), r !== this._time || !this._ts && !l) {
                                            u = 0, a && (_ += this._zTime = M ? -1e-8 : 1e-8);
                                            break
                                        }
                                    }
                                    i = a
                                }
                            }
                        if (u && !t && (this.pause(), u.render(r >= g ? 0 : -1e-8)._zTime = r >= g ? 1 : -1, this._ts)) return this._start = d, Fe(this), this.render(e, t, n);
                        this._onUpdate && !t && dt(this, "onUpdate", !0), (_ === v && v >= this.totalDuration() || !_ && g) && (d !== this._start && Math.abs(h) === Math.abs(this._ts) || this._lock || ((e || !y) && (_ === v && this._ts > 0 || !_ && this._ts < 0) && De(this, 1), t || e < 0 && !g || !_ && !g || (dt(this, _ === v ? "onComplete" : "onReverseComplete", !0), this._prom && !(_ < v && this.timeScale() > 0) && this._prom())))
                    }
                    return this
                }, n.add = function (e, t) {
                    var n = this;
                    if (U(t) || (t = Je(this, t)), !(e instanceof kt)) {
                        if (X(e)) return e.forEach((function (e) {
                            return n.add(e, t)
                        })), Ne(this);
                        if (B(e)) return this.addLabel(e, t);
                        if (!F(e)) return this;
                        e = Xt.delayedCall(0, e)
                    }
                    return this !== e ? Ge(this, e, t) : this
                }, n.getChildren = function (e, t, n, r) {
                    void 0 === e && (e = !0), void 0 === t && (t = !0), void 0 === n && (n = !0), void 0 === r && (r = -O);
                    for (var i = [], o = this._first; o;) o._start >= r && (o instanceof Xt ? t && i.push(o) : (n && i.push(o), e && i.push.apply(i, o.getChildren(!0, t, n)))), o = o._next;
                    return i
                }, n.getById = function (e) {
                    for (var t = this.getChildren(1, 1, 1), n = t.length; n--;)
                        if (t[n].vars.id === e) return t[n]
                }, n.remove = function (e) {
                    return B(e) ? this.removeLabel(e) : F(e) ? this.killTweensOf(e) : (Re(this, e), e === this._recent && (this._recent = this._last), Ne(this))
                }, n.totalTime = function (t, n) {
                    return arguments.length ? (this._forcing = 1, !this._dp && this._ts && (this._start = xe(Mt.time - (this._ts > 0 ? t / this._ts : (this.totalDuration() - t) / -this._ts))), e.prototype.totalTime.call(this, t, n), this._forcing = 0, this) : this._tTime
                }, n.addLabel = function (e, t) {
                    return this.labels[e] = Je(this, t), this
                }, n.removeLabel = function (e) {
                    return delete this.labels[e], this
                }, n.addPause = function (e, t, n) {
                    var r = Xt.delayedCall(0, t || se, n);
                    return r.data = "isPause", this._hasPause = 1, Ge(this, r, Je(this, e))
                }, n.removePause = function (e) {
                    var t = this._first;
                    for (e = Je(this, e); t;) t._start === e && "isPause" === t.data && De(t), t = t._next
                }, n.killTweensOf = function (e, t, n) {
                    for (var r = this.getTweensOf(e, n), i = r.length; i--;) Bt !== r[i] && r[i].kill(e, t);
                    return this
                }, n.getTweensOf = function (e, t) {
                    for (var n, r = [], i = nt(e), o = this._first, a = U(t); o;) o instanceof Xt ? be(o._targets, i) && (a ? (!Bt || o._initted && o._ts) && o.globalTime(0) <= t && o.globalTime(o.totalDuration()) > t : !t || o.isActive()) && r.push(o) : (n = o.getTweensOf(i, t)).length && r.push.apply(r, n), o = o._next;
                    return r
                }, n.tweenTo = function (e, t) {
                    t = t || {};
                    var n = this,
                        r = Je(n, e),
                        i = t,
                        o = i.startAt,
                        a = i.onStart,
                        s = i.onStartParams,
                        c = Xt.to(n, Ae(t, {
                            ease: "none",
                            lazy: !1,
                            time: r,
                            duration: t.duration || Math.abs((r - (o && "time" in o ? o.time : n._time)) / n.timeScale()) || 1e-8,
                            onStart: function () {
                                n.pause();
                                var e = t.duration || Math.abs((r - n._time) / n.timeScale());
                                c._dur !== e && qe(c, e).render(c._time, !0, !0), a && a.apply(c, s || [])
                            }
                        }));
                    return c
                }, n.tweenFromTo = function (e, t, n) {
                    return this.tweenTo(t, Ae({
                        startAt: {
                            time: Je(this, e)
                        }
                    }, n))
                }, n.recent = function () {
                    return this._recent
                }, n.nextLabel = function (e) {
                    return void 0 === e && (e = this._time), ht(this, Je(this, e))
                }, n.previousLabel = function (e) {
                    return void 0 === e && (e = this._time), ht(this, Je(this, e), 1)
                }, n.currentLabel = function (e) {
                    return arguments.length ? this.seek(e, !0) : this.previousLabel(this._time + 1e-8)
                }, n.shiftChildren = function (e, t, n) {
                    void 0 === n && (n = 0);
                    for (var r, i = this._first, o = this.labels; i;) i._start >= n && (i._start += e), i = i._next;
                    if (t)
                        for (r in o) o[r] >= n && (o[r] += e);
                    return Ne(this)
                }, n.invalidate = function () {
                    var t = this._first;
                    for (this._lock = 0; t;) t.invalidate(), t = t._next;
                    return e.prototype.invalidate.call(this)
                }, n.clear = function (e) {
                    void 0 === e && (e = !0);
                    for (var t, n = this._first; n;) t = n._next, this.remove(n), n = t;
                    return this._time = this._tTime = this._pTime = 0, e && (this.labels = {}), Ne(this)
                }, n.totalDuration = function (e) {
                    var t, n, r, i, a = 0,
                        s = this,
                        c = s._last,
                        l = O;
                    if (arguments.length) return s.timeScale((s._repeat < 0 ? s.duration() : s.totalDuration()) / (s.reversed() ? -e : e));
                    if (s._dirty) {
                        for (i = s.parent; c;) t = c._prev, c._dirty && c.totalDuration(), (r = c._start) > l && s._sort && c._ts && !s._lock ? (s._lock = 1, Ge(s, c, r - c._delay, 1)._lock = 0) : l = r, r < 0 && c._ts && (a -= r, (!i && !s._dp || i && i.smoothChildTiming) && (s._start += r / s._ts, s._time -= r, s._tTime -= r), s.shiftChildren(-r, !1, -Infinity), l = 0), (n = Fe(c)) > a && c._ts && (a = n), c = t;
                        qe(s, s === o && s._time > a ? s._time : a, 1), s._dirty = 0
                    }
                    return s._tDur
                }, t.updateRoot = function (e) {
                    if (o._ts && (Te(o, Be(e, o)), u = Mt.frame), Mt.frame >= pe) {
                        pe += C.autoSleep || 120;
                        var t = o._first;
                        if ((!t || !t._ts) && C.autoSleep && Mt._listeners.length < 2) {
                            for (; t && !t._ts;) t = t._next;
                            t || Mt.sleep()
                        }
                    }
                }, t
            }(kt);
            Ae(zt.prototype, {
                _lock: 0,
                _hasPause: 0,
                _forcing: 0
            });
            var Bt, Ft = function (e, t, n, r, i, o, a) {
                    var s, c, l, u, h, d, p, f, m = new cn(this._pt, e, t, 0, 1, tn, null, i),
                        g = 0,
                        v = 0;
                    for (m.b = n, m.e = r, n += "", (p = ~(r += "").indexOf("random(")) && (r = lt(r)), o && (o(f = [n, r], e, t), n = f[0], r = f[1]), c = n.match(Q) || []; s = Q.exec(r);) u = s[0], h = r.substring(g, s.index), l ? l = (l + 1) % 5 : "rgba(" === h.substr(-5) && (l = 1), u !== c[v++] && (d = parseFloat(c[v - 1]) || 0, m._pt = {
                        _next: m._pt,
                        p: h || 1 === v ? h : ",",
                        s: d,
                        c: "=" === u.charAt(1) ? parseFloat(u.substr(2)) * ("-" === u.charAt(0) ? -1 : 1) : parseFloat(u) - d,
                        m: l && l < 4 ? Math.round : 0
                    }, g = Q.lastIndex);
                    return m.c = g < r.length ? r.substring(g, r.length) : "", m.fp = a, (K.test(r) || p) && (m.e = 0), this._pt = m, m
                },
                Ut = function (e, t, n, r, i, o, a, s, c) {
                    F(r) && (r = r(i || 0, e, o));
                    var l, u = e[t],
                        h = "get" !== n ? n : F(u) ? c ? e[t.indexOf("set") || !F(e["get" + t.substr(3)]) ? t : "get" + t.substr(3)](c) : e[t]() : u,
                        d = F(u) ? c ? Zt : Jt : Yt;
                    if (B(r) && (~r.indexOf("random(") && (r = lt(r)), "=" === r.charAt(1) && (r = parseFloat(h) + parseFloat(r.substr(2)) * ("-" === r.charAt(0) ? -1 : 1) + ($e(h) || 0))), h !== r) return isNaN(h * r) ? (!u && !(t in e) && ie(t, r), Ft.call(this, e, t, h, r, d, s || C.stringFilter, c)) : (l = new cn(this._pt, e, t, +h || 0, r - (h || 0), "boolean" == typeof u ? en : Kt, 0, d), c && (l.fp = c), a && l.modifier(a, this, e), this._pt = l)
                },
                Ht = function (e, t, n, r, i, o) {
                    var a, s, c, l;
                    if (he[e] && !1 !== (a = new he[e]).init(i, a.rawVars ? t[e] : function (e, t, n, r, i) {
                            if (F(e) && (e = Vt(e, i, t, n, r)), !G(e) || e.style && e.nodeType || X(e)) return B(e) ? Vt(e, i, t, n, r) : e;
                            var o, a = {};
                            for (o in e) a[o] = Vt(e[o], i, t, n, r);
                            return a
                        }(t[e], r, i, o, n), n, r, o) && (n._pt = s = new cn(n._pt, i, e, 0, 1, a.render, a, 0, a.priority), n !== h))
                        for (c = n._ptLookup[n._targets.indexOf(i)], l = a._props.length; l--;) c[a._props[l]] = s;
                    return a
                },
                Gt = function e(t, n) {
                    var r, i, a, s, c, l, u, h, d, p, f, m, g, v = t.vars,
                        y = v.ease,
                        _ = v.startAt,
                        x = v.immediateRender,
                        b = v.lazy,
                        w = v.onUpdate,
                        M = v.onUpdateParams,
                        T = v.callbackScope,
                        S = v.runBackwards,
                        E = v.yoyoEase,
                        A = v.keyframes,
                        j = v.autoRevert,
                        L = t._dur,
                        C = t._startAt,
                        O = t._targets,
                        R = t.parent,
                        D = R && "nested" === R.data ? R.parent._targets : O,
                        N = "auto" === t._overwrite,
                        I = t.timeline;
                    if (I && (!A || !y) && (y = "none"), t._ease = Pt(y, P.ease), t._yEase = E ? Lt(Pt(!0 === E ? y : E, P.ease)) : 0, E && t._yoyo && !t._repeat && (E = t._yEase, t._yEase = t._ease, t._ease = E), !I) {
                        if (m = (h = O[0] ? ve(O[0]).harness : 0) && v[h.prop], r = Pe(v, ce), C && C.render(-1, !0).kill(), _) {
                            if (De(t._startAt = Xt.set(O, Ae({
                                    data: "isStart",
                                    overwrite: !1,
                                    parent: R,
                                    immediateRender: !0,
                                    lazy: V(b),
                                    startAt: null,
                                    delay: 0,
                                    onUpdate: w,
                                    onUpdateParams: M,
                                    callbackScope: T,
                                    stagger: 0
                                }, _))), x)
                                if (n > 0) !j && (t._startAt = 0);
                                else if (L && !(n < 0 && C)) return void(t._zTime = n)
                        } else if (S && L)
                            if (C) !j && (t._startAt = 0);
                            else if (n && (x = !1), a = Ae({
                                overwrite: !1,
                                data: "isFromStart",
                                lazy: x && V(b),
                                immediateRender: x,
                                stagger: 0,
                                parent: R
                            }, r), m && (a[h.prop] = m), De(t._startAt = Xt.set(O, a)), x) {
                            if (!n) return
                        } else e(t._startAt, 1e-8);
                        for (t._pt = 0, b = L && V(b) || b && !L, i = 0; i < O.length; i++) {
                            if (u = (c = O[i])._gsap || ge(O)[i]._gsap, t._ptLookup[i] = p = {}, ue[u.id] && Me(), f = D === O ? i : D.indexOf(c), h && !1 !== (d = new h).init(c, m || r, t, f, D) && (t._pt = s = new cn(t._pt, c, d.name, 0, 1, d.render, d, 0, d.priority), d._props.forEach((function (e) {
                                    p[e] = s
                                })), d.priority && (l = 1)), !h || m)
                                for (a in r) he[a] && (d = Ht(a, r, t, f, c, D)) ? d.priority && (l = 1) : p[a] = s = Ut.call(t, c, a, "get", r[a], f, D, 0, v.stringFilter);
                            t._op && t._op[i] && t.kill(c, t._op[i]), N && t._pt && (Bt = t, o.killTweensOf(c, p, t.globalTime(0)), g = !t.parent, Bt = 0), t._pt && b && (ue[u.id] = 1)
                        }
                        l && sn(t), t._onInit && t._onInit(t)
                    }
                    t._from = !I && !!v.runBackwards, t._onUpdate = w, t._initted = (!t._op || t._pt) && !g
                },
                Vt = function (e, t, n, r, i) {
                    return F(e) ? e.call(t, n, r, i) : B(e) && ~e.indexOf("random(") ? lt(e) : e
                },
                Wt = me + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase",
                qt = (Wt + ",id,stagger,delay,duration,paused,scrollTrigger").split(","),
                Xt = function (e) {
                    function t(t, n, i, a) {
                        var s;
                        "number" == typeof n && (i.duration = n, n = i, i = null);
                        var c, l, u, h, d, p, f, m, g = (s = e.call(this, a ? n : Oe(n), i) || this).vars,
                            v = g.duration,
                            y = g.delay,
                            _ = g.immediateRender,
                            x = g.stagger,
                            b = g.overwrite,
                            w = g.keyframes,
                            M = g.defaults,
                            T = g.scrollTrigger,
                            S = g.yoyoEase,
                            E = s.parent,
                            A = (X(t) ? U(t[0]) : "length" in n) ? [t] : nt(t);
                        if (s._targets = A.length ? ge(A) : oe("GSAP target " + t + " not found. https://greensock.com", !C.nullTargetWarn) || [], s._ptLookup = [], s._overwrite = b, w || x || q(v) || q(y)) {
                            if (n = s.vars, (c = s.timeline = new zt({
                                    data: "nested",
                                    defaults: M || {}
                                })).kill(), c.parent = r(s), w) Ae(c.vars.defaults, {
                                ease: "none"
                            }), w.forEach((function (e) {
                                return c.to(A, e, ">")
                            }));
                            else {
                                if (h = A.length, f = x ? it(x) : se, G(x))
                                    for (d in x) ~Wt.indexOf(d) && (m || (m = {}), m[d] = x[d]);
                                for (l = 0; l < h; l++) {
                                    for (d in u = {}, n) qt.indexOf(d) < 0 && (u[d] = n[d]);
                                    u.stagger = 0, S && (u.yoyoEase = S), m && Le(u, m), p = A[l], u.duration = +Vt(v, r(s), l, p, A), u.delay = (+Vt(y, r(s), l, p, A) || 0) - s._delay, !x && 1 === h && u.delay && (s._delay = y = u.delay, s._start += y, u.delay = 0), c.to(p, u, f(l, p, A))
                                }
                                c.duration() ? v = y = 0 : s.timeline = 0
                            }
                            v || s.duration(v = c.duration())
                        } else s.timeline = 0;
                        return !0 === b && (Bt = r(s), o.killTweensOf(A), Bt = 0), E && He(E, r(s)), (_ || !v && !w && s._start === xe(E._time) && V(_) && function e(t) {
                            return !t || t._ts && e(t.parent)
                        }(r(s)) && "nested" !== E.data) && (s._tTime = -1e-8, s.render(Math.max(0, -y))), T && Ve(r(s), T), s
                    }
                    i(t, e);
                    var n = t.prototype;
                    return n.render = function (e, t, n) {
                        var r, i, o, a, s, c, l, u, h, d = this._time,
                            p = this._tDur,
                            f = this._dur,
                            m = e > p - 1e-8 && e >= 0 ? p : e < 1e-8 ? 0 : e;
                        if (f) {
                            if (m !== this._tTime || !e || n || this._startAt && this._zTime < 0 != e < 0) {
                                if (r = m, u = this.timeline, this._repeat) {
                                    if (a = f + this._rDelay, ((r = xe(m % a)) > f || p === m) && (r = f), (o = ~~(m / a)) && o === m / a && (r = f, o--), (c = this._yoyo && 1 & o) && (h = this._yEase, r = f - r), s = ze(this._tTime, a), r === d && !n && this._initted) return this;
                                    o !== s && (u && this._yEase && Ct(u, c), !this.vars.repeatRefresh || c || this._lock || (this._lock = n = 1, this.render(xe(a * o), !0).invalidate()._lock = 0))
                                }
                                if (!this._initted) {
                                    if (We(this, e < 0 ? e : r, n, t)) return this._tTime = 0, this;
                                    if (f !== this._dur) return this.render(e, t, n)
                                }
                                for (this._tTime = m, this._time = r, !this._act && this._ts && (this._act = 1, this._lazy = 0), this.ratio = l = (h || this._ease)(r / f), this._from && (this.ratio = l = 1 - l), r && !d && !t && dt(this, "onStart"), i = this._pt; i;) i.r(l, i.d), i = i._next;
                                u && u.render(e < 0 ? e : !r && c ? -1e-8 : u._dur * l, t, n) || this._startAt && (this._zTime = e), this._onUpdate && !t && (e < 0 && this._startAt && this._startAt.render(e, !0, n), dt(this, "onUpdate")), this._repeat && o !== s && this.vars.onRepeat && !t && this.parent && dt(this, "onRepeat"), m !== this._tDur && m || this._tTime !== m || (e < 0 && this._startAt && !this._onUpdate && this._startAt.render(e, !0, !0), (e || !f) && (m === this._tDur && this._ts > 0 || !m && this._ts < 0) && De(this, 1), t || e < 0 && !d || !m && !d || (dt(this, m === p ? "onComplete" : "onReverseComplete", !0), this._prom && !(m < p && this.timeScale() > 0) && this._prom()))
                            }
                        } else ! function (e, t, n, r) {
                            var i, o, a = e.ratio,
                                s = t < 0 || !t && a && !e._start && e._zTime > 1e-8 && !e._dp._lock || e._ts < 0 || e._dp._ts < 0 ? 0 : 1,
                                c = e._rDelay,
                                l = 0;
                            if (c && e._repeat && (l = Qe(0, e._tDur, t), ze(l, c) !== (o = ze(e._tTime, c)) && (a = 1 - s, e.vars.repeatRefresh && e._initted && e.invalidate())), e._initted || !We(e, t, r, n))
                                if (s !== a || r || 1e-8 === e._zTime || !t && e._zTime) {
                                    for (o = e._zTime, e._zTime = t || (n ? 1e-8 : 0), n || (n = t && !o), e.ratio = s, e._from && (s = 1 - s), e._time = 0, e._tTime = l, n || dt(e, "onStart"), i = e._pt; i;) i.r(s, i.d), i = i._next;
                                    e._startAt && t < 0 && e._startAt.render(t, !0, !0), e._onUpdate && !n && dt(e, "onUpdate"), l && e._repeat && !n && e.parent && dt(e, "onRepeat"), (t >= e._tDur || t < 0) && e.ratio === s && (s && De(e, 1), n || (dt(e, s ? "onComplete" : "onReverseComplete", !0), e._prom && e._prom()))
                                } else e._zTime || (e._zTime = t)
                        }(this, e, t, n);
                        return this
                    }, n.targets = function () {
                        return this._targets
                    }, n.invalidate = function () {
                        return this._pt = this._op = this._startAt = this._onUpdate = this._act = this._lazy = 0, this._ptLookup = [], this.timeline && this.timeline.invalidate(), e.prototype.invalidate.call(this)
                    }, n.kill = function (e, t) {
                        if (void 0 === t && (t = "all"), !(e || t && "all" !== t) && (this._lazy = 0, this.parent)) return pt(this);
                        if (this.timeline) {
                            var n = this.timeline.totalDuration();
                            return this.timeline.killTweensOf(e, t, Bt && !0 !== Bt.vars.overwrite)._first || pt(this), this.parent && n !== this.timeline.totalDuration() && qe(this, this._dur * this.timeline._tDur / n), this
                        }
                        var r, i, o, a, s, c, l, u = this._targets,
                            h = e ? nt(e) : u,
                            d = this._ptLookup,
                            p = this._pt;
                        if ((!t || "all" === t) && function (e, t) {
                                for (var n = e.length, r = n === t.length; r && n-- && e[n] === t[n];);
                                return n < 0
                            }(u, h)) return "all" === t && (this._pt = 0), pt(this);
                        for (r = this._op = this._op || [], "all" !== t && (B(t) && (s = {}, _e(t, (function (e) {
                                return s[e] = 1
                            })), t = s), t = function (e, t) {
                                var n, r, i, o, a = e[0] ? ve(e[0]).harness : 0,
                                    s = a && a.aliases;
                                if (!s) return t;
                                for (r in n = Le({}, t), s)
                                    if (r in n)
                                        for (i = (o = s[r].split(",")).length; i--;) n[o[i]] = n[r];
                                return n
                            }(u, t)), l = u.length; l--;)
                            if (~h.indexOf(u[l]))
                                for (s in i = d[l], "all" === t ? (r[l] = t, a = i, o = {}) : (o = r[l] = r[l] || {}, a = t), a)(c = i && i[s]) && ("kill" in c.d && !0 !== c.d.kill(s) || Re(this, c, "_pt"), delete i[s]), "all" !== o && (o[s] = 1);
                        return this._initted && !this._pt && p && pt(this), this
                    }, t.to = function (e, n) {
                        return new t(e, n, arguments[2])
                    }, t.from = function (e, n) {
                        return new t(e, we(arguments, 1))
                    }, t.delayedCall = function (e, n, r, i) {
                        return new t(n, 0, {
                            immediateRender: !1,
                            lazy: !1,
                            overwrite: !1,
                            delay: e,
                            onComplete: n,
                            onReverseComplete: n,
                            onCompleteParams: r,
                            onReverseCompleteParams: r,
                            callbackScope: i
                        })
                    }, t.fromTo = function (e, n, r) {
                        return new t(e, we(arguments, 2))
                    }, t.set = function (e, n) {
                        return n.duration = 0, n.repeatDelay || (n.repeat = 0), new t(e, n)
                    }, t.killTweensOf = function (e, t, n) {
                        return o.killTweensOf(e, t, n)
                    }, t
                }(kt);
            Ae(Xt.prototype, {
                _targets: [],
                _lazy: 0,
                _startAt: 0,
                _op: 0,
                _onInit: 0
            }), _e("staggerTo,staggerFrom,staggerFromTo", (function (e) {
                Xt[e] = function () {
                    var t = new zt,
                        n = Ke.call(arguments, 0);
                    return n.splice("staggerFromTo" === e ? 5 : 4, 0, 0), t[e].apply(t, n)
                }
            }));
            var Yt = function (e, t, n) {
                    return e[t] = n
                },
                Jt = function (e, t, n) {
                    return e[t](n)
                },
                Zt = function (e, t, n, r) {
                    return e[t](r.fp, n)
                },
                Qt = function (e, t, n) {
                    return e.setAttribute(t, n)
                },
                $t = function (e, t) {
                    return F(e[t]) ? Jt : H(e[t]) && e.setAttribute ? Qt : Yt
                },
                Kt = function (e, t) {
                    return t.set(t.t, t.p, Math.round(1e4 * (t.s + t.c * e)) / 1e4, t)
                },
                en = function (e, t) {
                    return t.set(t.t, t.p, !!(t.s + t.c * e), t)
                },
                tn = function (e, t) {
                    var n = t._pt,
                        r = "";
                    if (!e && t.b) r = t.b;
                    else if (1 === e && t.e) r = t.e;
                    else {
                        for (; n;) r = n.p + (n.m ? n.m(n.s + n.c * e) : Math.round(1e4 * (n.s + n.c * e)) / 1e4) + r, n = n._next;
                        r += t.c
                    }
                    t.set(t.t, t.p, r, t)
                },
                nn = function (e, t) {
                    for (var n = t._pt; n;) n.r(e, n.d), n = n._next
                },
                rn = function (e, t, n, r) {
                    for (var i, o = this._pt; o;) i = o._next, o.p === r && o.modifier(e, t, n), o = i
                },
                on = function (e) {
                    for (var t, n, r = this._pt; r;) n = r._next, r.p === e && !r.op || r.op === e ? Re(this, r, "_pt") : r.dep || (t = 1), r = n;
                    return !t
                },
                an = function (e, t, n, r) {
                    r.mSet(e, t, r.m.call(r.tween, n, r.mt), r)
                },
                sn = function (e) {
                    for (var t, n, r, i, o = e._pt; o;) {
                        for (t = o._next, n = r; n && n.pr > o.pr;) n = n._next;
                        (o._prev = n ? n._prev : i) ? o._prev._next = o: r = o, (o._next = n) ? n._prev = o : i = o, o = t
                    }
                    e._pt = r
                },
                cn = function () {
                    function e(e, t, n, r, i, o, a, s, c) {
                        this.t = t, this.s = r, this.c = i, this.p = n, this.r = o || Kt, this.d = a || this, this.set = s || Yt, this.pr = c || 0, this._next = e, e && (e._prev = this)
                    }
                    return e.prototype.modifier = function (e, t, n) {
                        this.mSet = this.mSet || this.set, this.set = an, this.m = e, this.mt = n, this.tween = t
                    }, e
                }();
            _e(me + "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger", (function (e) {
                return ce[e] = 1
            })), te.TweenMax = te.TweenLite = Xt, te.TimelineLite = te.TimelineMax = zt, o = new zt({
                sortChildren: !1,
                defaults: P,
                autoRemoveChildren: !0,
                id: "root",
                smoothChildTiming: !0
            }), C.stringFilter = wt;
            var ln = {
                registerPlugin: function () {
                    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                    t.forEach((function (e) {
                        return ft(e)
                    }))
                },
                timeline: function (e) {
                    return new zt(e)
                },
                getTweensOf: function (e, t) {
                    return o.getTweensOf(e, t)
                },
                getProperty: function (e, t, n, r) {
                    B(e) && (e = nt(e)[0]);
                    var i = ve(e || {}).get,
                        o = n ? Ee : Se;
                    return "native" === n && (n = ""), e ? t ? o((he[t] && he[t].get || i)(e, t, n, r)) : function (t, n, r) {
                        return o((he[t] && he[t].get || i)(e, t, n, r))
                    } : e
                },
                quickSetter: function (e, t, n) {
                    if ((e = nt(e)).length > 1) {
                        var r = e.map((function (e) {
                                return dn.quickSetter(e, t, n)
                            })),
                            i = r.length;
                        return function (e) {
                            for (var t = i; t--;) r[t](e)
                        }
                    }
                    e = e[0] || {};
                    var o = he[t],
                        a = ve(e),
                        s = a.harness && (a.harness.aliases || {})[t] || t,
                        c = o ? function (t) {
                            var r = new o;
                            h._pt = 0, r.init(e, n ? t + n : t, h, 0, [e]), r.render(1, r), h._pt && nn(1, h)
                        } : a.set(e, s);
                    return o ? c : function (t) {
                        return c(e, s, n ? t + n : t, a, 1)
                    }
                },
                isTweening: function (e) {
                    return o.getTweensOf(e, !0).length > 0
                },
                defaults: function (e) {
                    return e && e.ease && (e.ease = Pt(e.ease, P.ease)), Ce(P, e || {})
                },
                config: function (e) {
                    return Ce(C, e || {})
                },
                registerEffect: function (e) {
                    var t = e.name,
                        n = e.effect,
                        r = e.plugins,
                        i = e.defaults,
                        o = e.extendTimeline;
                    (r || "").split(",").forEach((function (e) {
                        return e && !he[e] && !te[e] && oe(t + " effect requires " + e + " plugin.")
                    })), de[t] = function (e, t, r) {
                        return n(nt(e), Ae(t || {}, i), r)
                    }, o && (zt.prototype[t] = function (e, n, r) {
                        return this.add(de[t](e, G(n) ? n : (r = n) && {}, this), r)
                    })
                },
                registerEase: function (e, t) {
                    St[e] = Pt(t)
                },
                parseEase: function (e, t) {
                    return arguments.length ? Pt(e, t) : St
                },
                getById: function (e) {
                    return o.getById(e)
                },
                exportRoot: function (e, t) {
                    void 0 === e && (e = {});
                    var n, r, i = new zt(e);
                    for (i.smoothChildTiming = V(e.smoothChildTiming), o.remove(i), i._dp = 0, i._time = i._tTime = o._time, n = o._first; n;) r = n._next, !t && !n._dur && n instanceof Xt && n.vars.onComplete === n._targets[0] || Ge(i, n, n._start - n._delay), n = r;
                    return Ge(o, i, 0), i
                },
                utils: {
                    wrap: function e(t, n, r) {
                        var i = n - t;
                        return X(t) ? ct(t, e(0, t.length), n) : Ze(r, (function (e) {
                            return (i + (e - t) % i) % i + t
                        }))
                    },
                    wrapYoyo: function e(t, n, r) {
                        var i = n - t,
                            o = 2 * i;
                        return X(t) ? ct(t, e(0, t.length - 1), n) : Ze(r, (function (e) {
                            return t + ((e = (o + (e - t) % o) % o || 0) > i ? o - e : e)
                        }))
                    },
                    distribute: it,
                    random: st,
                    snap: at,
                    normalize: function (e, t, n) {
                        return ut(e, t, 0, 1, n)
                    },
                    getUnit: $e,
                    clamp: function (e, t, n) {
                        return Ze(n, (function (n) {
                            return Qe(e, t, n)
                        }))
                    },
                    splitColor: vt,
                    toArray: nt,
                    mapRange: ut,
                    pipe: function () {
                        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                        return function (e) {
                            return t.reduce((function (e, t) {
                                return t(e)
                            }), e)
                        }
                    },
                    unitize: function (e, t) {
                        return function (n) {
                            return e(parseFloat(n)) + (t || $e(n))
                        }
                    },
                    interpolate: function e(t, n, r, i) {
                        var o = isNaN(t + n) ? 0 : function (e) {
                            return (1 - e) * t + e * n
                        };
                        if (!o) {
                            var a, s, c, l, u, h = B(t),
                                d = {};
                            if (!0 === r && (i = 1) && (r = null), h) t = {
                                p: t
                            }, n = {
                                p: n
                            };
                            else if (X(t) && !X(n)) {
                                for (c = [], l = t.length, u = l - 2, s = 1; s < l; s++) c.push(e(t[s - 1], t[s]));
                                l--, o = function (e) {
                                    e *= l;
                                    var t = Math.min(u, ~~e);
                                    return c[t](e - t)
                                }, r = n
                            } else i || (t = Le(X(t) ? [] : {}, t));
                            if (!c) {
                                for (a in n) Ut.call(d, t, a, "get", n[a]);
                                o = function (e) {
                                    return nn(e, d) || (h ? t.p : t)
                                }
                            }
                        }
                        return Ze(r, o)
                    },
                    shuffle: rt
                },
                install: re,
                effects: de,
                ticker: Mt,
                updateRoot: zt.updateRoot,
                plugins: he,
                globalTimeline: o,
                core: {
                    PropTween: cn,
                    globals: ae,
                    Tween: Xt,
                    Timeline: zt,
                    Animation: kt,
                    getCache: ve,
                    _removeLinkedListItem: Re
                }
            };
            _e("to,from,fromTo,delayedCall,set,killTweensOf", (function (e) {
                return ln[e] = Xt[e]
            })), Mt.add(zt.updateRoot), h = ln.to({}, {
                duration: 0
            });
            var un = function (e, t) {
                    for (var n = e._pt; n && n.p !== t && n.op !== t && n.fp !== t;) n = n._next;
                    return n
                },
                hn = function (e, t) {
                    return {
                        name: e,
                        rawVars: 1,
                        init: function (e, n, r) {
                            r._onInit = function (e) {
                                var r, i;
                                if (B(n) && (r = {}, _e(n, (function (e) {
                                        return r[e] = 1
                                    })), n = r), t) {
                                    for (i in r = {}, n) r[i] = t(n[i]);
                                    n = r
                                }! function (e, t) {
                                    var n, r, i, o = e._targets;
                                    for (n in t)
                                        for (r = o.length; r--;)(i = e._ptLookup[r][n]) && (i = i.d) && (i._pt && (i = un(i, n)), i && i.modifier && i.modifier(t[n], e, o[r], n))
                                }(e, n)
                            }
                        }
                    }
                },
                dn = ln.registerPlugin({
                    name: "attr",
                    init: function (e, t, n, r, i) {
                        var o, a;
                        for (o in t)(a = this.add(e, "setAttribute", (e.getAttribute(o) || 0) + "", t[o], r, i, 0, 0, o)) && (a.op = o), this._props.push(o)
                    }
                }, {
                    name: "endArray",
                    init: function (e, t) {
                        for (var n = t.length; n--;) this.add(e, n, e[n] || 0, t[n])
                    }
                }, hn("roundProps", ot), hn("modifiers"), hn("snap", at)) || ln;
            Xt.version = zt.version = dn.version = "3.4.2", l = 1, W() && Tt();
            St.Power0, St.Power1, St.Power2, St.Power3, St.Power4, St.Linear, St.Quad, St.Cubic, St.Quart, St.Quint, St.Strong, St.Elastic, St.Back, St.SteppedEase, St.Bounce, St.Sine, St.Expo, St.Circ
        },
        "./node_modules/gsap/index.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return o
            }));
            var r = n("./node_modules/gsap/gsap-core.js"),
                i = n("./node_modules/gsap/CSSPlugin.js"),
                o = r.w.registerPlugin(i.a) || r.w;
            o.core.Tween
        },
        "./node_modules/imagesloaded/imagesloaded.js": function (e, t, n) {
            var r, i;
            ! function (o, a) {
                "use strict";
                r = [n("./node_modules/ev-emitter/ev-emitter.js")], void 0 === (i = function (e) {
                    return function (e, t) {
                        var n = e.jQuery,
                            r = e.console;

                        function i(e, t) {
                            for (var n in t) e[n] = t[n];
                            return e
                        }
                        var o = Array.prototype.slice;

                        function a(e, t, s) {
                            if (!(this instanceof a)) return new a(e, t, s);
                            var c, l = e;
                            ("string" == typeof e && (l = document.querySelectorAll(e)), l) ? (this.elements = (c = l, Array.isArray(c) ? c : "object" == typeof c && "number" == typeof c.length ? o.call(c) : [c]), this.options = i({}, this.options), "function" == typeof t ? s = t : i(this.options, t), s && this.on("always", s), this.getImages(), n && (this.jqDeferred = new n.Deferred), setTimeout(this.check.bind(this))) : r.error("Bad element for imagesLoaded " + (l || e))
                        }
                        a.prototype = Object.create(t.prototype), a.prototype.options = {}, a.prototype.getImages = function () {
                            this.images = [], this.elements.forEach(this.addElementImages, this)
                        }, a.prototype.addElementImages = function (e) {
                            "IMG" == e.nodeName && this.addImage(e), !0 === this.options.background && this.addElementBackgroundImages(e);
                            var t = e.nodeType;
                            if (t && s[t]) {
                                for (var n = e.querySelectorAll("img"), r = 0; r < n.length; r++) {
                                    var i = n[r];
                                    this.addImage(i)
                                }
                                if ("string" == typeof this.options.background) {
                                    var o = e.querySelectorAll(this.options.background);
                                    for (r = 0; r < o.length; r++) {
                                        var a = o[r];
                                        this.addElementBackgroundImages(a)
                                    }
                                }
                            }
                        };
                        var s = {
                            1: !0,
                            9: !0,
                            11: !0
                        };

                        function c(e) {
                            this.img = e
                        }

                        function l(e, t) {
                            this.url = e, this.element = t, this.img = new Image
                        }
                        return a.prototype.addElementBackgroundImages = function (e) {
                            var t = getComputedStyle(e);
                            if (t)
                                for (var n = /url\((['"])?(.*?)\1\)/gi, r = n.exec(t.backgroundImage); null !== r;) {
                                    var i = r && r[2];
                                    i && this.addBackground(i, e), r = n.exec(t.backgroundImage)
                                }
                        }, a.prototype.addImage = function (e) {
                            var t = new c(e);
                            this.images.push(t)
                        }, a.prototype.addBackground = function (e, t) {
                            var n = new l(e, t);
                            this.images.push(n)
                        }, a.prototype.check = function () {
                            var e = this;

                            function t(t, n, r) {
                                setTimeout((function () {
                                    e.progress(t, n, r)
                                }))
                            }
                            this.progressedCount = 0, this.hasAnyBroken = !1, this.images.length ? this.images.forEach((function (e) {
                                e.once("progress", t), e.check()
                            })) : this.complete()
                        }, a.prototype.progress = function (e, t, n) {
                            this.progressedCount++, this.hasAnyBroken = this.hasAnyBroken || !e.isLoaded, this.emitEvent("progress", [this, e, t]), this.jqDeferred && this.jqDeferred.notify && this.jqDeferred.notify(this, e), this.progressedCount == this.images.length && this.complete(), this.options.debug && r && r.log("progress: " + n, e, t)
                        }, a.prototype.complete = function () {
                            var e = this.hasAnyBroken ? "fail" : "done";
                            if (this.isComplete = !0, this.emitEvent(e, [this]), this.emitEvent("always", [this]), this.jqDeferred) {
                                var t = this.hasAnyBroken ? "reject" : "resolve";
                                this.jqDeferred[t](this)
                            }
                        }, c.prototype = Object.create(t.prototype), c.prototype.check = function () {
                            this.getIsImageComplete() ? this.confirm(0 !== this.img.naturalWidth, "naturalWidth") : (this.proxyImage = new Image, this.proxyImage.addEventListener("load", this), this.proxyImage.addEventListener("error", this), this.img.addEventListener("load", this), this.img.addEventListener("error", this), this.proxyImage.src = this.img.src)
                        }, c.prototype.getIsImageComplete = function () {
                            return this.img.complete && this.img.naturalWidth
                        }, c.prototype.confirm = function (e, t) {
                            this.isLoaded = e, this.emitEvent("progress", [this, this.img, t])
                        }, c.prototype.handleEvent = function (e) {
                            var t = "on" + e.type;
                            this[t] && this[t](e)
                        }, c.prototype.onload = function () {
                            this.confirm(!0, "onload"), this.unbindEvents()
                        }, c.prototype.onerror = function () {
                            this.confirm(!1, "onerror"), this.unbindEvents()
                        }, c.prototype.unbindEvents = function () {
                            this.proxyImage.removeEventListener("load", this), this.proxyImage.removeEventListener("error", this), this.img.removeEventListener("load", this), this.img.removeEventListener("error", this)
                        }, l.prototype = Object.create(c.prototype), l.prototype.check = function () {
                            this.img.addEventListener("load", this), this.img.addEventListener("error", this), this.img.src = this.url, this.getIsImageComplete() && (this.confirm(0 !== this.img.naturalWidth, "naturalWidth"), this.unbindEvents())
                        }, l.prototype.unbindEvents = function () {
                            this.img.removeEventListener("load", this), this.img.removeEventListener("error", this)
                        }, l.prototype.confirm = function (e, t) {
                            this.isLoaded = e, this.emitEvent("progress", [this, this.element, t])
                        }, a.makeJQueryPlugin = function (t) {
                            (t = t || e.jQuery) && ((n = t).fn.imagesLoaded = function (e, t) {
                                return new a(this, e, t).jqDeferred.promise(n(this))
                            })
                        }, a.makeJQueryPlugin(), a
                    }(o, e)
                }.apply(t, r)) || (e.exports = i)
            }("undefined" != typeof window ? window : this)
        },
        "./node_modules/intersection-observer/intersection-observer.js": function (e, t) {
            ! function () {
                "use strict";
                if ("object" == typeof window)
                    if ("IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype) "isIntersecting" in window.IntersectionObserverEntry.prototype || Object.defineProperty(window.IntersectionObserverEntry.prototype, "isIntersecting", {
                        get: function () {
                            return this.intersectionRatio > 0
                        }
                    });
                    else {
                        var e = function (e) {
                                for (var t = window.document, n = i(t); n;) n = i(t = n.ownerDocument);
                                return t
                            }(),
                            t = [],
                            n = null,
                            r = null;
                        a.prototype.THROTTLE_TIMEOUT = 100, a.prototype.POLL_INTERVAL = null, a.prototype.USE_MUTATION_OBSERVER = !0, a._setupCrossOriginUpdater = function () {
                            return n || (n = function (e, n) {
                                r = e && n ? h(e, n) : {
                                    top: 0,
                                    bottom: 0,
                                    left: 0,
                                    right: 0,
                                    width: 0,
                                    height: 0
                                }, t.forEach((function (e) {
                                    e._checkForIntersections()
                                }))
                            }), n
                        }, a._resetCrossOriginUpdater = function () {
                            n = null, r = null
                        }, a.prototype.observe = function (e) {
                            if (!this._observationTargets.some((function (t) {
                                    return t.element == e
                                }))) {
                                if (!e || 1 != e.nodeType) throw new Error("target must be an Element");
                                this._registerInstance(), this._observationTargets.push({
                                    element: e,
                                    entry: null
                                }), this._monitorIntersections(e.ownerDocument), this._checkForIntersections()
                            }
                        }, a.prototype.unobserve = function (e) {
                            this._observationTargets = this._observationTargets.filter((function (t) {
                                return t.element != e
                            })), this._unmonitorIntersections(e.ownerDocument), 0 == this._observationTargets.length && this._unregisterInstance()
                        }, a.prototype.disconnect = function () {
                            this._observationTargets = [], this._unmonitorAllIntersections(), this._unregisterInstance()
                        }, a.prototype.takeRecords = function () {
                            var e = this._queuedEntries.slice();
                            return this._queuedEntries = [], e
                        }, a.prototype._initThresholds = function (e) {
                            var t = e || [0];
                            return Array.isArray(t) || (t = [t]), t.sort().filter((function (e, t, n) {
                                if ("number" != typeof e || isNaN(e) || e < 0 || e > 1) throw new Error("threshold must be a number between 0 and 1 inclusively");
                                return e !== n[t - 1]
                            }))
                        }, a.prototype._parseRootMargin = function (e) {
                            var t = (e || "0px").split(/\s+/).map((function (e) {
                                var t = /^(-?\d*\.?\d+)(px|%)$/.exec(e);
                                if (!t) throw new Error("rootMargin must be specified in pixels or percent");
                                return {
                                    value: parseFloat(t[1]),
                                    unit: t[2]
                                }
                            }));
                            return t[1] = t[1] || t[0], t[2] = t[2] || t[0], t[3] = t[3] || t[1], t
                        }, a.prototype._monitorIntersections = function (t) {
                            var n = t.defaultView;
                            if (n && -1 == this._monitoringDocuments.indexOf(t)) {
                                var r = this._checkForIntersections,
                                    o = null,
                                    a = null;
                                if (this.POLL_INTERVAL ? o = n.setInterval(r, this.POLL_INTERVAL) : (s(n, "resize", r, !0), s(t, "scroll", r, !0), this.USE_MUTATION_OBSERVER && "MutationObserver" in n && (a = new n.MutationObserver(r)).observe(t, {
                                        attributes: !0,
                                        childList: !0,
                                        characterData: !0,
                                        subtree: !0
                                    })), this._monitoringDocuments.push(t), this._monitoringUnsubscribes.push((function () {
                                        var e = t.defaultView;
                                        e && (o && e.clearInterval(o), c(e, "resize", r, !0)), c(t, "scroll", r, !0), a && a.disconnect()
                                    })), t != (this.root && this.root.ownerDocument || e)) {
                                    var l = i(t);
                                    l && this._monitorIntersections(l.ownerDocument)
                                }
                            }
                        }, a.prototype._unmonitorIntersections = function (t) {
                            var n = this._monitoringDocuments.indexOf(t);
                            if (-1 != n) {
                                var r = this.root && this.root.ownerDocument || e;
                                if (!this._observationTargets.some((function (e) {
                                        var n = e.element.ownerDocument;
                                        if (n == t) return !0;
                                        for (; n && n != r;) {
                                            var o = i(n);
                                            if ((n = o && o.ownerDocument) == t) return !0
                                        }
                                        return !1
                                    }))) {
                                    var o = this._monitoringUnsubscribes[n];
                                    if (this._monitoringDocuments.splice(n, 1), this._monitoringUnsubscribes.splice(n, 1), o(), t != r) {
                                        var a = i(t);
                                        a && this._unmonitorIntersections(a.ownerDocument)
                                    }
                                }
                            }
                        }, a.prototype._unmonitorAllIntersections = function () {
                            var e = this._monitoringUnsubscribes.slice(0);
                            this._monitoringDocuments.length = 0, this._monitoringUnsubscribes.length = 0;
                            for (var t = 0; t < e.length; t++) e[t]()
                        }, a.prototype._checkForIntersections = function () {
                            if (this.root || !n || r) {
                                var e = this._rootIsInDom(),
                                    t = e ? this._getRootRect() : {
                                        top: 0,
                                        bottom: 0,
                                        left: 0,
                                        right: 0,
                                        width: 0,
                                        height: 0
                                    };
                                this._observationTargets.forEach((function (r) {
                                    var i = r.element,
                                        a = l(i),
                                        s = this._rootContainsTarget(i),
                                        c = r.entry,
                                        u = e && s && this._computeTargetAndRootIntersection(i, a, t),
                                        h = r.entry = new o({
                                            time: window.performance && performance.now && performance.now(),
                                            target: i,
                                            boundingClientRect: a,
                                            rootBounds: n && !this.root ? null : t,
                                            intersectionRect: u
                                        });
                                    c ? e && s ? this._hasCrossedThreshold(c, h) && this._queuedEntries.push(h) : c && c.isIntersecting && this._queuedEntries.push(h) : this._queuedEntries.push(h)
                                }), this), this._queuedEntries.length && this._callback(this.takeRecords(), this)
                            }
                        }, a.prototype._computeTargetAndRootIntersection = function (t, i, o) {
                            if ("none" != window.getComputedStyle(t).display) {
                                for (var a, s, c, u, d, f, m, g, v = i, y = p(t), _ = !1; !_ && y;) {
                                    var x = null,
                                        b = 1 == y.nodeType ? window.getComputedStyle(y) : {};
                                    if ("none" == b.display) return null;
                                    if (y == this.root || 9 == y.nodeType)
                                        if (_ = !0, y == this.root || y == e) n && !this.root ? !r || 0 == r.width && 0 == r.height ? (y = null, x = null, v = null) : x = r : x = o;
                                        else {
                                            var w = p(y),
                                                M = w && l(w),
                                                T = w && this._computeTargetAndRootIntersection(w, M, o);
                                            M && T ? (y = w, x = h(M, T)) : (y = null, v = null)
                                        }
                                    else {
                                        var S = y.ownerDocument;
                                        y != S.body && y != S.documentElement && "visible" != b.overflow && (x = l(y))
                                    }
                                    if (x && (a = x, s = v, c = void 0, u = void 0, d = void 0, f = void 0, m = void 0, g = void 0, c = Math.max(a.top, s.top), u = Math.min(a.bottom, s.bottom), d = Math.max(a.left, s.left), f = Math.min(a.right, s.right), g = u - c, v = (m = f - d) >= 0 && g >= 0 && {
                                            top: c,
                                            bottom: u,
                                            left: d,
                                            right: f,
                                            width: m,
                                            height: g
                                        } || null), !v) break;
                                    y = y && p(y)
                                }
                                return v
                            }
                        }, a.prototype._getRootRect = function () {
                            var t;
                            if (this.root) t = l(this.root);
                            else {
                                var n = e.documentElement,
                                    r = e.body;
                                t = {
                                    top: 0,
                                    left: 0,
                                    right: n.clientWidth || r.clientWidth,
                                    width: n.clientWidth || r.clientWidth,
                                    bottom: n.clientHeight || r.clientHeight,
                                    height: n.clientHeight || r.clientHeight
                                }
                            }
                            return this._expandRectByRootMargin(t)
                        }, a.prototype._expandRectByRootMargin = function (e) {
                            var t = this._rootMarginValues.map((function (t, n) {
                                    return "px" == t.unit ? t.value : t.value * (n % 2 ? e.width : e.height) / 100
                                })),
                                n = {
                                    top: e.top - t[0],
                                    right: e.right + t[1],
                                    bottom: e.bottom + t[2],
                                    left: e.left - t[3]
                                };
                            return n.width = n.right - n.left, n.height = n.bottom - n.top, n
                        }, a.prototype._hasCrossedThreshold = function (e, t) {
                            var n = e && e.isIntersecting ? e.intersectionRatio || 0 : -1,
                                r = t.isIntersecting ? t.intersectionRatio || 0 : -1;
                            if (n !== r)
                                for (var i = 0; i < this.thresholds.length; i++) {
                                    var o = this.thresholds[i];
                                    if (o == n || o == r || o < n != o < r) return !0
                                }
                        }, a.prototype._rootIsInDom = function () {
                            return !this.root || d(e, this.root)
                        }, a.prototype._rootContainsTarget = function (t) {
                            return d(this.root || e, t) && (!this.root || this.root.ownerDocument == t.ownerDocument)
                        }, a.prototype._registerInstance = function () {
                            t.indexOf(this) < 0 && t.push(this)
                        }, a.prototype._unregisterInstance = function () {
                            var e = t.indexOf(this); - 1 != e && t.splice(e, 1)
                        }, window.IntersectionObserver = a, window.IntersectionObserverEntry = o
                    }
                function i(e) {
                    try {
                        return e.defaultView && e.defaultView.frameElement || null
                    } catch (e) {
                        return null
                    }
                }

                function o(e) {
                    this.time = e.time, this.target = e.target, this.rootBounds = u(e.rootBounds), this.boundingClientRect = u(e.boundingClientRect), this.intersectionRect = u(e.intersectionRect || {
                        top: 0,
                        bottom: 0,
                        left: 0,
                        right: 0,
                        width: 0,
                        height: 0
                    }), this.isIntersecting = !!e.intersectionRect;
                    var t = this.boundingClientRect,
                        n = t.width * t.height,
                        r = this.intersectionRect,
                        i = r.width * r.height;
                    this.intersectionRatio = n ? Number((i / n).toFixed(4)) : this.isIntersecting ? 1 : 0
                }

                function a(e, t) {
                    var n, r, i, o = t || {};
                    if ("function" != typeof e) throw new Error("callback must be a function");
                    if (o.root && 1 != o.root.nodeType) throw new Error("root must be an Element");
                    this._checkForIntersections = (n = this._checkForIntersections.bind(this), r = this.THROTTLE_TIMEOUT, i = null, function () {
                        i || (i = setTimeout((function () {
                            n(), i = null
                        }), r))
                    }), this._callback = e, this._observationTargets = [], this._queuedEntries = [], this._rootMarginValues = this._parseRootMargin(o.rootMargin), this.thresholds = this._initThresholds(o.threshold), this.root = o.root || null, this.rootMargin = this._rootMarginValues.map((function (e) {
                        return e.value + e.unit
                    })).join(" "), this._monitoringDocuments = [], this._monitoringUnsubscribes = []
                }

                function s(e, t, n, r) {
                    "function" == typeof e.addEventListener ? e.addEventListener(t, n, r || !1) : "function" == typeof e.attachEvent && e.attachEvent("on" + t, n)
                }

                function c(e, t, n, r) {
                    "function" == typeof e.removeEventListener ? e.removeEventListener(t, n, r || !1) : "function" == typeof e.detatchEvent && e.detatchEvent("on" + t, n)
                }

                function l(e) {
                    var t;
                    try {
                        t = e.getBoundingClientRect()
                    } catch (e) {}
                    return t ? (t.width && t.height || (t = {
                        top: t.top,
                        right: t.right,
                        bottom: t.bottom,
                        left: t.left,
                        width: t.right - t.left,
                        height: t.bottom - t.top
                    }), t) : {
                        top: 0,
                        bottom: 0,
                        left: 0,
                        right: 0,
                        width: 0,
                        height: 0
                    }
                }

                function u(e) {
                    return !e || "x" in e ? e : {
                        top: e.top,
                        y: e.top,
                        bottom: e.bottom,
                        left: e.left,
                        x: e.left,
                        right: e.right,
                        width: e.width,
                        height: e.height
                    }
                }

                function h(e, t) {
                    var n = t.top - e.top,
                        r = t.left - e.left;
                    return {
                        top: n,
                        left: r,
                        height: t.height,
                        width: t.width,
                        bottom: n + t.height,
                        right: r + t.width
                    }
                }

                function d(e, t) {
                    for (var n = t; n;) {
                        if (n == e) return !0;
                        n = p(n)
                    }
                    return !1
                }

                function p(t) {
                    var n = t.parentNode;
                    return 9 == t.nodeType && t != e ? i(t) : n && 11 == n.nodeType && n.host ? n.host : n && n.assignedSlot ? n.assignedSlot.parentNode : n
                }
            }()
        },
        "./node_modules/jquery/dist/jquery.js": function (e, t, n) {
            var r;
            ! function (t, n) {
                "use strict";
                "object" == typeof e.exports ? e.exports = t.document ? n(t, !0) : function (e) {
                    if (!e.document) throw new Error("jQuery requires a window with a document");
                    return n(e)
                } : n(t)
            }("undefined" != typeof window ? window : this, (function (n, i) {
                "use strict";
                var o = [],
                    a = Object.getPrototypeOf,
                    s = o.slice,
                    c = o.flat ? function (e) {
                        return o.flat.call(e)
                    } : function (e) {
                        return o.concat.apply([], e)
                    },
                    l = o.push,
                    u = o.indexOf,
                    h = {},
                    d = h.toString,
                    p = h.hasOwnProperty,
                    f = p.toString,
                    m = f.call(Object),
                    g = {},
                    v = function (e) {
                        return "function" == typeof e && "number" != typeof e.nodeType
                    },
                    y = function (e) {
                        return null != e && e === e.window
                    },
                    _ = n.document,
                    x = {
                        type: !0,
                        src: !0,
                        nonce: !0,
                        noModule: !0
                    };

                function b(e, t, n) {
                    var r, i, o = (n = n || _).createElement("script");
                    if (o.text = e, t)
                        for (r in x)(i = t[r] || t.getAttribute && t.getAttribute(r)) && o.setAttribute(r, i);
                    n.head.appendChild(o).parentNode.removeChild(o)
                }

                function w(e) {
                    return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? h[d.call(e)] || "object" : typeof e
                }
                var M = function (e, t) {
                    return new M.fn.init(e, t)
                };

                function T(e) {
                    var t = !!e && "length" in e && e.length,
                        n = w(e);
                    return !v(e) && !y(e) && ("array" === n || 0 === t || "number" == typeof t && t > 0 && t - 1 in e)
                }
                M.fn = M.prototype = {
                    jquery: "3.5.1",
                    constructor: M,
                    length: 0,
                    toArray: function () {
                        return s.call(this)
                    },
                    get: function (e) {
                        return null == e ? s.call(this) : e < 0 ? this[e + this.length] : this[e]
                    },
                    pushStack: function (e) {
                        var t = M.merge(this.constructor(), e);
                        return t.prevObject = this, t
                    },
                    each: function (e) {
                        return M.each(this, e)
                    },
                    map: function (e) {
                        return this.pushStack(M.map(this, (function (t, n) {
                            return e.call(t, n, t)
                        })))
                    },
                    slice: function () {
                        return this.pushStack(s.apply(this, arguments))
                    },
                    first: function () {
                        return this.eq(0)
                    },
                    last: function () {
                        return this.eq(-1)
                    },
                    even: function () {
                        return this.pushStack(M.grep(this, (function (e, t) {
                            return (t + 1) % 2
                        })))
                    },
                    odd: function () {
                        return this.pushStack(M.grep(this, (function (e, t) {
                            return t % 2
                        })))
                    },
                    eq: function (e) {
                        var t = this.length,
                            n = +e + (e < 0 ? t : 0);
                        return this.pushStack(n >= 0 && n < t ? [this[n]] : [])
                    },
                    end: function () {
                        return this.prevObject || this.constructor()
                    },
                    push: l,
                    sort: o.sort,
                    splice: o.splice
                }, M.extend = M.fn.extend = function () {
                    var e, t, n, r, i, o, a = arguments[0] || {},
                        s = 1,
                        c = arguments.length,
                        l = !1;
                    for ("boolean" == typeof a && (l = a, a = arguments[s] || {}, s++), "object" == typeof a || v(a) || (a = {}), s === c && (a = this, s--); s < c; s++)
                        if (null != (e = arguments[s]))
                            for (t in e) r = e[t], "__proto__" !== t && a !== r && (l && r && (M.isPlainObject(r) || (i = Array.isArray(r))) ? (n = a[t], o = i && !Array.isArray(n) ? [] : i || M.isPlainObject(n) ? n : {}, i = !1, a[t] = M.extend(l, o, r)) : void 0 !== r && (a[t] = r));
                    return a
                }, M.extend({
                    expando: "jQuery" + ("3.5.1" + Math.random()).replace(/\D/g, ""),
                    isReady: !0,
                    error: function (e) {
                        throw new Error(e)
                    },
                    noop: function () {},
                    isPlainObject: function (e) {
                        var t, n;
                        return !(!e || "[object Object]" !== d.call(e)) && (!(t = a(e)) || "function" == typeof (n = p.call(t, "constructor") && t.constructor) && f.call(n) === m)
                    },
                    isEmptyObject: function (e) {
                        var t;
                        for (t in e) return !1;
                        return !0
                    },
                    globalEval: function (e, t, n) {
                        b(e, {
                            nonce: t && t.nonce
                        }, n)
                    },
                    each: function (e, t) {
                        var n, r = 0;
                        if (T(e))
                            for (n = e.length; r < n && !1 !== t.call(e[r], r, e[r]); r++);
                        else
                            for (r in e)
                                if (!1 === t.call(e[r], r, e[r])) break;
                        return e
                    },
                    makeArray: function (e, t) {
                        var n = t || [];
                        return null != e && (T(Object(e)) ? M.merge(n, "string" == typeof e ? [e] : e) : l.call(n, e)), n
                    },
                    inArray: function (e, t, n) {
                        return null == t ? -1 : u.call(t, e, n)
                    },
                    merge: function (e, t) {
                        for (var n = +t.length, r = 0, i = e.length; r < n; r++) e[i++] = t[r];
                        return e.length = i, e
                    },
                    grep: function (e, t, n) {
                        for (var r = [], i = 0, o = e.length, a = !n; i < o; i++) !t(e[i], i) !== a && r.push(e[i]);
                        return r
                    },
                    map: function (e, t, n) {
                        var r, i, o = 0,
                            a = [];
                        if (T(e))
                            for (r = e.length; o < r; o++) null != (i = t(e[o], o, n)) && a.push(i);
                        else
                            for (o in e) null != (i = t(e[o], o, n)) && a.push(i);
                        return c(a)
                    },
                    guid: 1,
                    support: g
                }), "function" == typeof Symbol && (M.fn[Symbol.iterator] = o[Symbol.iterator]), M.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), (function (e, t) {
                    h["[object " + t + "]"] = t.toLowerCase()
                }));
                var S = function (e) {
                    var t, n, r, i, o, a, s, c, l, u, h, d, p, f, m, g, v, y, _, x = "sizzle" + 1 * new Date,
                        b = e.document,
                        w = 0,
                        M = 0,
                        T = ce(),
                        S = ce(),
                        E = ce(),
                        A = ce(),
                        j = function (e, t) {
                            return e === t && (h = !0), 0
                        },
                        L = {}.hasOwnProperty,
                        C = [],
                        P = C.pop,
                        O = C.push,
                        R = C.push,
                        D = C.slice,
                        N = function (e, t) {
                            for (var n = 0, r = e.length; n < r; n++)
                                if (e[n] === t) return n;
                            return -1
                        },
                        I = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
                        k = "[\\x20\\t\\r\\n\\f]",
                        z = "(?:\\\\[\\da-fA-F]{1,6}" + k + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
                        B = "\\[" + k + "*(" + z + ")(?:" + k + "*([*^$|!~]?=)" + k + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + z + "))|)" + k + "*\\]",
                        F = ":(" + z + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + B + ")*)|.*)\\)|)",
                        U = new RegExp(k + "+", "g"),
                        H = new RegExp("^" + k + "+|((?:^|[^\\\\])(?:\\\\.)*)" + k + "+$", "g"),
                        G = new RegExp("^" + k + "*," + k + "*"),
                        V = new RegExp("^" + k + "*([>+~]|" + k + ")" + k + "*"),
                        W = new RegExp(k + "|>"),
                        q = new RegExp(F),
                        X = new RegExp("^" + z + "$"),
                        Y = {
                            ID: new RegExp("^#(" + z + ")"),
                            CLASS: new RegExp("^\\.(" + z + ")"),
                            TAG: new RegExp("^(" + z + "|[*])"),
                            ATTR: new RegExp("^" + B),
                            PSEUDO: new RegExp("^" + F),
                            CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + k + "*(even|odd|(([+-]|)(\\d*)n|)" + k + "*(?:([+-]|)" + k + "*(\\d+)|))" + k + "*\\)|)", "i"),
                            bool: new RegExp("^(?:" + I + ")$", "i"),
                            needsContext: new RegExp("^" + k + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + k + "*((?:-\\d)?\\d*)" + k + "*\\)|)(?=[^-]|$)", "i")
                        },
                        J = /HTML$/i,
                        Z = /^(?:input|select|textarea|button)$/i,
                        Q = /^h\d$/i,
                        $ = /^[^{]+\{\s*\[native \w/,
                        K = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
                        ee = /[+~]/,
                        te = new RegExp("\\\\[\\da-fA-F]{1,6}" + k + "?|\\\\([^\\r\\n\\f])", "g"),
                        ne = function (e, t) {
                            var n = "0x" + e.slice(1) - 65536;
                            return t || (n < 0 ? String.fromCharCode(n + 65536) : String.fromCharCode(n >> 10 | 55296, 1023 & n | 56320))
                        },
                        re = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
                        ie = function (e, t) {
                            return t ? "\0" === e ? "�" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " " : "\\" + e
                        },
                        oe = function () {
                            d()
                        },
                        ae = xe((function (e) {
                            return !0 === e.disabled && "fieldset" === e.nodeName.toLowerCase()
                        }), {
                            dir: "parentNode",
                            next: "legend"
                        });
                    try {
                        R.apply(C = D.call(b.childNodes), b.childNodes), C[b.childNodes.length].nodeType
                    } catch (e) {
                        R = {
                            apply: C.length ? function (e, t) {
                                O.apply(e, D.call(t))
                            } : function (e, t) {
                                for (var n = e.length, r = 0; e[n++] = t[r++];);
                                e.length = n - 1
                            }
                        }
                    }

                    function se(e, t, r, i) {
                        var o, s, l, u, h, f, v, y = t && t.ownerDocument,
                            b = t ? t.nodeType : 9;
                        if (r = r || [], "string" != typeof e || !e || 1 !== b && 9 !== b && 11 !== b) return r;
                        if (!i && (d(t), t = t || p, m)) {
                            if (11 !== b && (h = K.exec(e)))
                                if (o = h[1]) {
                                    if (9 === b) {
                                        if (!(l = t.getElementById(o))) return r;
                                        if (l.id === o) return r.push(l), r
                                    } else if (y && (l = y.getElementById(o)) && _(t, l) && l.id === o) return r.push(l), r
                                } else {
                                    if (h[2]) return R.apply(r, t.getElementsByTagName(e)), r;
                                    if ((o = h[3]) && n.getElementsByClassName && t.getElementsByClassName) return R.apply(r, t.getElementsByClassName(o)), r
                                } if (n.qsa && !A[e + " "] && (!g || !g.test(e)) && (1 !== b || "object" !== t.nodeName.toLowerCase())) {
                                if (v = e, y = t, 1 === b && (W.test(e) || V.test(e))) {
                                    for ((y = ee.test(e) && ve(t.parentNode) || t) === t && n.scope || ((u = t.getAttribute("id")) ? u = u.replace(re, ie) : t.setAttribute("id", u = x)), s = (f = a(e)).length; s--;) f[s] = (u ? "#" + u : ":scope") + " " + _e(f[s]);
                                    v = f.join(",")
                                }
                                try {
                                    return R.apply(r, y.querySelectorAll(v)), r
                                } catch (t) {
                                    A(e, !0)
                                } finally {
                                    u === x && t.removeAttribute("id")
                                }
                            }
                        }
                        return c(e.replace(H, "$1"), t, r, i)
                    }

                    function ce() {
                        var e = [];
                        return function t(n, i) {
                            return e.push(n + " ") > r.cacheLength && delete t[e.shift()], t[n + " "] = i
                        }
                    }

                    function le(e) {
                        return e[x] = !0, e
                    }

                    function ue(e) {
                        var t = p.createElement("fieldset");
                        try {
                            return !!e(t)
                        } catch (e) {
                            return !1
                        } finally {
                            t.parentNode && t.parentNode.removeChild(t), t = null
                        }
                    }

                    function he(e, t) {
                        for (var n = e.split("|"), i = n.length; i--;) r.attrHandle[n[i]] = t
                    }

                    function de(e, t) {
                        var n = t && e,
                            r = n && 1 === e.nodeType && 1 === t.nodeType && e.sourceIndex - t.sourceIndex;
                        if (r) return r;
                        if (n)
                            for (; n = n.nextSibling;)
                                if (n === t) return -1;
                        return e ? 1 : -1
                    }

                    function pe(e) {
                        return function (t) {
                            return "input" === t.nodeName.toLowerCase() && t.type === e
                        }
                    }

                    function fe(e) {
                        return function (t) {
                            var n = t.nodeName.toLowerCase();
                            return ("input" === n || "button" === n) && t.type === e
                        }
                    }

                    function me(e) {
                        return function (t) {
                            return "form" in t ? t.parentNode && !1 === t.disabled ? "label" in t ? "label" in t.parentNode ? t.parentNode.disabled === e : t.disabled === e : t.isDisabled === e || t.isDisabled !== !e && ae(t) === e : t.disabled === e : "label" in t && t.disabled === e
                        }
                    }

                    function ge(e) {
                        return le((function (t) {
                            return t = +t, le((function (n, r) {
                                for (var i, o = e([], n.length, t), a = o.length; a--;) n[i = o[a]] && (n[i] = !(r[i] = n[i]))
                            }))
                        }))
                    }

                    function ve(e) {
                        return e && void 0 !== e.getElementsByTagName && e
                    }
                    for (t in n = se.support = {}, o = se.isXML = function (e) {
                            var t = e.namespaceURI,
                                n = (e.ownerDocument || e).documentElement;
                            return !J.test(t || n && n.nodeName || "HTML")
                        }, d = se.setDocument = function (e) {
                            var t, i, a = e ? e.ownerDocument || e : b;
                            return a != p && 9 === a.nodeType && a.documentElement ? (f = (p = a).documentElement, m = !o(p), b != p && (i = p.defaultView) && i.top !== i && (i.addEventListener ? i.addEventListener("unload", oe, !1) : i.attachEvent && i.attachEvent("onunload", oe)), n.scope = ue((function (e) {
                                return f.appendChild(e).appendChild(p.createElement("div")), void 0 !== e.querySelectorAll && !e.querySelectorAll(":scope fieldset div").length
                            })), n.attributes = ue((function (e) {
                                return e.className = "i", !e.getAttribute("className")
                            })), n.getElementsByTagName = ue((function (e) {
                                return e.appendChild(p.createComment("")), !e.getElementsByTagName("*").length
                            })), n.getElementsByClassName = $.test(p.getElementsByClassName), n.getById = ue((function (e) {
                                return f.appendChild(e).id = x, !p.getElementsByName || !p.getElementsByName(x).length
                            })), n.getById ? (r.filter.ID = function (e) {
                                var t = e.replace(te, ne);
                                return function (e) {
                                    return e.getAttribute("id") === t
                                }
                            }, r.find.ID = function (e, t) {
                                if (void 0 !== t.getElementById && m) {
                                    var n = t.getElementById(e);
                                    return n ? [n] : []
                                }
                            }) : (r.filter.ID = function (e) {
                                var t = e.replace(te, ne);
                                return function (e) {
                                    var n = void 0 !== e.getAttributeNode && e.getAttributeNode("id");
                                    return n && n.value === t
                                }
                            }, r.find.ID = function (e, t) {
                                if (void 0 !== t.getElementById && m) {
                                    var n, r, i, o = t.getElementById(e);
                                    if (o) {
                                        if ((n = o.getAttributeNode("id")) && n.value === e) return [o];
                                        for (i = t.getElementsByName(e), r = 0; o = i[r++];)
                                            if ((n = o.getAttributeNode("id")) && n.value === e) return [o]
                                    }
                                    return []
                                }
                            }), r.find.TAG = n.getElementsByTagName ? function (e, t) {
                                return void 0 !== t.getElementsByTagName ? t.getElementsByTagName(e) : n.qsa ? t.querySelectorAll(e) : void 0
                            } : function (e, t) {
                                var n, r = [],
                                    i = 0,
                                    o = t.getElementsByTagName(e);
                                if ("*" === e) {
                                    for (; n = o[i++];) 1 === n.nodeType && r.push(n);
                                    return r
                                }
                                return o
                            }, r.find.CLASS = n.getElementsByClassName && function (e, t) {
                                if (void 0 !== t.getElementsByClassName && m) return t.getElementsByClassName(e)
                            }, v = [], g = [], (n.qsa = $.test(p.querySelectorAll)) && (ue((function (e) {
                                var t;
                                f.appendChild(e).innerHTML = "<a id='" + x + "'></a><select id='" + x + "-\r\\' msallowcapture=''><option selected=''></option></select>", e.querySelectorAll("[msallowcapture^='']").length && g.push("[*^$]=" + k + "*(?:''|\"\")"), e.querySelectorAll("[selected]").length || g.push("\\[" + k + "*(?:value|" + I + ")"), e.querySelectorAll("[id~=" + x + "-]").length || g.push("~="), (t = p.createElement("input")).setAttribute("name", ""), e.appendChild(t), e.querySelectorAll("[name='']").length || g.push("\\[" + k + "*name" + k + "*=" + k + "*(?:''|\"\")"), e.querySelectorAll(":checked").length || g.push(":checked"), e.querySelectorAll("a#" + x + "+*").length || g.push(".#.+[+~]"), e.querySelectorAll("\\\f"), g.push("[\\r\\n\\f]")
                            })), ue((function (e) {
                                e.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                                var t = p.createElement("input");
                                t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("name", "D"), e.querySelectorAll("[name=d]").length && g.push("name" + k + "*[*^$|!~]?="), 2 !== e.querySelectorAll(":enabled").length && g.push(":enabled", ":disabled"), f.appendChild(e).disabled = !0, 2 !== e.querySelectorAll(":disabled").length && g.push(":enabled", ":disabled"), e.querySelectorAll("*,:x"), g.push(",.*:")
                            }))), (n.matchesSelector = $.test(y = f.matches || f.webkitMatchesSelector || f.mozMatchesSelector || f.oMatchesSelector || f.msMatchesSelector)) && ue((function (e) {
                                n.disconnectedMatch = y.call(e, "*"), y.call(e, "[s!='']:x"), v.push("!=", F)
                            })), g = g.length && new RegExp(g.join("|")), v = v.length && new RegExp(v.join("|")), t = $.test(f.compareDocumentPosition), _ = t || $.test(f.contains) ? function (e, t) {
                                var n = 9 === e.nodeType ? e.documentElement : e,
                                    r = t && t.parentNode;
                                return e === r || !(!r || 1 !== r.nodeType || !(n.contains ? n.contains(r) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(r)))
                            } : function (e, t) {
                                if (t)
                                    for (; t = t.parentNode;)
                                        if (t === e) return !0;
                                return !1
                            }, j = t ? function (e, t) {
                                if (e === t) return h = !0, 0;
                                var r = !e.compareDocumentPosition - !t.compareDocumentPosition;
                                return r || (1 & (r = (e.ownerDocument || e) == (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1) || !n.sortDetached && t.compareDocumentPosition(e) === r ? e == p || e.ownerDocument == b && _(b, e) ? -1 : t == p || t.ownerDocument == b && _(b, t) ? 1 : u ? N(u, e) - N(u, t) : 0 : 4 & r ? -1 : 1)
                            } : function (e, t) {
                                if (e === t) return h = !0, 0;
                                var n, r = 0,
                                    i = e.parentNode,
                                    o = t.parentNode,
                                    a = [e],
                                    s = [t];
                                if (!i || !o) return e == p ? -1 : t == p ? 1 : i ? -1 : o ? 1 : u ? N(u, e) - N(u, t) : 0;
                                if (i === o) return de(e, t);
                                for (n = e; n = n.parentNode;) a.unshift(n);
                                for (n = t; n = n.parentNode;) s.unshift(n);
                                for (; a[r] === s[r];) r++;
                                return r ? de(a[r], s[r]) : a[r] == b ? -1 : s[r] == b ? 1 : 0
                            }, p) : p
                        }, se.matches = function (e, t) {
                            return se(e, null, null, t)
                        }, se.matchesSelector = function (e, t) {
                            if (d(e), n.matchesSelector && m && !A[t + " "] && (!v || !v.test(t)) && (!g || !g.test(t))) try {
                                var r = y.call(e, t);
                                if (r || n.disconnectedMatch || e.document && 11 !== e.document.nodeType) return r
                            } catch (e) {
                                A(t, !0)
                            }
                            return se(t, p, null, [e]).length > 0
                        }, se.contains = function (e, t) {
                            return (e.ownerDocument || e) != p && d(e), _(e, t)
                        }, se.attr = function (e, t) {
                            (e.ownerDocument || e) != p && d(e);
                            var i = r.attrHandle[t.toLowerCase()],
                                o = i && L.call(r.attrHandle, t.toLowerCase()) ? i(e, t, !m) : void 0;
                            return void 0 !== o ? o : n.attributes || !m ? e.getAttribute(t) : (o = e.getAttributeNode(t)) && o.specified ? o.value : null
                        }, se.escape = function (e) {
                            return (e + "").replace(re, ie)
                        }, se.error = function (e) {
                            throw new Error("Syntax error, unrecognized expression: " + e)
                        }, se.uniqueSort = function (e) {
                            var t, r = [],
                                i = 0,
                                o = 0;
                            if (h = !n.detectDuplicates, u = !n.sortStable && e.slice(0), e.sort(j), h) {
                                for (; t = e[o++];) t === e[o] && (i = r.push(o));
                                for (; i--;) e.splice(r[i], 1)
                            }
                            return u = null, e
                        }, i = se.getText = function (e) {
                            var t, n = "",
                                r = 0,
                                o = e.nodeType;
                            if (o) {
                                if (1 === o || 9 === o || 11 === o) {
                                    if ("string" == typeof e.textContent) return e.textContent;
                                    for (e = e.firstChild; e; e = e.nextSibling) n += i(e)
                                } else if (3 === o || 4 === o) return e.nodeValue
                            } else
                                for (; t = e[r++];) n += i(t);
                            return n
                        }, (r = se.selectors = {
                            cacheLength: 50,
                            createPseudo: le,
                            match: Y,
                            attrHandle: {},
                            find: {},
                            relative: {
                                ">": {
                                    dir: "parentNode",
                                    first: !0
                                },
                                " ": {
                                    dir: "parentNode"
                                },
                                "+": {
                                    dir: "previousSibling",
                                    first: !0
                                },
                                "~": {
                                    dir: "previousSibling"
                                }
                            },
                            preFilter: {
                                ATTR: function (e) {
                                    return e[1] = e[1].replace(te, ne), e[3] = (e[3] || e[4] || e[5] || "").replace(te, ne), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4)
                                },
                                CHILD: function (e) {
                                    return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || se.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && se.error(e[0]), e
                                },
                                PSEUDO: function (e) {
                                    var t, n = !e[6] && e[2];
                                    return Y.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : n && q.test(n) && (t = a(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t), e[2] = n.slice(0, t)), e.slice(0, 3))
                                }
                            },
                            filter: {
                                TAG: function (e) {
                                    var t = e.replace(te, ne).toLowerCase();
                                    return "*" === e ? function () {
                                        return !0
                                    } : function (e) {
                                        return e.nodeName && e.nodeName.toLowerCase() === t
                                    }
                                },
                                CLASS: function (e) {
                                    var t = T[e + " "];
                                    return t || (t = new RegExp("(^|" + k + ")" + e + "(" + k + "|$)")) && T(e, (function (e) {
                                        return t.test("string" == typeof e.className && e.className || void 0 !== e.getAttribute && e.getAttribute("class") || "")
                                    }))
                                },
                                ATTR: function (e, t, n) {
                                    return function (r) {
                                        var i = se.attr(r, e);
                                        return null == i ? "!=" === t : !t || (i += "", "=" === t ? i === n : "!=" === t ? i !== n : "^=" === t ? n && 0 === i.indexOf(n) : "*=" === t ? n && i.indexOf(n) > -1 : "$=" === t ? n && i.slice(-n.length) === n : "~=" === t ? (" " + i.replace(U, " ") + " ").indexOf(n) > -1 : "|=" === t && (i === n || i.slice(0, n.length + 1) === n + "-"))
                                    }
                                },
                                CHILD: function (e, t, n, r, i) {
                                    var o = "nth" !== e.slice(0, 3),
                                        a = "last" !== e.slice(-4),
                                        s = "of-type" === t;
                                    return 1 === r && 0 === i ? function (e) {
                                        return !!e.parentNode
                                    } : function (t, n, c) {
                                        var l, u, h, d, p, f, m = o !== a ? "nextSibling" : "previousSibling",
                                            g = t.parentNode,
                                            v = s && t.nodeName.toLowerCase(),
                                            y = !c && !s,
                                            _ = !1;
                                        if (g) {
                                            if (o) {
                                                for (; m;) {
                                                    for (d = t; d = d[m];)
                                                        if (s ? d.nodeName.toLowerCase() === v : 1 === d.nodeType) return !1;
                                                    f = m = "only" === e && !f && "nextSibling"
                                                }
                                                return !0
                                            }
                                            if (f = [a ? g.firstChild : g.lastChild], a && y) {
                                                for (_ = (p = (l = (u = (h = (d = g)[x] || (d[x] = {}))[d.uniqueID] || (h[d.uniqueID] = {}))[e] || [])[0] === w && l[1]) && l[2], d = p && g.childNodes[p]; d = ++p && d && d[m] || (_ = p = 0) || f.pop();)
                                                    if (1 === d.nodeType && ++_ && d === t) {
                                                        u[e] = [w, p, _];
                                                        break
                                                    }
                                            } else if (y && (_ = p = (l = (u = (h = (d = t)[x] || (d[x] = {}))[d.uniqueID] || (h[d.uniqueID] = {}))[e] || [])[0] === w && l[1]), !1 === _)
                                                for (;
                                                    (d = ++p && d && d[m] || (_ = p = 0) || f.pop()) && ((s ? d.nodeName.toLowerCase() !== v : 1 !== d.nodeType) || !++_ || (y && ((u = (h = d[x] || (d[x] = {}))[d.uniqueID] || (h[d.uniqueID] = {}))[e] = [w, _]), d !== t)););
                                            return (_ -= i) === r || _ % r == 0 && _ / r >= 0
                                        }
                                    }
                                },
                                PSEUDO: function (e, t) {
                                    var n, i = r.pseudos[e] || r.setFilters[e.toLowerCase()] || se.error("unsupported pseudo: " + e);
                                    return i[x] ? i(t) : i.length > 1 ? (n = [e, e, "", t], r.setFilters.hasOwnProperty(e.toLowerCase()) ? le((function (e, n) {
                                        for (var r, o = i(e, t), a = o.length; a--;) e[r = N(e, o[a])] = !(n[r] = o[a])
                                    })) : function (e) {
                                        return i(e, 0, n)
                                    }) : i
                                }
                            },
                            pseudos: {
                                not: le((function (e) {
                                    var t = [],
                                        n = [],
                                        r = s(e.replace(H, "$1"));
                                    return r[x] ? le((function (e, t, n, i) {
                                        for (var o, a = r(e, null, i, []), s = e.length; s--;)(o = a[s]) && (e[s] = !(t[s] = o))
                                    })) : function (e, i, o) {
                                        return t[0] = e, r(t, null, o, n), t[0] = null, !n.pop()
                                    }
                                })),
                                has: le((function (e) {
                                    return function (t) {
                                        return se(e, t).length > 0
                                    }
                                })),
                                contains: le((function (e) {
                                    return e = e.replace(te, ne),
                                        function (t) {
                                            return (t.textContent || i(t)).indexOf(e) > -1
                                        }
                                })),
                                lang: le((function (e) {
                                    return X.test(e || "") || se.error("unsupported lang: " + e), e = e.replace(te, ne).toLowerCase(),
                                        function (t) {
                                            var n;
                                            do {
                                                if (n = m ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang")) return (n = n.toLowerCase()) === e || 0 === n.indexOf(e + "-")
                                            } while ((t = t.parentNode) && 1 === t.nodeType);
                                            return !1
                                        }
                                })),
                                target: function (t) {
                                    var n = e.location && e.location.hash;
                                    return n && n.slice(1) === t.id
                                },
                                root: function (e) {
                                    return e === f
                                },
                                focus: function (e) {
                                    return e === p.activeElement && (!p.hasFocus || p.hasFocus()) && !!(e.type || e.href || ~e.tabIndex)
                                },
                                enabled: me(!1),
                                disabled: me(!0),
                                checked: function (e) {
                                    var t = e.nodeName.toLowerCase();
                                    return "input" === t && !!e.checked || "option" === t && !!e.selected
                                },
                                selected: function (e) {
                                    return e.parentNode && e.parentNode.selectedIndex, !0 === e.selected
                                },
                                empty: function (e) {
                                    for (e = e.firstChild; e; e = e.nextSibling)
                                        if (e.nodeType < 6) return !1;
                                    return !0
                                },
                                parent: function (e) {
                                    return !r.pseudos.empty(e)
                                },
                                header: function (e) {
                                    return Q.test(e.nodeName)
                                },
                                input: function (e) {
                                    return Z.test(e.nodeName)
                                },
                                button: function (e) {
                                    var t = e.nodeName.toLowerCase();
                                    return "input" === t && "button" === e.type || "button" === t
                                },
                                text: function (e) {
                                    var t;
                                    return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase())
                                },
                                first: ge((function () {
                                    return [0]
                                })),
                                last: ge((function (e, t) {
                                    return [t - 1]
                                })),
                                eq: ge((function (e, t, n) {
                                    return [n < 0 ? n + t : n]
                                })),
                                even: ge((function (e, t) {
                                    for (var n = 0; n < t; n += 2) e.push(n);
                                    return e
                                })),
                                odd: ge((function (e, t) {
                                    for (var n = 1; n < t; n += 2) e.push(n);
                                    return e
                                })),
                                lt: ge((function (e, t, n) {
                                    for (var r = n < 0 ? n + t : n > t ? t : n; --r >= 0;) e.push(r);
                                    return e
                                })),
                                gt: ge((function (e, t, n) {
                                    for (var r = n < 0 ? n + t : n; ++r < t;) e.push(r);
                                    return e
                                }))
                            }
                        }).pseudos.nth = r.pseudos.eq, {
                            radio: !0,
                            checkbox: !0,
                            file: !0,
                            password: !0,
                            image: !0
                        }) r.pseudos[t] = pe(t);
                    for (t in {
                            submit: !0,
                            reset: !0
                        }) r.pseudos[t] = fe(t);

                    function ye() {}

                    function _e(e) {
                        for (var t = 0, n = e.length, r = ""; t < n; t++) r += e[t].value;
                        return r
                    }

                    function xe(e, t, n) {
                        var r = t.dir,
                            i = t.next,
                            o = i || r,
                            a = n && "parentNode" === o,
                            s = M++;
                        return t.first ? function (t, n, i) {
                            for (; t = t[r];)
                                if (1 === t.nodeType || a) return e(t, n, i);
                            return !1
                        } : function (t, n, c) {
                            var l, u, h, d = [w, s];
                            if (c) {
                                for (; t = t[r];)
                                    if ((1 === t.nodeType || a) && e(t, n, c)) return !0
                            } else
                                for (; t = t[r];)
                                    if (1 === t.nodeType || a)
                                        if (u = (h = t[x] || (t[x] = {}))[t.uniqueID] || (h[t.uniqueID] = {}), i && i === t.nodeName.toLowerCase()) t = t[r] || t;
                                        else {
                                            if ((l = u[o]) && l[0] === w && l[1] === s) return d[2] = l[2];
                                            if (u[o] = d, d[2] = e(t, n, c)) return !0
                                        } return !1
                        }
                    }

                    function be(e) {
                        return e.length > 1 ? function (t, n, r) {
                            for (var i = e.length; i--;)
                                if (!e[i](t, n, r)) return !1;
                            return !0
                        } : e[0]
                    }

                    function we(e, t, n, r, i) {
                        for (var o, a = [], s = 0, c = e.length, l = null != t; s < c; s++)(o = e[s]) && (n && !n(o, r, i) || (a.push(o), l && t.push(s)));
                        return a
                    }

                    function Me(e, t, n, r, i, o) {
                        return r && !r[x] && (r = Me(r)), i && !i[x] && (i = Me(i, o)), le((function (o, a, s, c) {
                            var l, u, h, d = [],
                                p = [],
                                f = a.length,
                                m = o || function (e, t, n) {
                                    for (var r = 0, i = t.length; r < i; r++) se(e, t[r], n);
                                    return n
                                }(t || "*", s.nodeType ? [s] : s, []),
                                g = !e || !o && t ? m : we(m, d, e, s, c),
                                v = n ? i || (o ? e : f || r) ? [] : a : g;
                            if (n && n(g, v, s, c), r)
                                for (l = we(v, p), r(l, [], s, c), u = l.length; u--;)(h = l[u]) && (v[p[u]] = !(g[p[u]] = h));
                            if (o) {
                                if (i || e) {
                                    if (i) {
                                        for (l = [], u = v.length; u--;)(h = v[u]) && l.push(g[u] = h);
                                        i(null, v = [], l, c)
                                    }
                                    for (u = v.length; u--;)(h = v[u]) && (l = i ? N(o, h) : d[u]) > -1 && (o[l] = !(a[l] = h))
                                }
                            } else v = we(v === a ? v.splice(f, v.length) : v), i ? i(null, a, v, c) : R.apply(a, v)
                        }))
                    }

                    function Te(e) {
                        for (var t, n, i, o = e.length, a = r.relative[e[0].type], s = a || r.relative[" "], c = a ? 1 : 0, u = xe((function (e) {
                                return e === t
                            }), s, !0), h = xe((function (e) {
                                return N(t, e) > -1
                            }), s, !0), d = [function (e, n, r) {
                                var i = !a && (r || n !== l) || ((t = n).nodeType ? u(e, n, r) : h(e, n, r));
                                return t = null, i
                            }]; c < o; c++)
                            if (n = r.relative[e[c].type]) d = [xe(be(d), n)];
                            else {
                                if ((n = r.filter[e[c].type].apply(null, e[c].matches))[x]) {
                                    for (i = ++c; i < o && !r.relative[e[i].type]; i++);
                                    return Me(c > 1 && be(d), c > 1 && _e(e.slice(0, c - 1).concat({
                                        value: " " === e[c - 2].type ? "*" : ""
                                    })).replace(H, "$1"), n, c < i && Te(e.slice(c, i)), i < o && Te(e = e.slice(i)), i < o && _e(e))
                                }
                                d.push(n)
                            } return be(d)
                    }
                    return ye.prototype = r.filters = r.pseudos, r.setFilters = new ye, a = se.tokenize = function (e, t) {
                        var n, i, o, a, s, c, l, u = S[e + " "];
                        if (u) return t ? 0 : u.slice(0);
                        for (s = e, c = [], l = r.preFilter; s;) {
                            for (a in n && !(i = G.exec(s)) || (i && (s = s.slice(i[0].length) || s), c.push(o = [])), n = !1, (i = V.exec(s)) && (n = i.shift(), o.push({
                                    value: n,
                                    type: i[0].replace(H, " ")
                                }), s = s.slice(n.length)), r.filter) !(i = Y[a].exec(s)) || l[a] && !(i = l[a](i)) || (n = i.shift(), o.push({
                                value: n,
                                type: a,
                                matches: i
                            }), s = s.slice(n.length));
                            if (!n) break
                        }
                        return t ? s.length : s ? se.error(e) : S(e, c).slice(0)
                    }, s = se.compile = function (e, t) {
                        var n, i = [],
                            o = [],
                            s = E[e + " "];
                        if (!s) {
                            for (t || (t = a(e)), n = t.length; n--;)(s = Te(t[n]))[x] ? i.push(s) : o.push(s);
                            (s = E(e, function (e, t) {
                                var n = t.length > 0,
                                    i = e.length > 0,
                                    o = function (o, a, s, c, u) {
                                        var h, f, g, v = 0,
                                            y = "0",
                                            _ = o && [],
                                            x = [],
                                            b = l,
                                            M = o || i && r.find.TAG("*", u),
                                            T = w += null == b ? 1 : Math.random() || .1,
                                            S = M.length;
                                        for (u && (l = a == p || a || u); y !== S && null != (h = M[y]); y++) {
                                            if (i && h) {
                                                for (f = 0, a || h.ownerDocument == p || (d(h), s = !m); g = e[f++];)
                                                    if (g(h, a || p, s)) {
                                                        c.push(h);
                                                        break
                                                    } u && (w = T)
                                            }
                                            n && ((h = !g && h) && v--, o && _.push(h))
                                        }
                                        if (v += y, n && y !== v) {
                                            for (f = 0; g = t[f++];) g(_, x, a, s);
                                            if (o) {
                                                if (v > 0)
                                                    for (; y--;) _[y] || x[y] || (x[y] = P.call(c));
                                                x = we(x)
                                            }
                                            R.apply(c, x), u && !o && x.length > 0 && v + t.length > 1 && se.uniqueSort(c)
                                        }
                                        return u && (w = T, l = b), _
                                    };
                                return n ? le(o) : o
                            }(o, i))).selector = e
                        }
                        return s
                    }, c = se.select = function (e, t, n, i) {
                        var o, c, l, u, h, d = "function" == typeof e && e,
                            p = !i && a(e = d.selector || e);
                        if (n = n || [], 1 === p.length) {
                            if ((c = p[0] = p[0].slice(0)).length > 2 && "ID" === (l = c[0]).type && 9 === t.nodeType && m && r.relative[c[1].type]) {
                                if (!(t = (r.find.ID(l.matches[0].replace(te, ne), t) || [])[0])) return n;
                                d && (t = t.parentNode), e = e.slice(c.shift().value.length)
                            }
                            for (o = Y.needsContext.test(e) ? 0 : c.length; o-- && (l = c[o], !r.relative[u = l.type]);)
                                if ((h = r.find[u]) && (i = h(l.matches[0].replace(te, ne), ee.test(c[0].type) && ve(t.parentNode) || t))) {
                                    if (c.splice(o, 1), !(e = i.length && _e(c))) return R.apply(n, i), n;
                                    break
                                }
                        }
                        return (d || s(e, p))(i, t, !m, n, !t || ee.test(e) && ve(t.parentNode) || t), n
                    }, n.sortStable = x.split("").sort(j).join("") === x, n.detectDuplicates = !!h, d(), n.sortDetached = ue((function (e) {
                        return 1 & e.compareDocumentPosition(p.createElement("fieldset"))
                    })), ue((function (e) {
                        return e.innerHTML = "<a href='#'></a>", "#" === e.firstChild.getAttribute("href")
                    })) || he("type|href|height|width", (function (e, t, n) {
                        if (!n) return e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2)
                    })), n.attributes && ue((function (e) {
                        return e.innerHTML = "<input/>", e.firstChild.setAttribute("value", ""), "" === e.firstChild.getAttribute("value")
                    })) || he("value", (function (e, t, n) {
                        if (!n && "input" === e.nodeName.toLowerCase()) return e.defaultValue
                    })), ue((function (e) {
                        return null == e.getAttribute("disabled")
                    })) || he(I, (function (e, t, n) {
                        var r;
                        if (!n) return !0 === e[t] ? t.toLowerCase() : (r = e.getAttributeNode(t)) && r.specified ? r.value : null
                    })), se
                }(n);
                M.find = S, M.expr = S.selectors, M.expr[":"] = M.expr.pseudos, M.uniqueSort = M.unique = S.uniqueSort, M.text = S.getText, M.isXMLDoc = S.isXML, M.contains = S.contains, M.escapeSelector = S.escape;
                var E = function (e, t, n) {
                        for (var r = [], i = void 0 !== n;
                            (e = e[t]) && 9 !== e.nodeType;)
                            if (1 === e.nodeType) {
                                if (i && M(e).is(n)) break;
                                r.push(e)
                            } return r
                    },
                    A = function (e, t) {
                        for (var n = []; e; e = e.nextSibling) 1 === e.nodeType && e !== t && n.push(e);
                        return n
                    },
                    j = M.expr.match.needsContext;

                function L(e, t) {
                    return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase()
                }
                var C = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;

                function P(e, t, n) {
                    return v(t) ? M.grep(e, (function (e, r) {
                        return !!t.call(e, r, e) !== n
                    })) : t.nodeType ? M.grep(e, (function (e) {
                        return e === t !== n
                    })) : "string" != typeof t ? M.grep(e, (function (e) {
                        return u.call(t, e) > -1 !== n
                    })) : M.filter(t, e, n)
                }
                M.filter = function (e, t, n) {
                    var r = t[0];
                    return n && (e = ":not(" + e + ")"), 1 === t.length && 1 === r.nodeType ? M.find.matchesSelector(r, e) ? [r] : [] : M.find.matches(e, M.grep(t, (function (e) {
                        return 1 === e.nodeType
                    })))
                }, M.fn.extend({
                    find: function (e) {
                        var t, n, r = this.length,
                            i = this;
                        if ("string" != typeof e) return this.pushStack(M(e).filter((function () {
                            for (t = 0; t < r; t++)
                                if (M.contains(i[t], this)) return !0
                        })));
                        for (n = this.pushStack([]), t = 0; t < r; t++) M.find(e, i[t], n);
                        return r > 1 ? M.uniqueSort(n) : n
                    },
                    filter: function (e) {
                        return this.pushStack(P(this, e || [], !1))
                    },
                    not: function (e) {
                        return this.pushStack(P(this, e || [], !0))
                    },
                    is: function (e) {
                        return !!P(this, "string" == typeof e && j.test(e) ? M(e) : e || [], !1).length
                    }
                });
                var O, R = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
                (M.fn.init = function (e, t, n) {
                    var r, i;
                    if (!e) return this;
                    if (n = n || O, "string" == typeof e) {
                        if (!(r = "<" === e[0] && ">" === e[e.length - 1] && e.length >= 3 ? [null, e, null] : R.exec(e)) || !r[1] && t) return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e);
                        if (r[1]) {
                            if (t = t instanceof M ? t[0] : t, M.merge(this, M.parseHTML(r[1], t && t.nodeType ? t.ownerDocument || t : _, !0)), C.test(r[1]) && M.isPlainObject(t))
                                for (r in t) v(this[r]) ? this[r](t[r]) : this.attr(r, t[r]);
                            return this
                        }
                        return (i = _.getElementById(r[2])) && (this[0] = i, this.length = 1), this
                    }
                    return e.nodeType ? (this[0] = e, this.length = 1, this) : v(e) ? void 0 !== n.ready ? n.ready(e) : e(M) : M.makeArray(e, this)
                }).prototype = M.fn, O = M(_);
                var D = /^(?:parents|prev(?:Until|All))/,
                    N = {
                        children: !0,
                        contents: !0,
                        next: !0,
                        prev: !0
                    };

                function I(e, t) {
                    for (;
                        (e = e[t]) && 1 !== e.nodeType;);
                    return e
                }
                M.fn.extend({
                    has: function (e) {
                        var t = M(e, this),
                            n = t.length;
                        return this.filter((function () {
                            for (var e = 0; e < n; e++)
                                if (M.contains(this, t[e])) return !0
                        }))
                    },
                    closest: function (e, t) {
                        var n, r = 0,
                            i = this.length,
                            o = [],
                            a = "string" != typeof e && M(e);
                        if (!j.test(e))
                            for (; r < i; r++)
                                for (n = this[r]; n && n !== t; n = n.parentNode)
                                    if (n.nodeType < 11 && (a ? a.index(n) > -1 : 1 === n.nodeType && M.find.matchesSelector(n, e))) {
                                        o.push(n);
                                        break
                                    } return this.pushStack(o.length > 1 ? M.uniqueSort(o) : o)
                    },
                    index: function (e) {
                        return e ? "string" == typeof e ? u.call(M(e), this[0]) : u.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
                    },
                    add: function (e, t) {
                        return this.pushStack(M.uniqueSort(M.merge(this.get(), M(e, t))))
                    },
                    addBack: function (e) {
                        return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
                    }
                }), M.each({
                    parent: function (e) {
                        var t = e.parentNode;
                        return t && 11 !== t.nodeType ? t : null
                    },
                    parents: function (e) {
                        return E(e, "parentNode")
                    },
                    parentsUntil: function (e, t, n) {
                        return E(e, "parentNode", n)
                    },
                    next: function (e) {
                        return I(e, "nextSibling")
                    },
                    prev: function (e) {
                        return I(e, "previousSibling")
                    },
                    nextAll: function (e) {
                        return E(e, "nextSibling")
                    },
                    prevAll: function (e) {
                        return E(e, "previousSibling")
                    },
                    nextUntil: function (e, t, n) {
                        return E(e, "nextSibling", n)
                    },
                    prevUntil: function (e, t, n) {
                        return E(e, "previousSibling", n)
                    },
                    siblings: function (e) {
                        return A((e.parentNode || {}).firstChild, e)
                    },
                    children: function (e) {
                        return A(e.firstChild)
                    },
                    contents: function (e) {
                        return null != e.contentDocument && a(e.contentDocument) ? e.contentDocument : (L(e, "template") && (e = e.content || e), M.merge([], e.childNodes))
                    }
                }, (function (e, t) {
                    M.fn[e] = function (n, r) {
                        var i = M.map(this, t, n);
                        return "Until" !== e.slice(-5) && (r = n), r && "string" == typeof r && (i = M.filter(r, i)), this.length > 1 && (N[e] || M.uniqueSort(i), D.test(e) && i.reverse()), this.pushStack(i)
                    }
                }));
                var k = /[^\x20\t\r\n\f]+/g;

                function z(e) {
                    return e
                }

                function B(e) {
                    throw e
                }

                function F(e, t, n, r) {
                    var i;
                    try {
                        e && v(i = e.promise) ? i.call(e).done(t).fail(n) : e && v(i = e.then) ? i.call(e, t, n) : t.apply(void 0, [e].slice(r))
                    } catch (e) {
                        n.apply(void 0, [e])
                    }
                }
                M.Callbacks = function (e) {
                    e = "string" == typeof e ? function (e) {
                        var t = {};
                        return M.each(e.match(k) || [], (function (e, n) {
                            t[n] = !0
                        })), t
                    }(e) : M.extend({}, e);
                    var t, n, r, i, o = [],
                        a = [],
                        s = -1,
                        c = function () {
                            for (i = i || e.once, r = t = !0; a.length; s = -1)
                                for (n = a.shift(); ++s < o.length;) !1 === o[s].apply(n[0], n[1]) && e.stopOnFalse && (s = o.length, n = !1);
                            e.memory || (n = !1), t = !1, i && (o = n ? [] : "")
                        },
                        l = {
                            add: function () {
                                return o && (n && !t && (s = o.length - 1, a.push(n)), function t(n) {
                                    M.each(n, (function (n, r) {
                                        v(r) ? e.unique && l.has(r) || o.push(r) : r && r.length && "string" !== w(r) && t(r)
                                    }))
                                }(arguments), n && !t && c()), this
                            },
                            remove: function () {
                                return M.each(arguments, (function (e, t) {
                                    for (var n;
                                        (n = M.inArray(t, o, n)) > -1;) o.splice(n, 1), n <= s && s--
                                })), this
                            },
                            has: function (e) {
                                return e ? M.inArray(e, o) > -1 : o.length > 0
                            },
                            empty: function () {
                                return o && (o = []), this
                            },
                            disable: function () {
                                return i = a = [], o = n = "", this
                            },
                            disabled: function () {
                                return !o
                            },
                            lock: function () {
                                return i = a = [], n || t || (o = n = ""), this
                            },
                            locked: function () {
                                return !!i
                            },
                            fireWith: function (e, n) {
                                return i || (n = [e, (n = n || []).slice ? n.slice() : n], a.push(n), t || c()), this
                            },
                            fire: function () {
                                return l.fireWith(this, arguments), this
                            },
                            fired: function () {
                                return !!r
                            }
                        };
                    return l
                }, M.extend({
                    Deferred: function (e) {
                        var t = [
                                ["notify", "progress", M.Callbacks("memory"), M.Callbacks("memory"), 2],
                                ["resolve", "done", M.Callbacks("once memory"), M.Callbacks("once memory"), 0, "resolved"],
                                ["reject", "fail", M.Callbacks("once memory"), M.Callbacks("once memory"), 1, "rejected"]
                            ],
                            r = "pending",
                            i = {
                                state: function () {
                                    return r
                                },
                                always: function () {
                                    return o.done(arguments).fail(arguments), this
                                },
                                catch: function (e) {
                                    return i.then(null, e)
                                },
                                pipe: function () {
                                    var e = arguments;
                                    return M.Deferred((function (n) {
                                        M.each(t, (function (t, r) {
                                            var i = v(e[r[4]]) && e[r[4]];
                                            o[r[1]]((function () {
                                                var e = i && i.apply(this, arguments);
                                                e && v(e.promise) ? e.promise().progress(n.notify).done(n.resolve).fail(n.reject) : n[r[0] + "With"](this, i ? [e] : arguments)
                                            }))
                                        })), e = null
                                    })).promise()
                                },
                                then: function (e, r, i) {
                                    var o = 0;

                                    function a(e, t, r, i) {
                                        return function () {
                                            var s = this,
                                                c = arguments,
                                                l = function () {
                                                    var n, l;
                                                    if (!(e < o)) {
                                                        if ((n = r.apply(s, c)) === t.promise()) throw new TypeError("Thenable self-resolution");
                                                        l = n && ("object" == typeof n || "function" == typeof n) && n.then, v(l) ? i ? l.call(n, a(o, t, z, i), a(o, t, B, i)) : (o++, l.call(n, a(o, t, z, i), a(o, t, B, i), a(o, t, z, t.notifyWith))) : (r !== z && (s = void 0, c = [n]), (i || t.resolveWith)(s, c))
                                                    }
                                                },
                                                u = i ? l : function () {
                                                    try {
                                                        l()
                                                    } catch (n) {
                                                        M.Deferred.exceptionHook && M.Deferred.exceptionHook(n, u.stackTrace), e + 1 >= o && (r !== B && (s = void 0, c = [n]), t.rejectWith(s, c))
                                                    }
                                                };
                                            e ? u() : (M.Deferred.getStackHook && (u.stackTrace = M.Deferred.getStackHook()), n.setTimeout(u))
                                        }
                                    }
                                    return M.Deferred((function (n) {
                                        t[0][3].add(a(0, n, v(i) ? i : z, n.notifyWith)), t[1][3].add(a(0, n, v(e) ? e : z)), t[2][3].add(a(0, n, v(r) ? r : B))
                                    })).promise()
                                },
                                promise: function (e) {
                                    return null != e ? M.extend(e, i) : i
                                }
                            },
                            o = {};
                        return M.each(t, (function (e, n) {
                            var a = n[2],
                                s = n[5];
                            i[n[1]] = a.add, s && a.add((function () {
                                r = s
                            }), t[3 - e][2].disable, t[3 - e][3].disable, t[0][2].lock, t[0][3].lock), a.add(n[3].fire), o[n[0]] = function () {
                                return o[n[0] + "With"](this === o ? void 0 : this, arguments), this
                            }, o[n[0] + "With"] = a.fireWith
                        })), i.promise(o), e && e.call(o, o), o
                    },
                    when: function (e) {
                        var t = arguments.length,
                            n = t,
                            r = Array(n),
                            i = s.call(arguments),
                            o = M.Deferred(),
                            a = function (e) {
                                return function (n) {
                                    r[e] = this, i[e] = arguments.length > 1 ? s.call(arguments) : n, --t || o.resolveWith(r, i)
                                }
                            };
                        if (t <= 1 && (F(e, o.done(a(n)).resolve, o.reject, !t), "pending" === o.state() || v(i[n] && i[n].then))) return o.then();
                        for (; n--;) F(i[n], a(n), o.reject);
                        return o.promise()
                    }
                });
                var U = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
                M.Deferred.exceptionHook = function (e, t) {
                    n.console && n.console.warn && e && U.test(e.name) && n.console.warn("jQuery.Deferred exception: " + e.message, e.stack, t)
                }, M.readyException = function (e) {
                    n.setTimeout((function () {
                        throw e
                    }))
                };
                var H = M.Deferred();

                function G() {
                    _.removeEventListener("DOMContentLoaded", G), n.removeEventListener("load", G), M.ready()
                }
                M.fn.ready = function (e) {
                    return H.then(e).catch((function (e) {
                        M.readyException(e)
                    })), this
                }, M.extend({
                    isReady: !1,
                    readyWait: 1,
                    ready: function (e) {
                        (!0 === e ? --M.readyWait : M.isReady) || (M.isReady = !0, !0 !== e && --M.readyWait > 0 || H.resolveWith(_, [M]))
                    }
                }), M.ready.then = H.then, "complete" === _.readyState || "loading" !== _.readyState && !_.documentElement.doScroll ? n.setTimeout(M.ready) : (_.addEventListener("DOMContentLoaded", G), n.addEventListener("load", G));
                var V = function (e, t, n, r, i, o, a) {
                        var s = 0,
                            c = e.length,
                            l = null == n;
                        if ("object" === w(n))
                            for (s in i = !0, n) V(e, t, s, n[s], !0, o, a);
                        else if (void 0 !== r && (i = !0, v(r) || (a = !0), l && (a ? (t.call(e, r), t = null) : (l = t, t = function (e, t, n) {
                                return l.call(M(e), n)
                            })), t))
                            for (; s < c; s++) t(e[s], n, a ? r : r.call(e[s], s, t(e[s], n)));
                        return i ? e : l ? t.call(e) : c ? t(e[0], n) : o
                    },
                    W = /^-ms-/,
                    q = /-([a-z])/g;

                function X(e, t) {
                    return t.toUpperCase()
                }

                function Y(e) {
                    return e.replace(W, "ms-").replace(q, X)
                }
                var J = function (e) {
                    return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType
                };

                function Z() {
                    this.expando = M.expando + Z.uid++
                }
                Z.uid = 1, Z.prototype = {
                    cache: function (e) {
                        var t = e[this.expando];
                        return t || (t = {}, J(e) && (e.nodeType ? e[this.expando] = t : Object.defineProperty(e, this.expando, {
                            value: t,
                            configurable: !0
                        }))), t
                    },
                    set: function (e, t, n) {
                        var r, i = this.cache(e);
                        if ("string" == typeof t) i[Y(t)] = n;
                        else
                            for (r in t) i[Y(r)] = t[r];
                        return i
                    },
                    get: function (e, t) {
                        return void 0 === t ? this.cache(e) : e[this.expando] && e[this.expando][Y(t)]
                    },
                    access: function (e, t, n) {
                        return void 0 === t || t && "string" == typeof t && void 0 === n ? this.get(e, t) : (this.set(e, t, n), void 0 !== n ? n : t)
                    },
                    remove: function (e, t) {
                        var n, r = e[this.expando];
                        if (void 0 !== r) {
                            if (void 0 !== t) {
                                n = (t = Array.isArray(t) ? t.map(Y) : (t = Y(t)) in r ? [t] : t.match(k) || []).length;
                                for (; n--;) delete r[t[n]]
                            }(void 0 === t || M.isEmptyObject(r)) && (e.nodeType ? e[this.expando] = void 0 : delete e[this.expando])
                        }
                    },
                    hasData: function (e) {
                        var t = e[this.expando];
                        return void 0 !== t && !M.isEmptyObject(t)
                    }
                };
                var Q = new Z,
                    $ = new Z,
                    K = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
                    ee = /[A-Z]/g;

                function te(e, t, n) {
                    var r;
                    if (void 0 === n && 1 === e.nodeType)
                        if (r = "data-" + t.replace(ee, "-$&").toLowerCase(), "string" == typeof (n = e.getAttribute(r))) {
                            try {
                                n = function (e) {
                                    return "true" === e || "false" !== e && ("null" === e ? null : e === +e + "" ? +e : K.test(e) ? JSON.parse(e) : e)
                                }(n)
                            } catch (e) {}
                            $.set(e, t, n)
                        } else n = void 0;
                    return n
                }
                M.extend({
                    hasData: function (e) {
                        return $.hasData(e) || Q.hasData(e)
                    },
                    data: function (e, t, n) {
                        return $.access(e, t, n)
                    },
                    removeData: function (e, t) {
                        $.remove(e, t)
                    },
                    _data: function (e, t, n) {
                        return Q.access(e, t, n)
                    },
                    _removeData: function (e, t) {
                        Q.remove(e, t)
                    }
                }), M.fn.extend({
                    data: function (e, t) {
                        var n, r, i, o = this[0],
                            a = o && o.attributes;
                        if (void 0 === e) {
                            if (this.length && (i = $.get(o), 1 === o.nodeType && !Q.get(o, "hasDataAttrs"))) {
                                for (n = a.length; n--;) a[n] && 0 === (r = a[n].name).indexOf("data-") && (r = Y(r.slice(5)), te(o, r, i[r]));
                                Q.set(o, "hasDataAttrs", !0)
                            }
                            return i
                        }
                        return "object" == typeof e ? this.each((function () {
                            $.set(this, e)
                        })) : V(this, (function (t) {
                            var n;
                            if (o && void 0 === t) return void 0 !== (n = $.get(o, e)) || void 0 !== (n = te(o, e)) ? n : void 0;
                            this.each((function () {
                                $.set(this, e, t)
                            }))
                        }), null, t, arguments.length > 1, null, !0)
                    },
                    removeData: function (e) {
                        return this.each((function () {
                            $.remove(this, e)
                        }))
                    }
                }), M.extend({
                    queue: function (e, t, n) {
                        var r;
                        if (e) return t = (t || "fx") + "queue", r = Q.get(e, t), n && (!r || Array.isArray(n) ? r = Q.access(e, t, M.makeArray(n)) : r.push(n)), r || []
                    },
                    dequeue: function (e, t) {
                        t = t || "fx";
                        var n = M.queue(e, t),
                            r = n.length,
                            i = n.shift(),
                            o = M._queueHooks(e, t);
                        "inprogress" === i && (i = n.shift(), r--), i && ("fx" === t && n.unshift("inprogress"), delete o.stop, i.call(e, (function () {
                            M.dequeue(e, t)
                        }), o)), !r && o && o.empty.fire()
                    },
                    _queueHooks: function (e, t) {
                        var n = t + "queueHooks";
                        return Q.get(e, n) || Q.access(e, n, {
                            empty: M.Callbacks("once memory").add((function () {
                                Q.remove(e, [t + "queue", n])
                            }))
                        })
                    }
                }), M.fn.extend({
                    queue: function (e, t) {
                        var n = 2;
                        return "string" != typeof e && (t = e, e = "fx", n--), arguments.length < n ? M.queue(this[0], e) : void 0 === t ? this : this.each((function () {
                            var n = M.queue(this, e, t);
                            M._queueHooks(this, e), "fx" === e && "inprogress" !== n[0] && M.dequeue(this, e)
                        }))
                    },
                    dequeue: function (e) {
                        return this.each((function () {
                            M.dequeue(this, e)
                        }))
                    },
                    clearQueue: function (e) {
                        return this.queue(e || "fx", [])
                    },
                    promise: function (e, t) {
                        var n, r = 1,
                            i = M.Deferred(),
                            o = this,
                            a = this.length,
                            s = function () {
                                --r || i.resolveWith(o, [o])
                            };
                        for ("string" != typeof e && (t = e, e = void 0), e = e || "fx"; a--;)(n = Q.get(o[a], e + "queueHooks")) && n.empty && (r++, n.empty.add(s));
                        return s(), i.promise(t)
                    }
                });
                var ne = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
                    re = new RegExp("^(?:([+-])=|)(" + ne + ")([a-z%]*)$", "i"),
                    ie = ["Top", "Right", "Bottom", "Left"],
                    oe = _.documentElement,
                    ae = function (e) {
                        return M.contains(e.ownerDocument, e)
                    },
                    se = {
                        composed: !0
                    };
                oe.getRootNode && (ae = function (e) {
                    return M.contains(e.ownerDocument, e) || e.getRootNode(se) === e.ownerDocument
                });
                var ce = function (e, t) {
                    return "none" === (e = t || e).style.display || "" === e.style.display && ae(e) && "none" === M.css(e, "display")
                };

                function le(e, t, n, r) {
                    var i, o, a = 20,
                        s = r ? function () {
                            return r.cur()
                        } : function () {
                            return M.css(e, t, "")
                        },
                        c = s(),
                        l = n && n[3] || (M.cssNumber[t] ? "" : "px"),
                        u = e.nodeType && (M.cssNumber[t] || "px" !== l && +c) && re.exec(M.css(e, t));
                    if (u && u[3] !== l) {
                        for (c /= 2, l = l || u[3], u = +c || 1; a--;) M.style(e, t, u + l), (1 - o) * (1 - (o = s() / c || .5)) <= 0 && (a = 0), u /= o;
                        u *= 2, M.style(e, t, u + l), n = n || []
                    }
                    return n && (u = +u || +c || 0, i = n[1] ? u + (n[1] + 1) * n[2] : +n[2], r && (r.unit = l, r.start = u, r.end = i)), i
                }
                var ue = {};

                function he(e) {
                    var t, n = e.ownerDocument,
                        r = e.nodeName,
                        i = ue[r];
                    return i || (t = n.body.appendChild(n.createElement(r)), i = M.css(t, "display"), t.parentNode.removeChild(t), "none" === i && (i = "block"), ue[r] = i, i)
                }

                function de(e, t) {
                    for (var n, r, i = [], o = 0, a = e.length; o < a; o++)(r = e[o]).style && (n = r.style.display, t ? ("none" === n && (i[o] = Q.get(r, "display") || null, i[o] || (r.style.display = "")), "" === r.style.display && ce(r) && (i[o] = he(r))) : "none" !== n && (i[o] = "none", Q.set(r, "display", n)));
                    for (o = 0; o < a; o++) null != i[o] && (e[o].style.display = i[o]);
                    return e
                }
                M.fn.extend({
                    show: function () {
                        return de(this, !0)
                    },
                    hide: function () {
                        return de(this)
                    },
                    toggle: function (e) {
                        return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each((function () {
                            ce(this) ? M(this).show() : M(this).hide()
                        }))
                    }
                });
                var pe, fe, me = /^(?:checkbox|radio)$/i,
                    ge = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
                    ve = /^$|^module$|\/(?:java|ecma)script/i;
                pe = _.createDocumentFragment().appendChild(_.createElement("div")), (fe = _.createElement("input")).setAttribute("type", "radio"), fe.setAttribute("checked", "checked"), fe.setAttribute("name", "t"), pe.appendChild(fe), g.checkClone = pe.cloneNode(!0).cloneNode(!0).lastChild.checked, pe.innerHTML = "<textarea>x</textarea>", g.noCloneChecked = !!pe.cloneNode(!0).lastChild.defaultValue, pe.innerHTML = "<option></option>", g.option = !!pe.lastChild;
                var ye = {
                    thead: [1, "<table>", "</table>"],
                    col: [2, "<table><colgroup>", "</colgroup></table>"],
                    tr: [2, "<table><tbody>", "</tbody></table>"],
                    td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                    _default: [0, "", ""]
                };

                function _e(e, t) {
                    var n;
                    return n = void 0 !== e.getElementsByTagName ? e.getElementsByTagName(t || "*") : void 0 !== e.querySelectorAll ? e.querySelectorAll(t || "*") : [], void 0 === t || t && L(e, t) ? M.merge([e], n) : n
                }

                function xe(e, t) {
                    for (var n = 0, r = e.length; n < r; n++) Q.set(e[n], "globalEval", !t || Q.get(t[n], "globalEval"))
                }
                ye.tbody = ye.tfoot = ye.colgroup = ye.caption = ye.thead, ye.th = ye.td, g.option || (ye.optgroup = ye.option = [1, "<select multiple='multiple'>", "</select>"]);
                var be = /<|&#?\w+;/;

                function we(e, t, n, r, i) {
                    for (var o, a, s, c, l, u, h = t.createDocumentFragment(), d = [], p = 0, f = e.length; p < f; p++)
                        if ((o = e[p]) || 0 === o)
                            if ("object" === w(o)) M.merge(d, o.nodeType ? [o] : o);
                            else if (be.test(o)) {
                        for (a = a || h.appendChild(t.createElement("div")), s = (ge.exec(o) || ["", ""])[1].toLowerCase(), c = ye[s] || ye._default, a.innerHTML = c[1] + M.htmlPrefilter(o) + c[2], u = c[0]; u--;) a = a.lastChild;
                        M.merge(d, a.childNodes), (a = h.firstChild).textContent = ""
                    } else d.push(t.createTextNode(o));
                    for (h.textContent = "", p = 0; o = d[p++];)
                        if (r && M.inArray(o, r) > -1) i && i.push(o);
                        else if (l = ae(o), a = _e(h.appendChild(o), "script"), l && xe(a), n)
                        for (u = 0; o = a[u++];) ve.test(o.type || "") && n.push(o);
                    return h
                }
                var Me = /^key/,
                    Te = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
                    Se = /^([^.]*)(?:\.(.+)|)/;

                function Ee() {
                    return !0
                }

                function Ae() {
                    return !1
                }

                function je(e, t) {
                    return e === function () {
                        try {
                            return _.activeElement
                        } catch (e) {}
                    }() == ("focus" === t)
                }

                function Le(e, t, n, r, i, o) {
                    var a, s;
                    if ("object" == typeof t) {
                        for (s in "string" != typeof n && (r = r || n, n = void 0), t) Le(e, s, n, r, t[s], o);
                        return e
                    }
                    if (null == r && null == i ? (i = n, r = n = void 0) : null == i && ("string" == typeof n ? (i = r, r = void 0) : (i = r, r = n, n = void 0)), !1 === i) i = Ae;
                    else if (!i) return e;
                    return 1 === o && (a = i, (i = function (e) {
                        return M().off(e), a.apply(this, arguments)
                    }).guid = a.guid || (a.guid = M.guid++)), e.each((function () {
                        M.event.add(this, t, i, r, n)
                    }))
                }

                function Ce(e, t, n) {
                    n ? (Q.set(e, t, !1), M.event.add(e, t, {
                        namespace: !1,
                        handler: function (e) {
                            var r, i, o = Q.get(this, t);
                            if (1 & e.isTrigger && this[t]) {
                                if (o.length)(M.event.special[t] || {}).delegateType && e.stopPropagation();
                                else if (o = s.call(arguments), Q.set(this, t, o), r = n(this, t), this[t](), o !== (i = Q.get(this, t)) || r ? Q.set(this, t, !1) : i = {}, o !== i) return e.stopImmediatePropagation(), e.preventDefault(), i.value
                            } else o.length && (Q.set(this, t, {
                                value: M.event.trigger(M.extend(o[0], M.Event.prototype), o.slice(1), this)
                            }), e.stopImmediatePropagation())
                        }
                    })) : void 0 === Q.get(e, t) && M.event.add(e, t, Ee)
                }
                M.event = {
                    global: {},
                    add: function (e, t, n, r, i) {
                        var o, a, s, c, l, u, h, d, p, f, m, g = Q.get(e);
                        if (J(e))
                            for (n.handler && (n = (o = n).handler, i = o.selector), i && M.find.matchesSelector(oe, i), n.guid || (n.guid = M.guid++), (c = g.events) || (c = g.events = Object.create(null)), (a = g.handle) || (a = g.handle = function (t) {
                                    return void 0 !== M && M.event.triggered !== t.type ? M.event.dispatch.apply(e, arguments) : void 0
                                }), l = (t = (t || "").match(k) || [""]).length; l--;) p = m = (s = Se.exec(t[l]) || [])[1], f = (s[2] || "").split(".").sort(), p && (h = M.event.special[p] || {}, p = (i ? h.delegateType : h.bindType) || p, h = M.event.special[p] || {}, u = M.extend({
                                type: p,
                                origType: m,
                                data: r,
                                handler: n,
                                guid: n.guid,
                                selector: i,
                                needsContext: i && M.expr.match.needsContext.test(i),
                                namespace: f.join(".")
                            }, o), (d = c[p]) || ((d = c[p] = []).delegateCount = 0, h.setup && !1 !== h.setup.call(e, r, f, a) || e.addEventListener && e.addEventListener(p, a)), h.add && (h.add.call(e, u), u.handler.guid || (u.handler.guid = n.guid)), i ? d.splice(d.delegateCount++, 0, u) : d.push(u), M.event.global[p] = !0)
                    },
                    remove: function (e, t, n, r, i) {
                        var o, a, s, c, l, u, h, d, p, f, m, g = Q.hasData(e) && Q.get(e);
                        if (g && (c = g.events)) {
                            for (l = (t = (t || "").match(k) || [""]).length; l--;)
                                if (p = m = (s = Se.exec(t[l]) || [])[1], f = (s[2] || "").split(".").sort(), p) {
                                    for (h = M.event.special[p] || {}, d = c[p = (r ? h.delegateType : h.bindType) || p] || [], s = s[2] && new RegExp("(^|\\.)" + f.join("\\.(?:.*\\.|)") + "(\\.|$)"), a = o = d.length; o--;) u = d[o], !i && m !== u.origType || n && n.guid !== u.guid || s && !s.test(u.namespace) || r && r !== u.selector && ("**" !== r || !u.selector) || (d.splice(o, 1), u.selector && d.delegateCount--, h.remove && h.remove.call(e, u));
                                    a && !d.length && (h.teardown && !1 !== h.teardown.call(e, f, g.handle) || M.removeEvent(e, p, g.handle), delete c[p])
                                } else
                                    for (p in c) M.event.remove(e, p + t[l], n, r, !0);
                            M.isEmptyObject(c) && Q.remove(e, "handle events")
                        }
                    },
                    dispatch: function (e) {
                        var t, n, r, i, o, a, s = new Array(arguments.length),
                            c = M.event.fix(e),
                            l = (Q.get(this, "events") || Object.create(null))[c.type] || [],
                            u = M.event.special[c.type] || {};
                        for (s[0] = c, t = 1; t < arguments.length; t++) s[t] = arguments[t];
                        if (c.delegateTarget = this, !u.preDispatch || !1 !== u.preDispatch.call(this, c)) {
                            for (a = M.event.handlers.call(this, c, l), t = 0;
                                (i = a[t++]) && !c.isPropagationStopped();)
                                for (c.currentTarget = i.elem, n = 0;
                                    (o = i.handlers[n++]) && !c.isImmediatePropagationStopped();) c.rnamespace && !1 !== o.namespace && !c.rnamespace.test(o.namespace) || (c.handleObj = o, c.data = o.data, void 0 !== (r = ((M.event.special[o.origType] || {}).handle || o.handler).apply(i.elem, s)) && !1 === (c.result = r) && (c.preventDefault(), c.stopPropagation()));
                            return u.postDispatch && u.postDispatch.call(this, c), c.result
                        }
                    },
                    handlers: function (e, t) {
                        var n, r, i, o, a, s = [],
                            c = t.delegateCount,
                            l = e.target;
                        if (c && l.nodeType && !("click" === e.type && e.button >= 1))
                            for (; l !== this; l = l.parentNode || this)
                                if (1 === l.nodeType && ("click" !== e.type || !0 !== l.disabled)) {
                                    for (o = [], a = {}, n = 0; n < c; n++) void 0 === a[i = (r = t[n]).selector + " "] && (a[i] = r.needsContext ? M(i, this).index(l) > -1 : M.find(i, this, null, [l]).length), a[i] && o.push(r);
                                    o.length && s.push({
                                        elem: l,
                                        handlers: o
                                    })
                                } return l = this, c < t.length && s.push({
                            elem: l,
                            handlers: t.slice(c)
                        }), s
                    },
                    addProp: function (e, t) {
                        Object.defineProperty(M.Event.prototype, e, {
                            enumerable: !0,
                            configurable: !0,
                            get: v(t) ? function () {
                                if (this.originalEvent) return t(this.originalEvent)
                            } : function () {
                                if (this.originalEvent) return this.originalEvent[e]
                            },
                            set: function (t) {
                                Object.defineProperty(this, e, {
                                    enumerable: !0,
                                    configurable: !0,
                                    writable: !0,
                                    value: t
                                })
                            }
                        })
                    },
                    fix: function (e) {
                        return e[M.expando] ? e : new M.Event(e)
                    },
                    special: {
                        load: {
                            noBubble: !0
                        },
                        click: {
                            setup: function (e) {
                                var t = this || e;
                                return me.test(t.type) && t.click && L(t, "input") && Ce(t, "click", Ee), !1
                            },
                            trigger: function (e) {
                                var t = this || e;
                                return me.test(t.type) && t.click && L(t, "input") && Ce(t, "click"), !0
                            },
                            _default: function (e) {
                                var t = e.target;
                                return me.test(t.type) && t.click && L(t, "input") && Q.get(t, "click") || L(t, "a")
                            }
                        },
                        beforeunload: {
                            postDispatch: function (e) {
                                void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result)
                            }
                        }
                    }
                }, M.removeEvent = function (e, t, n) {
                    e.removeEventListener && e.removeEventListener(t, n)
                }, M.Event = function (e, t) {
                    if (!(this instanceof M.Event)) return new M.Event(e, t);
                    e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && !1 === e.returnValue ? Ee : Ae, this.target = e.target && 3 === e.target.nodeType ? e.target.parentNode : e.target, this.currentTarget = e.currentTarget, this.relatedTarget = e.relatedTarget) : this.type = e, t && M.extend(this, t), this.timeStamp = e && e.timeStamp || Date.now(), this[M.expando] = !0
                }, M.Event.prototype = {
                    constructor: M.Event,
                    isDefaultPrevented: Ae,
                    isPropagationStopped: Ae,
                    isImmediatePropagationStopped: Ae,
                    isSimulated: !1,
                    preventDefault: function () {
                        var e = this.originalEvent;
                        this.isDefaultPrevented = Ee, e && !this.isSimulated && e.preventDefault()
                    },
                    stopPropagation: function () {
                        var e = this.originalEvent;
                        this.isPropagationStopped = Ee, e && !this.isSimulated && e.stopPropagation()
                    },
                    stopImmediatePropagation: function () {
                        var e = this.originalEvent;
                        this.isImmediatePropagationStopped = Ee, e && !this.isSimulated && e.stopImmediatePropagation(), this.stopPropagation()
                    }
                }, M.each({
                    altKey: !0,
                    bubbles: !0,
                    cancelable: !0,
                    changedTouches: !0,
                    ctrlKey: !0,
                    detail: !0,
                    eventPhase: !0,
                    metaKey: !0,
                    pageX: !0,
                    pageY: !0,
                    shiftKey: !0,
                    view: !0,
                    char: !0,
                    code: !0,
                    charCode: !0,
                    key: !0,
                    keyCode: !0,
                    button: !0,
                    buttons: !0,
                    clientX: !0,
                    clientY: !0,
                    offsetX: !0,
                    offsetY: !0,
                    pointerId: !0,
                    pointerType: !0,
                    screenX: !0,
                    screenY: !0,
                    targetTouches: !0,
                    toElement: !0,
                    touches: !0,
                    which: function (e) {
                        var t = e.button;
                        return null == e.which && Me.test(e.type) ? null != e.charCode ? e.charCode : e.keyCode : !e.which && void 0 !== t && Te.test(e.type) ? 1 & t ? 1 : 2 & t ? 3 : 4 & t ? 2 : 0 : e.which
                    }
                }, M.event.addProp), M.each({
                    focus: "focusin",
                    blur: "focusout"
                }, (function (e, t) {
                    M.event.special[e] = {
                        setup: function () {
                            return Ce(this, e, je), !1
                        },
                        trigger: function () {
                            return Ce(this, e), !0
                        },
                        delegateType: t
                    }
                })), M.each({
                    mouseenter: "mouseover",
                    mouseleave: "mouseout",
                    pointerenter: "pointerover",
                    pointerleave: "pointerout"
                }, (function (e, t) {
                    M.event.special[e] = {
                        delegateType: t,
                        bindType: t,
                        handle: function (e) {
                            var n, r = this,
                                i = e.relatedTarget,
                                o = e.handleObj;
                            return i && (i === r || M.contains(r, i)) || (e.type = o.origType, n = o.handler.apply(this, arguments), e.type = t), n
                        }
                    }
                })), M.fn.extend({
                    on: function (e, t, n, r) {
                        return Le(this, e, t, n, r)
                    },
                    one: function (e, t, n, r) {
                        return Le(this, e, t, n, r, 1)
                    },
                    off: function (e, t, n) {
                        var r, i;
                        if (e && e.preventDefault && e.handleObj) return r = e.handleObj, M(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler), this;
                        if ("object" == typeof e) {
                            for (i in e) this.off(i, t, e[i]);
                            return this
                        }
                        return !1 !== t && "function" != typeof t || (n = t, t = void 0), !1 === n && (n = Ae), this.each((function () {
                            M.event.remove(this, e, n, t)
                        }))
                    }
                });
                var Pe = /<script|<style|<link/i,
                    Oe = /checked\s*(?:[^=]|=\s*.checked.)/i,
                    Re = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

                function De(e, t) {
                    return L(e, "table") && L(11 !== t.nodeType ? t : t.firstChild, "tr") && M(e).children("tbody")[0] || e
                }

                function Ne(e) {
                    return e.type = (null !== e.getAttribute("type")) + "/" + e.type, e
                }

                function Ie(e) {
                    return "true/" === (e.type || "").slice(0, 5) ? e.type = e.type.slice(5) : e.removeAttribute("type"), e
                }

                function ke(e, t) {
                    var n, r, i, o, a, s;
                    if (1 === t.nodeType) {
                        if (Q.hasData(e) && (s = Q.get(e).events))
                            for (i in Q.remove(t, "handle events"), s)
                                for (n = 0, r = s[i].length; n < r; n++) M.event.add(t, i, s[i][n]);
                        $.hasData(e) && (o = $.access(e), a = M.extend({}, o), $.set(t, a))
                    }
                }

                function ze(e, t) {
                    var n = t.nodeName.toLowerCase();
                    "input" === n && me.test(e.type) ? t.checked = e.checked : "input" !== n && "textarea" !== n || (t.defaultValue = e.defaultValue)
                }

                function Be(e, t, n, r) {
                    t = c(t);
                    var i, o, a, s, l, u, h = 0,
                        d = e.length,
                        p = d - 1,
                        f = t[0],
                        m = v(f);
                    if (m || d > 1 && "string" == typeof f && !g.checkClone && Oe.test(f)) return e.each((function (i) {
                        var o = e.eq(i);
                        m && (t[0] = f.call(this, i, o.html())), Be(o, t, n, r)
                    }));
                    if (d && (o = (i = we(t, e[0].ownerDocument, !1, e, r)).firstChild, 1 === i.childNodes.length && (i = o), o || r)) {
                        for (s = (a = M.map(_e(i, "script"), Ne)).length; h < d; h++) l = i, h !== p && (l = M.clone(l, !0, !0), s && M.merge(a, _e(l, "script"))), n.call(e[h], l, h);
                        if (s)
                            for (u = a[a.length - 1].ownerDocument, M.map(a, Ie), h = 0; h < s; h++) l = a[h], ve.test(l.type || "") && !Q.access(l, "globalEval") && M.contains(u, l) && (l.src && "module" !== (l.type || "").toLowerCase() ? M._evalUrl && !l.noModule && M._evalUrl(l.src, {
                                nonce: l.nonce || l.getAttribute("nonce")
                            }, u) : b(l.textContent.replace(Re, ""), l, u))
                    }
                    return e
                }

                function Fe(e, t, n) {
                    for (var r, i = t ? M.filter(t, e) : e, o = 0; null != (r = i[o]); o++) n || 1 !== r.nodeType || M.cleanData(_e(r)), r.parentNode && (n && ae(r) && xe(_e(r, "script")), r.parentNode.removeChild(r));
                    return e
                }
                M.extend({
                    htmlPrefilter: function (e) {
                        return e
                    },
                    clone: function (e, t, n) {
                        var r, i, o, a, s = e.cloneNode(!0),
                            c = ae(e);
                        if (!(g.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || M.isXMLDoc(e)))
                            for (a = _e(s), r = 0, i = (o = _e(e)).length; r < i; r++) ze(o[r], a[r]);
                        if (t)
                            if (n)
                                for (o = o || _e(e), a = a || _e(s), r = 0, i = o.length; r < i; r++) ke(o[r], a[r]);
                            else ke(e, s);
                        return (a = _e(s, "script")).length > 0 && xe(a, !c && _e(e, "script")), s
                    },
                    cleanData: function (e) {
                        for (var t, n, r, i = M.event.special, o = 0; void 0 !== (n = e[o]); o++)
                            if (J(n)) {
                                if (t = n[Q.expando]) {
                                    if (t.events)
                                        for (r in t.events) i[r] ? M.event.remove(n, r) : M.removeEvent(n, r, t.handle);
                                    n[Q.expando] = void 0
                                }
                                n[$.expando] && (n[$.expando] = void 0)
                            }
                    }
                }), M.fn.extend({
                    detach: function (e) {
                        return Fe(this, e, !0)
                    },
                    remove: function (e) {
                        return Fe(this, e)
                    },
                    text: function (e) {
                        return V(this, (function (e) {
                            return void 0 === e ? M.text(this) : this.empty().each((function () {
                                1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = e)
                            }))
                        }), null, e, arguments.length)
                    },
                    append: function () {
                        return Be(this, arguments, (function (e) {
                            1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || De(this, e).appendChild(e)
                        }))
                    },
                    prepend: function () {
                        return Be(this, arguments, (function (e) {
                            if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                                var t = De(this, e);
                                t.insertBefore(e, t.firstChild)
                            }
                        }))
                    },
                    before: function () {
                        return Be(this, arguments, (function (e) {
                            this.parentNode && this.parentNode.insertBefore(e, this)
                        }))
                    },
                    after: function () {
                        return Be(this, arguments, (function (e) {
                            this.parentNode && this.parentNode.insertBefore(e, this.nextSibling)
                        }))
                    },
                    empty: function () {
                        for (var e, t = 0; null != (e = this[t]); t++) 1 === e.nodeType && (M.cleanData(_e(e, !1)), e.textContent = "");
                        return this
                    },
                    clone: function (e, t) {
                        return e = null != e && e, t = null == t ? e : t, this.map((function () {
                            return M.clone(this, e, t)
                        }))
                    },
                    html: function (e) {
                        return V(this, (function (e) {
                            var t = this[0] || {},
                                n = 0,
                                r = this.length;
                            if (void 0 === e && 1 === t.nodeType) return t.innerHTML;
                            if ("string" == typeof e && !Pe.test(e) && !ye[(ge.exec(e) || ["", ""])[1].toLowerCase()]) {
                                e = M.htmlPrefilter(e);
                                try {
                                    for (; n < r; n++) 1 === (t = this[n] || {}).nodeType && (M.cleanData(_e(t, !1)), t.innerHTML = e);
                                    t = 0
                                } catch (e) {}
                            }
                            t && this.empty().append(e)
                        }), null, e, arguments.length)
                    },
                    replaceWith: function () {
                        var e = [];
                        return Be(this, arguments, (function (t) {
                            var n = this.parentNode;
                            M.inArray(this, e) < 0 && (M.cleanData(_e(this)), n && n.replaceChild(t, this))
                        }), e)
                    }
                }), M.each({
                    appendTo: "append",
                    prependTo: "prepend",
                    insertBefore: "before",
                    insertAfter: "after",
                    replaceAll: "replaceWith"
                }, (function (e, t) {
                    M.fn[e] = function (e) {
                        for (var n, r = [], i = M(e), o = i.length - 1, a = 0; a <= o; a++) n = a === o ? this : this.clone(!0), M(i[a])[t](n), l.apply(r, n.get());
                        return this.pushStack(r)
                    }
                }));
                var Ue = new RegExp("^(" + ne + ")(?!px)[a-z%]+$", "i"),
                    He = function (e) {
                        var t = e.ownerDocument.defaultView;
                        return t && t.opener || (t = n), t.getComputedStyle(e)
                    },
                    Ge = function (e, t, n) {
                        var r, i, o = {};
                        for (i in t) o[i] = e.style[i], e.style[i] = t[i];
                        for (i in r = n.call(e), t) e.style[i] = o[i];
                        return r
                    },
                    Ve = new RegExp(ie.join("|"), "i");

                function We(e, t, n) {
                    var r, i, o, a, s = e.style;
                    return (n = n || He(e)) && ("" !== (a = n.getPropertyValue(t) || n[t]) || ae(e) || (a = M.style(e, t)), !g.pixelBoxStyles() && Ue.test(a) && Ve.test(t) && (r = s.width, i = s.minWidth, o = s.maxWidth, s.minWidth = s.maxWidth = s.width = a, a = n.width, s.width = r, s.minWidth = i, s.maxWidth = o)), void 0 !== a ? a + "" : a
                }

                function qe(e, t) {
                    return {
                        get: function () {
                            if (!e()) return (this.get = t).apply(this, arguments);
                            delete this.get
                        }
                    }
                }! function () {
                    function e() {
                        if (u) {
                            l.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", u.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", oe.appendChild(l).appendChild(u);
                            var e = n.getComputedStyle(u);
                            r = "1%" !== e.top, c = 12 === t(e.marginLeft), u.style.right = "60%", a = 36 === t(e.right), i = 36 === t(e.width), u.style.position = "absolute", o = 12 === t(u.offsetWidth / 3), oe.removeChild(l), u = null
                        }
                    }

                    function t(e) {
                        return Math.round(parseFloat(e))
                    }
                    var r, i, o, a, s, c, l = _.createElement("div"),
                        u = _.createElement("div");
                    u.style && (u.style.backgroundClip = "content-box", u.cloneNode(!0).style.backgroundClip = "", g.clearCloneStyle = "content-box" === u.style.backgroundClip, M.extend(g, {
                        boxSizingReliable: function () {
                            return e(), i
                        },
                        pixelBoxStyles: function () {
                            return e(), a
                        },
                        pixelPosition: function () {
                            return e(), r
                        },
                        reliableMarginLeft: function () {
                            return e(), c
                        },
                        scrollboxSize: function () {
                            return e(), o
                        },
                        reliableTrDimensions: function () {
                            var e, t, r, i;
                            return null == s && (e = _.createElement("table"), t = _.createElement("tr"), r = _.createElement("div"), e.style.cssText = "position:absolute;left:-11111px", t.style.height = "1px", r.style.height = "9px", oe.appendChild(e).appendChild(t).appendChild(r), i = n.getComputedStyle(t), s = parseInt(i.height) > 3, oe.removeChild(e)), s
                        }
                    }))
                }();
                var Xe = ["Webkit", "Moz", "ms"],
                    Ye = _.createElement("div").style,
                    Je = {};

                function Ze(e) {
                    var t = M.cssProps[e] || Je[e];
                    return t || (e in Ye ? e : Je[e] = function (e) {
                        for (var t = e[0].toUpperCase() + e.slice(1), n = Xe.length; n--;)
                            if ((e = Xe[n] + t) in Ye) return e
                    }(e) || e)
                }
                var Qe = /^(none|table(?!-c[ea]).+)/,
                    $e = /^--/,
                    Ke = {
                        position: "absolute",
                        visibility: "hidden",
                        display: "block"
                    },
                    et = {
                        letterSpacing: "0",
                        fontWeight: "400"
                    };

                function tt(e, t, n) {
                    var r = re.exec(t);
                    return r ? Math.max(0, r[2] - (n || 0)) + (r[3] || "px") : t
                }

                function nt(e, t, n, r, i, o) {
                    var a = "width" === t ? 1 : 0,
                        s = 0,
                        c = 0;
                    if (n === (r ? "border" : "content")) return 0;
                    for (; a < 4; a += 2) "margin" === n && (c += M.css(e, n + ie[a], !0, i)), r ? ("content" === n && (c -= M.css(e, "padding" + ie[a], !0, i)), "margin" !== n && (c -= M.css(e, "border" + ie[a] + "Width", !0, i))) : (c += M.css(e, "padding" + ie[a], !0, i), "padding" !== n ? c += M.css(e, "border" + ie[a] + "Width", !0, i) : s += M.css(e, "border" + ie[a] + "Width", !0, i));
                    return !r && o >= 0 && (c += Math.max(0, Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - o - c - s - .5)) || 0), c
                }

                function rt(e, t, n) {
                    var r = He(e),
                        i = (!g.boxSizingReliable() || n) && "border-box" === M.css(e, "boxSizing", !1, r),
                        o = i,
                        a = We(e, t, r),
                        s = "offset" + t[0].toUpperCase() + t.slice(1);
                    if (Ue.test(a)) {
                        if (!n) return a;
                        a = "auto"
                    }
                    return (!g.boxSizingReliable() && i || !g.reliableTrDimensions() && L(e, "tr") || "auto" === a || !parseFloat(a) && "inline" === M.css(e, "display", !1, r)) && e.getClientRects().length && (i = "border-box" === M.css(e, "boxSizing", !1, r), (o = s in e) && (a = e[s])), (a = parseFloat(a) || 0) + nt(e, t, n || (i ? "border" : "content"), o, r, a) + "px"
                }

                function it(e, t, n, r, i) {
                    return new it.prototype.init(e, t, n, r, i)
                }
                M.extend({
                    cssHooks: {
                        opacity: {
                            get: function (e, t) {
                                if (t) {
                                    var n = We(e, "opacity");
                                    return "" === n ? "1" : n
                                }
                            }
                        }
                    },
                    cssNumber: {
                        animationIterationCount: !0,
                        columnCount: !0,
                        fillOpacity: !0,
                        flexGrow: !0,
                        flexShrink: !0,
                        fontWeight: !0,
                        gridArea: !0,
                        gridColumn: !0,
                        gridColumnEnd: !0,
                        gridColumnStart: !0,
                        gridRow: !0,
                        gridRowEnd: !0,
                        gridRowStart: !0,
                        lineHeight: !0,
                        opacity: !0,
                        order: !0,
                        orphans: !0,
                        widows: !0,
                        zIndex: !0,
                        zoom: !0
                    },
                    cssProps: {},
                    style: function (e, t, n, r) {
                        if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
                            var i, o, a, s = Y(t),
                                c = $e.test(t),
                                l = e.style;
                            if (c || (t = Ze(s)), a = M.cssHooks[t] || M.cssHooks[s], void 0 === n) return a && "get" in a && void 0 !== (i = a.get(e, !1, r)) ? i : l[t];
                            "string" === (o = typeof n) && (i = re.exec(n)) && i[1] && (n = le(e, t, i), o = "number"), null != n && n == n && ("number" !== o || c || (n += i && i[3] || (M.cssNumber[s] ? "" : "px")), g.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (l[t] = "inherit"), a && "set" in a && void 0 === (n = a.set(e, n, r)) || (c ? l.setProperty(t, n) : l[t] = n))
                        }
                    },
                    css: function (e, t, n, r) {
                        var i, o, a, s = Y(t);
                        return $e.test(t) || (t = Ze(s)), (a = M.cssHooks[t] || M.cssHooks[s]) && "get" in a && (i = a.get(e, !0, n)), void 0 === i && (i = We(e, t, r)), "normal" === i && t in et && (i = et[t]), "" === n || n ? (o = parseFloat(i), !0 === n || isFinite(o) ? o || 0 : i) : i
                    }
                }), M.each(["height", "width"], (function (e, t) {
                    M.cssHooks[t] = {
                        get: function (e, n, r) {
                            if (n) return !Qe.test(M.css(e, "display")) || e.getClientRects().length && e.getBoundingClientRect().width ? rt(e, t, r) : Ge(e, Ke, (function () {
                                return rt(e, t, r)
                            }))
                        },
                        set: function (e, n, r) {
                            var i, o = He(e),
                                a = !g.scrollboxSize() && "absolute" === o.position,
                                s = (a || r) && "border-box" === M.css(e, "boxSizing", !1, o),
                                c = r ? nt(e, t, r, s, o) : 0;
                            return s && a && (c -= Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - parseFloat(o[t]) - nt(e, t, "border", !1, o) - .5)), c && (i = re.exec(n)) && "px" !== (i[3] || "px") && (e.style[t] = n, n = M.css(e, t)), tt(0, n, c)
                        }
                    }
                })), M.cssHooks.marginLeft = qe(g.reliableMarginLeft, (function (e, t) {
                    if (t) return (parseFloat(We(e, "marginLeft")) || e.getBoundingClientRect().left - Ge(e, {
                        marginLeft: 0
                    }, (function () {
                        return e.getBoundingClientRect().left
                    }))) + "px"
                })), M.each({
                    margin: "",
                    padding: "",
                    border: "Width"
                }, (function (e, t) {
                    M.cssHooks[e + t] = {
                        expand: function (n) {
                            for (var r = 0, i = {}, o = "string" == typeof n ? n.split(" ") : [n]; r < 4; r++) i[e + ie[r] + t] = o[r] || o[r - 2] || o[0];
                            return i
                        }
                    }, "margin" !== e && (M.cssHooks[e + t].set = tt)
                })), M.fn.extend({
                    css: function (e, t) {
                        return V(this, (function (e, t, n) {
                            var r, i, o = {},
                                a = 0;
                            if (Array.isArray(t)) {
                                for (r = He(e), i = t.length; a < i; a++) o[t[a]] = M.css(e, t[a], !1, r);
                                return o
                            }
                            return void 0 !== n ? M.style(e, t, n) : M.css(e, t)
                        }), e, t, arguments.length > 1)
                    }
                }), M.Tween = it, it.prototype = {
                    constructor: it,
                    init: function (e, t, n, r, i, o) {
                        this.elem = e, this.prop = n, this.easing = i || M.easing._default, this.options = t, this.start = this.now = this.cur(), this.end = r, this.unit = o || (M.cssNumber[n] ? "" : "px")
                    },
                    cur: function () {
                        var e = it.propHooks[this.prop];
                        return e && e.get ? e.get(this) : it.propHooks._default.get(this)
                    },
                    run: function (e) {
                        var t, n = it.propHooks[this.prop];
                        return this.options.duration ? this.pos = t = M.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : it.propHooks._default.set(this), this
                    }
                }, it.prototype.init.prototype = it.prototype, it.propHooks = {
                    _default: {
                        get: function (e) {
                            var t;
                            return 1 !== e.elem.nodeType || null != e.elem[e.prop] && null == e.elem.style[e.prop] ? e.elem[e.prop] : (t = M.css(e.elem, e.prop, "")) && "auto" !== t ? t : 0
                        },
                        set: function (e) {
                            M.fx.step[e.prop] ? M.fx.step[e.prop](e) : 1 !== e.elem.nodeType || !M.cssHooks[e.prop] && null == e.elem.style[Ze(e.prop)] ? e.elem[e.prop] = e.now : M.style(e.elem, e.prop, e.now + e.unit)
                        }
                    }
                }, it.propHooks.scrollTop = it.propHooks.scrollLeft = {
                    set: function (e) {
                        e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now)
                    }
                }, M.easing = {
                    linear: function (e) {
                        return e
                    },
                    swing: function (e) {
                        return .5 - Math.cos(e * Math.PI) / 2
                    },
                    _default: "swing"
                }, M.fx = it.prototype.init, M.fx.step = {};
                var ot, at, st = /^(?:toggle|show|hide)$/,
                    ct = /queueHooks$/;

                function lt() {
                    at && (!1 === _.hidden && n.requestAnimationFrame ? n.requestAnimationFrame(lt) : n.setTimeout(lt, M.fx.interval), M.fx.tick())
                }

                function ut() {
                    return n.setTimeout((function () {
                        ot = void 0
                    })), ot = Date.now()
                }

                function ht(e, t) {
                    var n, r = 0,
                        i = {
                            height: e
                        };
                    for (t = t ? 1 : 0; r < 4; r += 2 - t) i["margin" + (n = ie[r])] = i["padding" + n] = e;
                    return t && (i.opacity = i.width = e), i
                }

                function dt(e, t, n) {
                    for (var r, i = (pt.tweeners[t] || []).concat(pt.tweeners["*"]), o = 0, a = i.length; o < a; o++)
                        if (r = i[o].call(n, t, e)) return r
                }

                function pt(e, t, n) {
                    var r, i, o = 0,
                        a = pt.prefilters.length,
                        s = M.Deferred().always((function () {
                            delete c.elem
                        })),
                        c = function () {
                            if (i) return !1;
                            for (var t = ot || ut(), n = Math.max(0, l.startTime + l.duration - t), r = 1 - (n / l.duration || 0), o = 0, a = l.tweens.length; o < a; o++) l.tweens[o].run(r);
                            return s.notifyWith(e, [l, r, n]), r < 1 && a ? n : (a || s.notifyWith(e, [l, 1, 0]), s.resolveWith(e, [l]), !1)
                        },
                        l = s.promise({
                            elem: e,
                            props: M.extend({}, t),
                            opts: M.extend(!0, {
                                specialEasing: {},
                                easing: M.easing._default
                            }, n),
                            originalProperties: t,
                            originalOptions: n,
                            startTime: ot || ut(),
                            duration: n.duration,
                            tweens: [],
                            createTween: function (t, n) {
                                var r = M.Tween(e, l.opts, t, n, l.opts.specialEasing[t] || l.opts.easing);
                                return l.tweens.push(r), r
                            },
                            stop: function (t) {
                                var n = 0,
                                    r = t ? l.tweens.length : 0;
                                if (i) return this;
                                for (i = !0; n < r; n++) l.tweens[n].run(1);
                                return t ? (s.notifyWith(e, [l, 1, 0]), s.resolveWith(e, [l, t])) : s.rejectWith(e, [l, t]), this
                            }
                        }),
                        u = l.props;
                    for (! function (e, t) {
                            var n, r, i, o, a;
                            for (n in e)
                                if (i = t[r = Y(n)], o = e[n], Array.isArray(o) && (i = o[1], o = e[n] = o[0]), n !== r && (e[r] = o, delete e[n]), (a = M.cssHooks[r]) && "expand" in a)
                                    for (n in o = a.expand(o), delete e[r], o) n in e || (e[n] = o[n], t[n] = i);
                                else t[r] = i
                        }(u, l.opts.specialEasing); o < a; o++)
                        if (r = pt.prefilters[o].call(l, e, u, l.opts)) return v(r.stop) && (M._queueHooks(l.elem, l.opts.queue).stop = r.stop.bind(r)), r;
                    return M.map(u, dt, l), v(l.opts.start) && l.opts.start.call(e, l), l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always), M.fx.timer(M.extend(c, {
                        elem: e,
                        anim: l,
                        queue: l.opts.queue
                    })), l
                }
                M.Animation = M.extend(pt, {
                        tweeners: {
                            "*": [function (e, t) {
                                var n = this.createTween(e, t);
                                return le(n.elem, e, re.exec(t), n), n
                            }]
                        },
                        tweener: function (e, t) {
                            v(e) ? (t = e, e = ["*"]) : e = e.match(k);
                            for (var n, r = 0, i = e.length; r < i; r++) n = e[r], pt.tweeners[n] = pt.tweeners[n] || [], pt.tweeners[n].unshift(t)
                        },
                        prefilters: [function (e, t, n) {
                            var r, i, o, a, s, c, l, u, h = "width" in t || "height" in t,
                                d = this,
                                p = {},
                                f = e.style,
                                m = e.nodeType && ce(e),
                                g = Q.get(e, "fxshow");
                            for (r in n.queue || (null == (a = M._queueHooks(e, "fx")).unqueued && (a.unqueued = 0, s = a.empty.fire, a.empty.fire = function () {
                                    a.unqueued || s()
                                }), a.unqueued++, d.always((function () {
                                    d.always((function () {
                                        a.unqueued--, M.queue(e, "fx").length || a.empty.fire()
                                    }))
                                }))), t)
                                if (i = t[r], st.test(i)) {
                                    if (delete t[r], o = o || "toggle" === i, i === (m ? "hide" : "show")) {
                                        if ("show" !== i || !g || void 0 === g[r]) continue;
                                        m = !0
                                    }
                                    p[r] = g && g[r] || M.style(e, r)
                                } if ((c = !M.isEmptyObject(t)) || !M.isEmptyObject(p))
                                for (r in h && 1 === e.nodeType && (n.overflow = [f.overflow, f.overflowX, f.overflowY], null == (l = g && g.display) && (l = Q.get(e, "display")), "none" === (u = M.css(e, "display")) && (l ? u = l : (de([e], !0), l = e.style.display || l, u = M.css(e, "display"), de([e]))), ("inline" === u || "inline-block" === u && null != l) && "none" === M.css(e, "float") && (c || (d.done((function () {
                                        f.display = l
                                    })), null == l && (u = f.display, l = "none" === u ? "" : u)), f.display = "inline-block")), n.overflow && (f.overflow = "hidden", d.always((function () {
                                        f.overflow = n.overflow[0], f.overflowX = n.overflow[1], f.overflowY = n.overflow[2]
                                    }))), c = !1, p) c || (g ? "hidden" in g && (m = g.hidden) : g = Q.access(e, "fxshow", {
                                    display: l
                                }), o && (g.hidden = !m), m && de([e], !0), d.done((function () {
                                    for (r in m || de([e]), Q.remove(e, "fxshow"), p) M.style(e, r, p[r])
                                }))), c = dt(m ? g[r] : 0, r, d), r in g || (g[r] = c.start, m && (c.end = c.start, c.start = 0))
                        }],
                        prefilter: function (e, t) {
                            t ? pt.prefilters.unshift(e) : pt.prefilters.push(e)
                        }
                    }), M.speed = function (e, t, n) {
                        var r = e && "object" == typeof e ? M.extend({}, e) : {
                            complete: n || !n && t || v(e) && e,
                            duration: e,
                            easing: n && t || t && !v(t) && t
                        };
                        return M.fx.off ? r.duration = 0 : "number" != typeof r.duration && (r.duration in M.fx.speeds ? r.duration = M.fx.speeds[r.duration] : r.duration = M.fx.speeds._default), null != r.queue && !0 !== r.queue || (r.queue = "fx"), r.old = r.complete, r.complete = function () {
                            v(r.old) && r.old.call(this), r.queue && M.dequeue(this, r.queue)
                        }, r
                    }, M.fn.extend({
                        fadeTo: function (e, t, n, r) {
                            return this.filter(ce).css("opacity", 0).show().end().animate({
                                opacity: t
                            }, e, n, r)
                        },
                        animate: function (e, t, n, r) {
                            var i = M.isEmptyObject(e),
                                o = M.speed(t, n, r),
                                a = function () {
                                    var t = pt(this, M.extend({}, e), o);
                                    (i || Q.get(this, "finish")) && t.stop(!0)
                                };
                            return a.finish = a, i || !1 === o.queue ? this.each(a) : this.queue(o.queue, a)
                        },
                        stop: function (e, t, n) {
                            var r = function (e) {
                                var t = e.stop;
                                delete e.stop, t(n)
                            };
                            return "string" != typeof e && (n = t, t = e, e = void 0), t && this.queue(e || "fx", []), this.each((function () {
                                var t = !0,
                                    i = null != e && e + "queueHooks",
                                    o = M.timers,
                                    a = Q.get(this);
                                if (i) a[i] && a[i].stop && r(a[i]);
                                else
                                    for (i in a) a[i] && a[i].stop && ct.test(i) && r(a[i]);
                                for (i = o.length; i--;) o[i].elem !== this || null != e && o[i].queue !== e || (o[i].anim.stop(n), t = !1, o.splice(i, 1));
                                !t && n || M.dequeue(this, e)
                            }))
                        },
                        finish: function (e) {
                            return !1 !== e && (e = e || "fx"), this.each((function () {
                                var t, n = Q.get(this),
                                    r = n[e + "queue"],
                                    i = n[e + "queueHooks"],
                                    o = M.timers,
                                    a = r ? r.length : 0;
                                for (n.finish = !0, M.queue(this, e, []), i && i.stop && i.stop.call(this, !0), t = o.length; t--;) o[t].elem === this && o[t].queue === e && (o[t].anim.stop(!0), o.splice(t, 1));
                                for (t = 0; t < a; t++) r[t] && r[t].finish && r[t].finish.call(this);
                                delete n.finish
                            }))
                        }
                    }), M.each(["toggle", "show", "hide"], (function (e, t) {
                        var n = M.fn[t];
                        M.fn[t] = function (e, r, i) {
                            return null == e || "boolean" == typeof e ? n.apply(this, arguments) : this.animate(ht(t, !0), e, r, i)
                        }
                    })), M.each({
                        slideDown: ht("show"),
                        slideUp: ht("hide"),
                        slideToggle: ht("toggle"),
                        fadeIn: {
                            opacity: "show"
                        },
                        fadeOut: {
                            opacity: "hide"
                        },
                        fadeToggle: {
                            opacity: "toggle"
                        }
                    }, (function (e, t) {
                        M.fn[e] = function (e, n, r) {
                            return this.animate(t, e, n, r)
                        }
                    })), M.timers = [], M.fx.tick = function () {
                        var e, t = 0,
                            n = M.timers;
                        for (ot = Date.now(); t < n.length; t++)(e = n[t])() || n[t] !== e || n.splice(t--, 1);
                        n.length || M.fx.stop(), ot = void 0
                    }, M.fx.timer = function (e) {
                        M.timers.push(e), M.fx.start()
                    }, M.fx.interval = 13, M.fx.start = function () {
                        at || (at = !0, lt())
                    }, M.fx.stop = function () {
                        at = null
                    }, M.fx.speeds = {
                        slow: 600,
                        fast: 200,
                        _default: 400
                    }, M.fn.delay = function (e, t) {
                        return e = M.fx && M.fx.speeds[e] || e, t = t || "fx", this.queue(t, (function (t, r) {
                            var i = n.setTimeout(t, e);
                            r.stop = function () {
                                n.clearTimeout(i)
                            }
                        }))
                    },
                    function () {
                        var e = _.createElement("input"),
                            t = _.createElement("select").appendChild(_.createElement("option"));
                        e.type = "checkbox", g.checkOn = "" !== e.value, g.optSelected = t.selected, (e = _.createElement("input")).value = "t", e.type = "radio", g.radioValue = "t" === e.value
                    }();
                var ft, mt = M.expr.attrHandle;
                M.fn.extend({
                    attr: function (e, t) {
                        return V(this, M.attr, e, t, arguments.length > 1)
                    },
                    removeAttr: function (e) {
                        return this.each((function () {
                            M.removeAttr(this, e)
                        }))
                    }
                }), M.extend({
                    attr: function (e, t, n) {
                        var r, i, o = e.nodeType;
                        if (3 !== o && 8 !== o && 2 !== o) return void 0 === e.getAttribute ? M.prop(e, t, n) : (1 === o && M.isXMLDoc(e) || (i = M.attrHooks[t.toLowerCase()] || (M.expr.match.bool.test(t) ? ft : void 0)), void 0 !== n ? null === n ? void M.removeAttr(e, t) : i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : (e.setAttribute(t, n + ""), n) : i && "get" in i && null !== (r = i.get(e, t)) ? r : null == (r = M.find.attr(e, t)) ? void 0 : r)
                    },
                    attrHooks: {
                        type: {
                            set: function (e, t) {
                                if (!g.radioValue && "radio" === t && L(e, "input")) {
                                    var n = e.value;
                                    return e.setAttribute("type", t), n && (e.value = n), t
                                }
                            }
                        }
                    },
                    removeAttr: function (e, t) {
                        var n, r = 0,
                            i = t && t.match(k);
                        if (i && 1 === e.nodeType)
                            for (; n = i[r++];) e.removeAttribute(n)
                    }
                }), ft = {
                    set: function (e, t, n) {
                        return !1 === t ? M.removeAttr(e, n) : e.setAttribute(n, n), n
                    }
                }, M.each(M.expr.match.bool.source.match(/\w+/g), (function (e, t) {
                    var n = mt[t] || M.find.attr;
                    mt[t] = function (e, t, r) {
                        var i, o, a = t.toLowerCase();
                        return r || (o = mt[a], mt[a] = i, i = null != n(e, t, r) ? a : null, mt[a] = o), i
                    }
                }));
                var gt = /^(?:input|select|textarea|button)$/i,
                    vt = /^(?:a|area)$/i;

                function yt(e) {
                    return (e.match(k) || []).join(" ")
                }

                function _t(e) {
                    return e.getAttribute && e.getAttribute("class") || ""
                }

                function xt(e) {
                    return Array.isArray(e) ? e : "string" == typeof e && e.match(k) || []
                }
                M.fn.extend({
                    prop: function (e, t) {
                        return V(this, M.prop, e, t, arguments.length > 1)
                    },
                    removeProp: function (e) {
                        return this.each((function () {
                            delete this[M.propFix[e] || e]
                        }))
                    }
                }), M.extend({
                    prop: function (e, t, n) {
                        var r, i, o = e.nodeType;
                        if (3 !== o && 8 !== o && 2 !== o) return 1 === o && M.isXMLDoc(e) || (t = M.propFix[t] || t, i = M.propHooks[t]), void 0 !== n ? i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : e[t] = n : i && "get" in i && null !== (r = i.get(e, t)) ? r : e[t]
                    },
                    propHooks: {
                        tabIndex: {
                            get: function (e) {
                                var t = M.find.attr(e, "tabindex");
                                return t ? parseInt(t, 10) : gt.test(e.nodeName) || vt.test(e.nodeName) && e.href ? 0 : -1
                            }
                        }
                    },
                    propFix: {
                        for: "htmlFor",
                        class: "className"
                    }
                }), g.optSelected || (M.propHooks.selected = {
                    get: function (e) {
                        var t = e.parentNode;
                        return t && t.parentNode && t.parentNode.selectedIndex, null
                    },
                    set: function (e) {
                        var t = e.parentNode;
                        t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex)
                    }
                }), M.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], (function () {
                    M.propFix[this.toLowerCase()] = this
                })), M.fn.extend({
                    addClass: function (e) {
                        var t, n, r, i, o, a, s, c = 0;
                        if (v(e)) return this.each((function (t) {
                            M(this).addClass(e.call(this, t, _t(this)))
                        }));
                        if ((t = xt(e)).length)
                            for (; n = this[c++];)
                                if (i = _t(n), r = 1 === n.nodeType && " " + yt(i) + " ") {
                                    for (a = 0; o = t[a++];) r.indexOf(" " + o + " ") < 0 && (r += o + " ");
                                    i !== (s = yt(r)) && n.setAttribute("class", s)
                                } return this
                    },
                    removeClass: function (e) {
                        var t, n, r, i, o, a, s, c = 0;
                        if (v(e)) return this.each((function (t) {
                            M(this).removeClass(e.call(this, t, _t(this)))
                        }));
                        if (!arguments.length) return this.attr("class", "");
                        if ((t = xt(e)).length)
                            for (; n = this[c++];)
                                if (i = _t(n), r = 1 === n.nodeType && " " + yt(i) + " ") {
                                    for (a = 0; o = t[a++];)
                                        for (; r.indexOf(" " + o + " ") > -1;) r = r.replace(" " + o + " ", " ");
                                    i !== (s = yt(r)) && n.setAttribute("class", s)
                                } return this
                    },
                    toggleClass: function (e, t) {
                        var n = typeof e,
                            r = "string" === n || Array.isArray(e);
                        return "boolean" == typeof t && r ? t ? this.addClass(e) : this.removeClass(e) : v(e) ? this.each((function (n) {
                            M(this).toggleClass(e.call(this, n, _t(this), t), t)
                        })) : this.each((function () {
                            var t, i, o, a;
                            if (r)
                                for (i = 0, o = M(this), a = xt(e); t = a[i++];) o.hasClass(t) ? o.removeClass(t) : o.addClass(t);
                            else void 0 !== e && "boolean" !== n || ((t = _t(this)) && Q.set(this, "__className__", t), this.setAttribute && this.setAttribute("class", t || !1 === e ? "" : Q.get(this, "__className__") || ""))
                        }))
                    },
                    hasClass: function (e) {
                        var t, n, r = 0;
                        for (t = " " + e + " "; n = this[r++];)
                            if (1 === n.nodeType && (" " + yt(_t(n)) + " ").indexOf(t) > -1) return !0;
                        return !1
                    }
                });
                var bt = /\r/g;
                M.fn.extend({
                    val: function (e) {
                        var t, n, r, i = this[0];
                        return arguments.length ? (r = v(e), this.each((function (n) {
                            var i;
                            1 === this.nodeType && (null == (i = r ? e.call(this, n, M(this).val()) : e) ? i = "" : "number" == typeof i ? i += "" : Array.isArray(i) && (i = M.map(i, (function (e) {
                                return null == e ? "" : e + ""
                            }))), (t = M.valHooks[this.type] || M.valHooks[this.nodeName.toLowerCase()]) && "set" in t && void 0 !== t.set(this, i, "value") || (this.value = i))
                        }))) : i ? (t = M.valHooks[i.type] || M.valHooks[i.nodeName.toLowerCase()]) && "get" in t && void 0 !== (n = t.get(i, "value")) ? n : "string" == typeof (n = i.value) ? n.replace(bt, "") : null == n ? "" : n : void 0
                    }
                }), M.extend({
                    valHooks: {
                        option: {
                            get: function (e) {
                                var t = M.find.attr(e, "value");
                                return null != t ? t : yt(M.text(e))
                            }
                        },
                        select: {
                            get: function (e) {
                                var t, n, r, i = e.options,
                                    o = e.selectedIndex,
                                    a = "select-one" === e.type,
                                    s = a ? null : [],
                                    c = a ? o + 1 : i.length;
                                for (r = o < 0 ? c : a ? o : 0; r < c; r++)
                                    if (((n = i[r]).selected || r === o) && !n.disabled && (!n.parentNode.disabled || !L(n.parentNode, "optgroup"))) {
                                        if (t = M(n).val(), a) return t;
                                        s.push(t)
                                    } return s
                            },
                            set: function (e, t) {
                                for (var n, r, i = e.options, o = M.makeArray(t), a = i.length; a--;)((r = i[a]).selected = M.inArray(M.valHooks.option.get(r), o) > -1) && (n = !0);
                                return n || (e.selectedIndex = -1), o
                            }
                        }
                    }
                }), M.each(["radio", "checkbox"], (function () {
                    M.valHooks[this] = {
                        set: function (e, t) {
                            if (Array.isArray(t)) return e.checked = M.inArray(M(e).val(), t) > -1
                        }
                    }, g.checkOn || (M.valHooks[this].get = function (e) {
                        return null === e.getAttribute("value") ? "on" : e.value
                    })
                })), g.focusin = "onfocusin" in n;
                var wt = /^(?:focusinfocus|focusoutblur)$/,
                    Mt = function (e) {
                        e.stopPropagation()
                    };
                M.extend(M.event, {
                    trigger: function (e, t, r, i) {
                        var o, a, s, c, l, u, h, d, f = [r || _],
                            m = p.call(e, "type") ? e.type : e,
                            g = p.call(e, "namespace") ? e.namespace.split(".") : [];
                        if (a = d = s = r = r || _, 3 !== r.nodeType && 8 !== r.nodeType && !wt.test(m + M.event.triggered) && (m.indexOf(".") > -1 && (g = m.split("."), m = g.shift(), g.sort()), l = m.indexOf(":") < 0 && "on" + m, (e = e[M.expando] ? e : new M.Event(m, "object" == typeof e && e)).isTrigger = i ? 2 : 3, e.namespace = g.join("."), e.rnamespace = e.namespace ? new RegExp("(^|\\.)" + g.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, e.result = void 0, e.target || (e.target = r), t = null == t ? [e] : M.makeArray(t, [e]), h = M.event.special[m] || {}, i || !h.trigger || !1 !== h.trigger.apply(r, t))) {
                            if (!i && !h.noBubble && !y(r)) {
                                for (c = h.delegateType || m, wt.test(c + m) || (a = a.parentNode); a; a = a.parentNode) f.push(a), s = a;
                                s === (r.ownerDocument || _) && f.push(s.defaultView || s.parentWindow || n)
                            }
                            for (o = 0;
                                (a = f[o++]) && !e.isPropagationStopped();) d = a, e.type = o > 1 ? c : h.bindType || m, (u = (Q.get(a, "events") || Object.create(null))[e.type] && Q.get(a, "handle")) && u.apply(a, t), (u = l && a[l]) && u.apply && J(a) && (e.result = u.apply(a, t), !1 === e.result && e.preventDefault());
                            return e.type = m, i || e.isDefaultPrevented() || h._default && !1 !== h._default.apply(f.pop(), t) || !J(r) || l && v(r[m]) && !y(r) && ((s = r[l]) && (r[l] = null), M.event.triggered = m, e.isPropagationStopped() && d.addEventListener(m, Mt), r[m](), e.isPropagationStopped() && d.removeEventListener(m, Mt), M.event.triggered = void 0, s && (r[l] = s)), e.result
                        }
                    },
                    simulate: function (e, t, n) {
                        var r = M.extend(new M.Event, n, {
                            type: e,
                            isSimulated: !0
                        });
                        M.event.trigger(r, null, t)
                    }
                }), M.fn.extend({
                    trigger: function (e, t) {
                        return this.each((function () {
                            M.event.trigger(e, t, this)
                        }))
                    },
                    triggerHandler: function (e, t) {
                        var n = this[0];
                        if (n) return M.event.trigger(e, t, n, !0)
                    }
                }), g.focusin || M.each({
                    focus: "focusin",
                    blur: "focusout"
                }, (function (e, t) {
                    var n = function (e) {
                        M.event.simulate(t, e.target, M.event.fix(e))
                    };
                    M.event.special[t] = {
                        setup: function () {
                            var r = this.ownerDocument || this.document || this,
                                i = Q.access(r, t);
                            i || r.addEventListener(e, n, !0), Q.access(r, t, (i || 0) + 1)
                        },
                        teardown: function () {
                            var r = this.ownerDocument || this.document || this,
                                i = Q.access(r, t) - 1;
                            i ? Q.access(r, t, i) : (r.removeEventListener(e, n, !0), Q.remove(r, t))
                        }
                    }
                }));
                var Tt = n.location,
                    St = {
                        guid: Date.now()
                    },
                    Et = /\?/;
                M.parseXML = function (e) {
                    var t;
                    if (!e || "string" != typeof e) return null;
                    try {
                        t = (new n.DOMParser).parseFromString(e, "text/xml")
                    } catch (e) {
                        t = void 0
                    }
                    return t && !t.getElementsByTagName("parsererror").length || M.error("Invalid XML: " + e), t
                };
                var At = /\[\]$/,
                    jt = /\r?\n/g,
                    Lt = /^(?:submit|button|image|reset|file)$/i,
                    Ct = /^(?:input|select|textarea|keygen)/i;

                function Pt(e, t, n, r) {
                    var i;
                    if (Array.isArray(t)) M.each(t, (function (t, i) {
                        n || At.test(e) ? r(e, i) : Pt(e + "[" + ("object" == typeof i && null != i ? t : "") + "]", i, n, r)
                    }));
                    else if (n || "object" !== w(t)) r(e, t);
                    else
                        for (i in t) Pt(e + "[" + i + "]", t[i], n, r)
                }
                M.param = function (e, t) {
                    var n, r = [],
                        i = function (e, t) {
                            var n = v(t) ? t() : t;
                            r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(null == n ? "" : n)
                        };
                    if (null == e) return "";
                    if (Array.isArray(e) || e.jquery && !M.isPlainObject(e)) M.each(e, (function () {
                        i(this.name, this.value)
                    }));
                    else
                        for (n in e) Pt(n, e[n], t, i);
                    return r.join("&")
                }, M.fn.extend({
                    serialize: function () {
                        return M.param(this.serializeArray())
                    },
                    serializeArray: function () {
                        return this.map((function () {
                            var e = M.prop(this, "elements");
                            return e ? M.makeArray(e) : this
                        })).filter((function () {
                            var e = this.type;
                            return this.name && !M(this).is(":disabled") && Ct.test(this.nodeName) && !Lt.test(e) && (this.checked || !me.test(e))
                        })).map((function (e, t) {
                            var n = M(this).val();
                            return null == n ? null : Array.isArray(n) ? M.map(n, (function (e) {
                                return {
                                    name: t.name,
                                    value: e.replace(jt, "\r\n")
                                }
                            })) : {
                                name: t.name,
                                value: n.replace(jt, "\r\n")
                            }
                        })).get()
                    }
                });
                var Ot = /%20/g,
                    Rt = /#.*$/,
                    Dt = /([?&])_=[^&]*/,
                    Nt = /^(.*?):[ \t]*([^\r\n]*)$/gm,
                    It = /^(?:GET|HEAD)$/,
                    kt = /^\/\//,
                    zt = {},
                    Bt = {},
                    Ft = "*/".concat("*"),
                    Ut = _.createElement("a");

                function Ht(e) {
                    return function (t, n) {
                        "string" != typeof t && (n = t, t = "*");
                        var r, i = 0,
                            o = t.toLowerCase().match(k) || [];
                        if (v(n))
                            for (; r = o[i++];) "+" === r[0] ? (r = r.slice(1) || "*", (e[r] = e[r] || []).unshift(n)) : (e[r] = e[r] || []).push(n)
                    }
                }

                function Gt(e, t, n, r) {
                    var i = {},
                        o = e === Bt;

                    function a(s) {
                        var c;
                        return i[s] = !0, M.each(e[s] || [], (function (e, s) {
                            var l = s(t, n, r);
                            return "string" != typeof l || o || i[l] ? o ? !(c = l) : void 0 : (t.dataTypes.unshift(l), a(l), !1)
                        })), c
                    }
                    return a(t.dataTypes[0]) || !i["*"] && a("*")
                }

                function Vt(e, t) {
                    var n, r, i = M.ajaxSettings.flatOptions || {};
                    for (n in t) void 0 !== t[n] && ((i[n] ? e : r || (r = {}))[n] = t[n]);
                    return r && M.extend(!0, e, r), e
                }
                Ut.href = Tt.href, M.extend({
                    active: 0,
                    lastModified: {},
                    etag: {},
                    ajaxSettings: {
                        url: Tt.href,
                        type: "GET",
                        isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Tt.protocol),
                        global: !0,
                        processData: !0,
                        async: !0,
                        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                        accepts: {
                            "*": Ft,
                            text: "text/plain",
                            html: "text/html",
                            xml: "application/xml, text/xml",
                            json: "application/json, text/javascript"
                        },
                        contents: {
                            xml: /\bxml\b/,
                            html: /\bhtml/,
                            json: /\bjson\b/
                        },
                        responseFields: {
                            xml: "responseXML",
                            text: "responseText",
                            json: "responseJSON"
                        },
                        converters: {
                            "* text": String,
                            "text html": !0,
                            "text json": JSON.parse,
                            "text xml": M.parseXML
                        },
                        flatOptions: {
                            url: !0,
                            context: !0
                        }
                    },
                    ajaxSetup: function (e, t) {
                        return t ? Vt(Vt(e, M.ajaxSettings), t) : Vt(M.ajaxSettings, e)
                    },
                    ajaxPrefilter: Ht(zt),
                    ajaxTransport: Ht(Bt),
                    ajax: function (e, t) {
                        "object" == typeof e && (t = e, e = void 0), t = t || {};
                        var r, i, o, a, s, c, l, u, h, d, p = M.ajaxSetup({}, t),
                            f = p.context || p,
                            m = p.context && (f.nodeType || f.jquery) ? M(f) : M.event,
                            g = M.Deferred(),
                            v = M.Callbacks("once memory"),
                            y = p.statusCode || {},
                            x = {},
                            b = {},
                            w = "canceled",
                            T = {
                                readyState: 0,
                                getResponseHeader: function (e) {
                                    var t;
                                    if (l) {
                                        if (!a)
                                            for (a = {}; t = Nt.exec(o);) a[t[1].toLowerCase() + " "] = (a[t[1].toLowerCase() + " "] || []).concat(t[2]);
                                        t = a[e.toLowerCase() + " "]
                                    }
                                    return null == t ? null : t.join(", ")
                                },
                                getAllResponseHeaders: function () {
                                    return l ? o : null
                                },
                                setRequestHeader: function (e, t) {
                                    return null == l && (e = b[e.toLowerCase()] = b[e.toLowerCase()] || e, x[e] = t), this
                                },
                                overrideMimeType: function (e) {
                                    return null == l && (p.mimeType = e), this
                                },
                                statusCode: function (e) {
                                    var t;
                                    if (e)
                                        if (l) T.always(e[T.status]);
                                        else
                                            for (t in e) y[t] = [y[t], e[t]];
                                    return this
                                },
                                abort: function (e) {
                                    var t = e || w;
                                    return r && r.abort(t), S(0, t), this
                                }
                            };
                        if (g.promise(T), p.url = ((e || p.url || Tt.href) + "").replace(kt, Tt.protocol + "//"), p.type = t.method || t.type || p.method || p.type, p.dataTypes = (p.dataType || "*").toLowerCase().match(k) || [""], null == p.crossDomain) {
                            c = _.createElement("a");
                            try {
                                c.href = p.url, c.href = c.href, p.crossDomain = Ut.protocol + "//" + Ut.host != c.protocol + "//" + c.host
                            } catch (e) {
                                p.crossDomain = !0
                            }
                        }
                        if (p.data && p.processData && "string" != typeof p.data && (p.data = M.param(p.data, p.traditional)), Gt(zt, p, t, T), l) return T;
                        for (h in (u = M.event && p.global) && 0 == M.active++ && M.event.trigger("ajaxStart"), p.type = p.type.toUpperCase(), p.hasContent = !It.test(p.type), i = p.url.replace(Rt, ""), p.hasContent ? p.data && p.processData && 0 === (p.contentType || "").indexOf("application/x-www-form-urlencoded") && (p.data = p.data.replace(Ot, "+")) : (d = p.url.slice(i.length), p.data && (p.processData || "string" == typeof p.data) && (i += (Et.test(i) ? "&" : "?") + p.data, delete p.data), !1 === p.cache && (i = i.replace(Dt, "$1"), d = (Et.test(i) ? "&" : "?") + "_=" + St.guid++ + d), p.url = i + d), p.ifModified && (M.lastModified[i] && T.setRequestHeader("If-Modified-Since", M.lastModified[i]), M.etag[i] && T.setRequestHeader("If-None-Match", M.etag[i])), (p.data && p.hasContent && !1 !== p.contentType || t.contentType) && T.setRequestHeader("Content-Type", p.contentType), T.setRequestHeader("Accept", p.dataTypes[0] && p.accepts[p.dataTypes[0]] ? p.accepts[p.dataTypes[0]] + ("*" !== p.dataTypes[0] ? ", " + Ft + "; q=0.01" : "") : p.accepts["*"]), p.headers) T.setRequestHeader(h, p.headers[h]);
                        if (p.beforeSend && (!1 === p.beforeSend.call(f, T, p) || l)) return T.abort();
                        if (w = "abort", v.add(p.complete), T.done(p.success), T.fail(p.error), r = Gt(Bt, p, t, T)) {
                            if (T.readyState = 1, u && m.trigger("ajaxSend", [T, p]), l) return T;
                            p.async && p.timeout > 0 && (s = n.setTimeout((function () {
                                T.abort("timeout")
                            }), p.timeout));
                            try {
                                l = !1, r.send(x, S)
                            } catch (e) {
                                if (l) throw e;
                                S(-1, e)
                            }
                        } else S(-1, "No Transport");

                        function S(e, t, a, c) {
                            var h, d, _, x, b, w = t;
                            l || (l = !0, s && n.clearTimeout(s), r = void 0, o = c || "", T.readyState = e > 0 ? 4 : 0, h = e >= 200 && e < 300 || 304 === e, a && (x = function (e, t, n) {
                                for (var r, i, o, a, s = e.contents, c = e.dataTypes;
                                    "*" === c[0];) c.shift(), void 0 === r && (r = e.mimeType || t.getResponseHeader("Content-Type"));
                                if (r)
                                    for (i in s)
                                        if (s[i] && s[i].test(r)) {
                                            c.unshift(i);
                                            break
                                        } if (c[0] in n) o = c[0];
                                else {
                                    for (i in n) {
                                        if (!c[0] || e.converters[i + " " + c[0]]) {
                                            o = i;
                                            break
                                        }
                                        a || (a = i)
                                    }
                                    o = o || a
                                }
                                if (o) return o !== c[0] && c.unshift(o), n[o]
                            }(p, T, a)), !h && M.inArray("script", p.dataTypes) > -1 && (p.converters["text script"] = function () {}), x = function (e, t, n, r) {
                                var i, o, a, s, c, l = {},
                                    u = e.dataTypes.slice();
                                if (u[1])
                                    for (a in e.converters) l[a.toLowerCase()] = e.converters[a];
                                for (o = u.shift(); o;)
                                    if (e.responseFields[o] && (n[e.responseFields[o]] = t), !c && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), c = o, o = u.shift())
                                        if ("*" === o) o = c;
                                        else if ("*" !== c && c !== o) {
                                    if (!(a = l[c + " " + o] || l["* " + o]))
                                        for (i in l)
                                            if ((s = i.split(" "))[1] === o && (a = l[c + " " + s[0]] || l["* " + s[0]])) {
                                                !0 === a ? a = l[i] : !0 !== l[i] && (o = s[0], u.unshift(s[1]));
                                                break
                                            } if (!0 !== a)
                                        if (a && e.throws) t = a(t);
                                        else try {
                                            t = a(t)
                                        } catch (e) {
                                            return {
                                                state: "parsererror",
                                                error: a ? e : "No conversion from " + c + " to " + o
                                            }
                                        }
                                }
                                return {
                                    state: "success",
                                    data: t
                                }
                            }(p, x, T, h), h ? (p.ifModified && ((b = T.getResponseHeader("Last-Modified")) && (M.lastModified[i] = b), (b = T.getResponseHeader("etag")) && (M.etag[i] = b)), 204 === e || "HEAD" === p.type ? w = "nocontent" : 304 === e ? w = "notmodified" : (w = x.state, d = x.data, h = !(_ = x.error))) : (_ = w, !e && w || (w = "error", e < 0 && (e = 0))), T.status = e, T.statusText = (t || w) + "", h ? g.resolveWith(f, [d, w, T]) : g.rejectWith(f, [T, w, _]), T.statusCode(y), y = void 0, u && m.trigger(h ? "ajaxSuccess" : "ajaxError", [T, p, h ? d : _]), v.fireWith(f, [T, w]), u && (m.trigger("ajaxComplete", [T, p]), --M.active || M.event.trigger("ajaxStop")))
                        }
                        return T
                    },
                    getJSON: function (e, t, n) {
                        return M.get(e, t, n, "json")
                    },
                    getScript: function (e, t) {
                        return M.get(e, void 0, t, "script")
                    }
                }), M.each(["get", "post"], (function (e, t) {
                    M[t] = function (e, n, r, i) {
                        return v(n) && (i = i || r, r = n, n = void 0), M.ajax(M.extend({
                            url: e,
                            type: t,
                            dataType: i,
                            data: n,
                            success: r
                        }, M.isPlainObject(e) && e))
                    }
                })), M.ajaxPrefilter((function (e) {
                    var t;
                    for (t in e.headers) "content-type" === t.toLowerCase() && (e.contentType = e.headers[t] || "")
                })), M._evalUrl = function (e, t, n) {
                    return M.ajax({
                        url: e,
                        type: "GET",
                        dataType: "script",
                        cache: !0,
                        async: !1,
                        global: !1,
                        converters: {
                            "text script": function () {}
                        },
                        dataFilter: function (e) {
                            M.globalEval(e, t, n)
                        }
                    })
                }, M.fn.extend({
                    wrapAll: function (e) {
                        var t;
                        return this[0] && (v(e) && (e = e.call(this[0])), t = M(e, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && t.insertBefore(this[0]), t.map((function () {
                            for (var e = this; e.firstElementChild;) e = e.firstElementChild;
                            return e
                        })).append(this)), this
                    },
                    wrapInner: function (e) {
                        return v(e) ? this.each((function (t) {
                            M(this).wrapInner(e.call(this, t))
                        })) : this.each((function () {
                            var t = M(this),
                                n = t.contents();
                            n.length ? n.wrapAll(e) : t.append(e)
                        }))
                    },
                    wrap: function (e) {
                        var t = v(e);
                        return this.each((function (n) {
                            M(this).wrapAll(t ? e.call(this, n) : e)
                        }))
                    },
                    unwrap: function (e) {
                        return this.parent(e).not("body").each((function () {
                            M(this).replaceWith(this.childNodes)
                        })), this
                    }
                }), M.expr.pseudos.hidden = function (e) {
                    return !M.expr.pseudos.visible(e)
                }, M.expr.pseudos.visible = function (e) {
                    return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length)
                }, M.ajaxSettings.xhr = function () {
                    try {
                        return new n.XMLHttpRequest
                    } catch (e) {}
                };
                var Wt = {
                        0: 200,
                        1223: 204
                    },
                    qt = M.ajaxSettings.xhr();
                g.cors = !!qt && "withCredentials" in qt, g.ajax = qt = !!qt, M.ajaxTransport((function (e) {
                    var t, r;
                    if (g.cors || qt && !e.crossDomain) return {
                        send: function (i, o) {
                            var a, s = e.xhr();
                            if (s.open(e.type, e.url, e.async, e.username, e.password), e.xhrFields)
                                for (a in e.xhrFields) s[a] = e.xhrFields[a];
                            for (a in e.mimeType && s.overrideMimeType && s.overrideMimeType(e.mimeType), e.crossDomain || i["X-Requested-With"] || (i["X-Requested-With"] = "XMLHttpRequest"), i) s.setRequestHeader(a, i[a]);
                            t = function (e) {
                                return function () {
                                    t && (t = r = s.onload = s.onerror = s.onabort = s.ontimeout = s.onreadystatechange = null, "abort" === e ? s.abort() : "error" === e ? "number" != typeof s.status ? o(0, "error") : o(s.status, s.statusText) : o(Wt[s.status] || s.status, s.statusText, "text" !== (s.responseType || "text") || "string" != typeof s.responseText ? {
                                        binary: s.response
                                    } : {
                                        text: s.responseText
                                    }, s.getAllResponseHeaders()))
                                }
                            }, s.onload = t(), r = s.onerror = s.ontimeout = t("error"), void 0 !== s.onabort ? s.onabort = r : s.onreadystatechange = function () {
                                4 === s.readyState && n.setTimeout((function () {
                                    t && r()
                                }))
                            }, t = t("abort");
                            try {
                                s.send(e.hasContent && e.data || null)
                            } catch (e) {
                                if (t) throw e
                            }
                        },
                        abort: function () {
                            t && t()
                        }
                    }
                })), M.ajaxPrefilter((function (e) {
                    e.crossDomain && (e.contents.script = !1)
                })), M.ajaxSetup({
                    accepts: {
                        script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
                    },
                    contents: {
                        script: /\b(?:java|ecma)script\b/
                    },
                    converters: {
                        "text script": function (e) {
                            return M.globalEval(e), e
                        }
                    }
                }), M.ajaxPrefilter("script", (function (e) {
                    void 0 === e.cache && (e.cache = !1), e.crossDomain && (e.type = "GET")
                })), M.ajaxTransport("script", (function (e) {
                    var t, n;
                    if (e.crossDomain || e.scriptAttrs) return {
                        send: function (r, i) {
                            t = M("<script>").attr(e.scriptAttrs || {}).prop({
                                charset: e.scriptCharset,
                                src: e.url
                            }).on("load error", n = function (e) {
                                t.remove(), n = null, e && i("error" === e.type ? 404 : 200, e.type)
                            }), _.head.appendChild(t[0])
                        },
                        abort: function () {
                            n && n()
                        }
                    }
                }));
                var Xt, Yt = [],
                    Jt = /(=)\?(?=&|$)|\?\?/;
                M.ajaxSetup({
                    jsonp: "callback",
                    jsonpCallback: function () {
                        var e = Yt.pop() || M.expando + "_" + St.guid++;
                        return this[e] = !0, e
                    }
                }), M.ajaxPrefilter("json jsonp", (function (e, t, r) {
                    var i, o, a, s = !1 !== e.jsonp && (Jt.test(e.url) ? "url" : "string" == typeof e.data && 0 === (e.contentType || "").indexOf("application/x-www-form-urlencoded") && Jt.test(e.data) && "data");
                    if (s || "jsonp" === e.dataTypes[0]) return i = e.jsonpCallback = v(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback, s ? e[s] = e[s].replace(Jt, "$1" + i) : !1 !== e.jsonp && (e.url += (Et.test(e.url) ? "&" : "?") + e.jsonp + "=" + i), e.converters["script json"] = function () {
                        return a || M.error(i + " was not called"), a[0]
                    }, e.dataTypes[0] = "json", o = n[i], n[i] = function () {
                        a = arguments
                    }, r.always((function () {
                        void 0 === o ? M(n).removeProp(i) : n[i] = o, e[i] && (e.jsonpCallback = t.jsonpCallback, Yt.push(i)), a && v(o) && o(a[0]), a = o = void 0
                    })), "script"
                })), g.createHTMLDocument = ((Xt = _.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>", 2 === Xt.childNodes.length), M.parseHTML = function (e, t, n) {
                    return "string" != typeof e ? [] : ("boolean" == typeof t && (n = t, t = !1), t || (g.createHTMLDocument ? ((r = (t = _.implementation.createHTMLDocument("")).createElement("base")).href = _.location.href, t.head.appendChild(r)) : t = _), o = !n && [], (i = C.exec(e)) ? [t.createElement(i[1])] : (i = we([e], t, o), o && o.length && M(o).remove(), M.merge([], i.childNodes)));
                    var r, i, o
                }, M.fn.load = function (e, t, n) {
                    var r, i, o, a = this,
                        s = e.indexOf(" ");
                    return s > -1 && (r = yt(e.slice(s)), e = e.slice(0, s)), v(t) ? (n = t, t = void 0) : t && "object" == typeof t && (i = "POST"), a.length > 0 && M.ajax({
                        url: e,
                        type: i || "GET",
                        dataType: "html",
                        data: t
                    }).done((function (e) {
                        o = arguments, a.html(r ? M("<div>").append(M.parseHTML(e)).find(r) : e)
                    })).always(n && function (e, t) {
                        a.each((function () {
                            n.apply(this, o || [e.responseText, t, e])
                        }))
                    }), this
                }, M.expr.pseudos.animated = function (e) {
                    return M.grep(M.timers, (function (t) {
                        return e === t.elem
                    })).length
                }, M.offset = {
                    setOffset: function (e, t, n) {
                        var r, i, o, a, s, c, l = M.css(e, "position"),
                            u = M(e),
                            h = {};
                        "static" === l && (e.style.position = "relative"), s = u.offset(), o = M.css(e, "top"), c = M.css(e, "left"), ("absolute" === l || "fixed" === l) && (o + c).indexOf("auto") > -1 ? (a = (r = u.position()).top, i = r.left) : (a = parseFloat(o) || 0, i = parseFloat(c) || 0), v(t) && (t = t.call(e, n, M.extend({}, s))), null != t.top && (h.top = t.top - s.top + a), null != t.left && (h.left = t.left - s.left + i), "using" in t ? t.using.call(e, h) : ("number" == typeof h.top && (h.top += "px"), "number" == typeof h.left && (h.left += "px"), u.css(h))
                    }
                }, M.fn.extend({
                    offset: function (e) {
                        if (arguments.length) return void 0 === e ? this : this.each((function (t) {
                            M.offset.setOffset(this, e, t)
                        }));
                        var t, n, r = this[0];
                        return r ? r.getClientRects().length ? (t = r.getBoundingClientRect(), n = r.ownerDocument.defaultView, {
                            top: t.top + n.pageYOffset,
                            left: t.left + n.pageXOffset
                        }) : {
                            top: 0,
                            left: 0
                        } : void 0
                    },
                    position: function () {
                        if (this[0]) {
                            var e, t, n, r = this[0],
                                i = {
                                    top: 0,
                                    left: 0
                                };
                            if ("fixed" === M.css(r, "position")) t = r.getBoundingClientRect();
                            else {
                                for (t = this.offset(), n = r.ownerDocument, e = r.offsetParent || n.documentElement; e && (e === n.body || e === n.documentElement) && "static" === M.css(e, "position");) e = e.parentNode;
                                e && e !== r && 1 === e.nodeType && ((i = M(e).offset()).top += M.css(e, "borderTopWidth", !0), i.left += M.css(e, "borderLeftWidth", !0))
                            }
                            return {
                                top: t.top - i.top - M.css(r, "marginTop", !0),
                                left: t.left - i.left - M.css(r, "marginLeft", !0)
                            }
                        }
                    },
                    offsetParent: function () {
                        return this.map((function () {
                            for (var e = this.offsetParent; e && "static" === M.css(e, "position");) e = e.offsetParent;
                            return e || oe
                        }))
                    }
                }), M.each({
                    scrollLeft: "pageXOffset",
                    scrollTop: "pageYOffset"
                }, (function (e, t) {
                    var n = "pageYOffset" === t;
                    M.fn[e] = function (r) {
                        return V(this, (function (e, r, i) {
                            var o;
                            if (y(e) ? o = e : 9 === e.nodeType && (o = e.defaultView), void 0 === i) return o ? o[t] : e[r];
                            o ? o.scrollTo(n ? o.pageXOffset : i, n ? i : o.pageYOffset) : e[r] = i
                        }), e, r, arguments.length)
                    }
                })), M.each(["top", "left"], (function (e, t) {
                    M.cssHooks[t] = qe(g.pixelPosition, (function (e, n) {
                        if (n) return n = We(e, t), Ue.test(n) ? M(e).position()[t] + "px" : n
                    }))
                })), M.each({
                    Height: "height",
                    Width: "width"
                }, (function (e, t) {
                    M.each({
                        padding: "inner" + e,
                        content: t,
                        "": "outer" + e
                    }, (function (n, r) {
                        M.fn[r] = function (i, o) {
                            var a = arguments.length && (n || "boolean" != typeof i),
                                s = n || (!0 === i || !0 === o ? "margin" : "border");
                            return V(this, (function (t, n, i) {
                                var o;
                                return y(t) ? 0 === r.indexOf("outer") ? t["inner" + e] : t.document.documentElement["client" + e] : 9 === t.nodeType ? (o = t.documentElement, Math.max(t.body["scroll" + e], o["scroll" + e], t.body["offset" + e], o["offset" + e], o["client" + e])) : void 0 === i ? M.css(t, n, s) : M.style(t, n, i, s)
                            }), t, a ? i : void 0, a)
                        }
                    }))
                })), M.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], (function (e, t) {
                    M.fn[t] = function (e) {
                        return this.on(t, e)
                    }
                })), M.fn.extend({
                    bind: function (e, t, n) {
                        return this.on(e, null, t, n)
                    },
                    unbind: function (e, t) {
                        return this.off(e, null, t)
                    },
                    delegate: function (e, t, n, r) {
                        return this.on(t, e, n, r)
                    },
                    undelegate: function (e, t, n) {
                        return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n)
                    },
                    hover: function (e, t) {
                        return this.mouseenter(e).mouseleave(t || e)
                    }
                }), M.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), (function (e, t) {
                    M.fn[t] = function (e, n) {
                        return arguments.length > 0 ? this.on(t, null, e, n) : this.trigger(t)
                    }
                }));
                var Zt = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
                M.proxy = function (e, t) {
                    var n, r, i;
                    if ("string" == typeof t && (n = e[t], t = e, e = n), v(e)) return r = s.call(arguments, 2), (i = function () {
                        return e.apply(t || this, r.concat(s.call(arguments)))
                    }).guid = e.guid = e.guid || M.guid++, i
                }, M.holdReady = function (e) {
                    e ? M.readyWait++ : M.ready(!0)
                }, M.isArray = Array.isArray, M.parseJSON = JSON.parse, M.nodeName = L, M.isFunction = v, M.isWindow = y, M.camelCase = Y, M.type = w, M.now = Date.now, M.isNumeric = function (e) {
                    var t = M.type(e);
                    return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e))
                }, M.trim = function (e) {
                    return null == e ? "" : (e + "").replace(Zt, "")
                }, void 0 === (r = function () {
                    return M
                }.apply(t, [])) || (e.exports = r);
                var Qt = n.jQuery,
                    $t = n.$;
                return M.noConflict = function (e) {
                    return n.$ === M && (n.$ = $t), e && n.jQuery === M && (n.jQuery = Qt), M
                }, void 0 === i && (n.jQuery = n.$ = M), M
            }))
        },
        "./node_modules/lodash-es/_Symbol.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/lodash-es/_root.js").a.Symbol;
            t.a = r
        },
        "./node_modules/lodash-es/_baseClamp.js": function (e, t, n) {
            "use strict";
            t.a = function (e, t, n) {
                return e == e && (void 0 !== n && (e = e <= n ? e : n), void 0 !== t && (e = e >= t ? e : t)), e
            }
        },
        "./node_modules/lodash-es/_baseGetTag.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/lodash-es/_Symbol.js"),
                i = n("./node_modules/lodash-es/_getRawTag.js"),
                o = n("./node_modules/lodash-es/_objectToString.js"),
                a = r.a ? r.a.toStringTag : void 0;
            t.a = function (e) {
                return null == e ? void 0 === e ? "[object Undefined]" : "[object Null]" : a && a in Object(e) ? Object(i.a)(e) : Object(o.a)(e)
            }
        },
        "./node_modules/lodash-es/_freeGlobal.js": function (e, t, n) {
            "use strict";
            (function (e) {
                var n = "object" == typeof e && e && e.Object === Object && e;
                t.a = n
            }).call(this, n("./node_modules/webpack/buildin/global.js"))
        },
        "./node_modules/lodash-es/_getRawTag.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/lodash-es/_Symbol.js"),
                i = Object.prototype,
                o = i.hasOwnProperty,
                a = i.toString,
                s = r.a ? r.a.toStringTag : void 0;
            t.a = function (e) {
                var t = o.call(e, s),
                    n = e[s];
                try {
                    e[s] = void 0;
                    var r = !0
                } catch (e) {}
                var i = a.call(e);
                return r && (t ? e[s] = n : delete e[s]), i
            }
        },
        "./node_modules/lodash-es/_objectToString.js": function (e, t, n) {
            "use strict";
            var r = Object.prototype.toString;
            t.a = function (e) {
                return r.call(e)
            }
        },
        "./node_modules/lodash-es/_root.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/lodash-es/_freeGlobal.js"),
                i = "object" == typeof self && self && self.Object === Object && self,
                o = r.a || i || Function("return this")();
            t.a = o
        },
        "./node_modules/lodash-es/clamp.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/lodash-es/_baseClamp.js"),
                i = n("./node_modules/lodash-es/toNumber.js");
            t.a = function (e, t, n) {
                return void 0 === n && (n = t, t = void 0), void 0 !== n && (n = (n = Object(i.a)(n)) == n ? n : 0), void 0 !== t && (t = (t = Object(i.a)(t)) == t ? t : 0), Object(r.a)(Object(i.a)(e), t, n)
            }
        },
        "./node_modules/lodash-es/debounce.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/lodash-es/isObject.js"),
                i = n("./node_modules/lodash-es/now.js"),
                o = n("./node_modules/lodash-es/toNumber.js"),
                a = Math.max,
                s = Math.min;
            t.a = function (e, t, n) {
                var c, l, u, h, d, p, f = 0,
                    m = !1,
                    g = !1,
                    v = !0;
                if ("function" != typeof e) throw new TypeError("Expected a function");

                function y(t) {
                    var n = c,
                        r = l;
                    return c = l = void 0, f = t, h = e.apply(r, n)
                }

                function _(e) {
                    return f = e, d = setTimeout(b, t), m ? y(e) : h
                }

                function x(e) {
                    var n = e - p;
                    return void 0 === p || n >= t || n < 0 || g && e - f >= u
                }

                function b() {
                    var e = Object(i.a)();
                    if (x(e)) return w(e);
                    d = setTimeout(b, function (e) {
                        var n = t - (e - p);
                        return g ? s(n, u - (e - f)) : n
                    }(e))
                }

                function w(e) {
                    return d = void 0, v && c ? y(e) : (c = l = void 0, h)
                }

                function M() {
                    var e = Object(i.a)(),
                        n = x(e);
                    if (c = arguments, l = this, p = e, n) {
                        if (void 0 === d) return _(p);
                        if (g) return clearTimeout(d), d = setTimeout(b, t), y(p)
                    }
                    return void 0 === d && (d = setTimeout(b, t)), h
                }
                return t = Object(o.a)(t) || 0, Object(r.a)(n) && (m = !!n.leading, u = (g = "maxWait" in n) ? a(Object(o.a)(n.maxWait) || 0, t) : u, v = "trailing" in n ? !!n.trailing : v), M.cancel = function () {
                    void 0 !== d && clearTimeout(d), f = 0, c = p = l = d = void 0
                }, M.flush = function () {
                    return void 0 === d ? h : w(Object(i.a)())
                }, M
            }
        },
        "./node_modules/lodash-es/isObject.js": function (e, t, n) {
            "use strict";
            t.a = function (e) {
                var t = typeof e;
                return null != e && ("object" == t || "function" == t)
            }
        },
        "./node_modules/lodash-es/isObjectLike.js": function (e, t, n) {
            "use strict";
            t.a = function (e) {
                return null != e && "object" == typeof e
            }
        },
        "./node_modules/lodash-es/isSymbol.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/lodash-es/_baseGetTag.js"),
                i = n("./node_modules/lodash-es/isObjectLike.js");
            t.a = function (e) {
                return "symbol" == typeof e || Object(i.a)(e) && "[object Symbol]" == Object(r.a)(e)
            }
        },
        "./node_modules/lodash-es/now.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/lodash-es/_root.js");
            t.a = function () {
                return r.a.Date.now()
            }
        },
        "./node_modules/lodash-es/toNumber.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/lodash-es/isObject.js"),
                i = n("./node_modules/lodash-es/isSymbol.js"),
                o = /^\s+|\s+$/g,
                a = /^[-+]0x[0-9a-f]+$/i,
                s = /^0b[01]+$/i,
                c = /^0o[0-7]+$/i,
                l = parseInt;
            t.a = function (e) {
                if ("number" == typeof e) return e;
                if (Object(i.a)(e)) return NaN;
                if (Object(r.a)(e)) {
                    var t = "function" == typeof e.valueOf ? e.valueOf() : e;
                    e = Object(r.a)(t) ? t + "" : t
                }
                if ("string" != typeof e) return 0 === e ? e : +e;
                e = e.replace(o, "");
                var n = s.test(e);
                return n || c.test(e) ? l(e.slice(2), n ? 2 : 8) : a.test(e) ? NaN : +e
            }
        },
        "./node_modules/smooth-scrollbar/decorators/boolean.js": function (e, t, n) {
            "use strict";

            function r(e, t) {
                var n = "_" + t;
                Object.defineProperty(e, t, {
                    get: function () {
                        return this[n]
                    },
                    set: function (e) {
                        Object.defineProperty(this, n, {
                            value: !!e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        })
                    },
                    enumerable: !0,
                    configurable: !0
                })
            }
            n.d(t, "a", (function () {
                return r
            }))
        },
        "./node_modules/smooth-scrollbar/decorators/debounce.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return o
            }));
            var r = n("./node_modules/tslib/tslib.es6.js"),
                i = n("./node_modules/lodash-es/debounce.js");

            function o() {
                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                return function (t, n, o) {
                    var a = o.value;
                    return {
                        get: function () {
                            return this.hasOwnProperty(n) || Object.defineProperty(this, n, {
                                value: i.a.apply(void 0, Object(r.d)([a], e))
                            }), this[n]
                        }
                    }
                }
            }
        },
        "./node_modules/smooth-scrollbar/decorators/index.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/smooth-scrollbar/decorators/range.js");
            n.d(t, "c", (function () {
                return r.a
            }));
            var i = n("./node_modules/smooth-scrollbar/decorators/boolean.js");
            n.d(t, "a", (function () {
                return i.a
            }));
            var o = n("./node_modules/smooth-scrollbar/decorators/debounce.js");
            n.d(t, "b", (function () {
                return o.a
            }))
        },
        "./node_modules/smooth-scrollbar/decorators/range.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return i
            }));
            var r = n("./node_modules/lodash-es/clamp.js");

            function i(e, t) {
                return void 0 === e && (e = -1 / 0), void 0 === t && (t = 1 / 0),
                    function (n, i) {
                        var o = "_" + i;
                        Object.defineProperty(n, i, {
                            get: function () {
                                return this[o]
                            },
                            set: function (n) {
                                Object.defineProperty(this, o, {
                                    value: Object(r.a)(n, e, t),
                                    enumerable: !1,
                                    writable: !0,
                                    configurable: !0
                                })
                            },
                            enumerable: !0,
                            configurable: !0
                        })
                    }
            }
        },
        "./node_modules/smooth-scrollbar/events/index.js": function (e, t, n) {
            "use strict";
            n.r(t);
            var r = n("./node_modules/smooth-scrollbar/events/keyboard.js");
            n.d(t, "keyboardHandler", (function () {
                return r.a
            }));
            var i = n("./node_modules/smooth-scrollbar/events/mouse.js");
            n.d(t, "mouseHandler", (function () {
                return i.a
            }));
            var o = n("./node_modules/smooth-scrollbar/events/resize.js");
            n.d(t, "resizeHandler", (function () {
                return o.a
            }));
            var a = n("./node_modules/smooth-scrollbar/events/select.js");
            n.d(t, "selectHandler", (function () {
                return a.a
            }));
            var s = n("./node_modules/smooth-scrollbar/events/touch.js");
            n.d(t, "touchHandler", (function () {
                return s.a
            }));
            var c = n("./node_modules/smooth-scrollbar/events/wheel.js");
            n.d(t, "wheelHandler", (function () {
                return c.a
            }))
        },
        "./node_modules/smooth-scrollbar/events/keyboard.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return o
            }));
            var r, i = n("./node_modules/smooth-scrollbar/utils/index.js");

            function o(e) {
                var t = Object(i.c)(e),
                    n = e.containerEl;
                t(n, "keydown", (function (t) {
                    var i = document.activeElement;
                    if ((i === n || n.contains(i)) && ! function (e) {
                            if ("INPUT" === e.tagName || "SELECT" === e.tagName || "TEXTAREA" === e.tagName || e.isContentEditable) return !e.disabled;
                            return !1
                        }(i)) {
                        var o = function (e, t) {
                            var n = e.size,
                                i = e.limit,
                                o = e.offset;
                            switch (t) {
                                case r.TAB:
                                    return function (e) {
                                        requestAnimationFrame((function () {
                                            e.scrollIntoView(document.activeElement, {
                                                offsetTop: e.size.container.height / 2,
                                                onlyScrollIfNeeded: !0
                                            })
                                        }))
                                    }(e);
                                case r.SPACE:
                                    return [0, 200];
                                case r.PAGE_UP:
                                    return [0, 40 - n.container.height];
                                case r.PAGE_DOWN:
                                    return [0, n.container.height - 40];
                                case r.END:
                                    return [0, i.y - o.y];
                                case r.HOME:
                                    return [0, -o.y];
                                case r.LEFT:
                                    return [-40, 0];
                                case r.UP:
                                    return [0, -40];
                                case r.RIGHT:
                                    return [40, 0];
                                case r.DOWN:
                                    return [0, 40];
                                default:
                                    return null
                            }
                        }(e, t.keyCode || t.which);
                        if (o) {
                            var a = o[0],
                                s = o[1];
                            e.addTransformableMomentum(a, s, t, (function (n) {
                                n ? t.preventDefault() : (e.containerEl.blur(), e.parent && e.parent.containerEl.focus())
                            }))
                        }
                    }
                }))
            }! function (e) {
                e[e.TAB = 9] = "TAB", e[e.SPACE = 32] = "SPACE", e[e.PAGE_UP = 33] = "PAGE_UP", e[e.PAGE_DOWN = 34] = "PAGE_DOWN", e[e.END = 35] = "END", e[e.HOME = 36] = "HOME", e[e.LEFT = 37] = "LEFT", e[e.UP = 38] = "UP", e[e.RIGHT = 39] = "RIGHT", e[e.DOWN = 40] = "DOWN"
            }(r || (r = {}))
        },
        "./node_modules/smooth-scrollbar/events/mouse.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return a
            }));
            var r, i = n("./node_modules/lodash-es/clamp.js"),
                o = n("./node_modules/smooth-scrollbar/utils/index.js");

            function a(e) {
                var t, n, a, s, c, l = Object(o.c)(e),
                    u = e.containerEl,
                    h = e.track,
                    d = h.xAxis,
                    p = h.yAxis;

                function f(t, n) {
                    var i = e.size;
                    return t === r.X ? n / (i.container.width + (d.thumb.realSize - d.thumb.displaySize)) * i.content.width : t === r.Y ? n / (i.container.height + (p.thumb.realSize - p.thumb.displaySize)) * i.content.height : 0
                }

                function m(e) {
                    return Object(o.e)(e, [d.element, d.thumb.element]) ? r.X : Object(o.e)(e, [p.element, p.thumb.element]) ? r.Y : void 0
                }
                l(u, "click", (function (t) {
                    if (!n && Object(o.e)(t.target, [d.element, p.element])) {
                        var a = t.target,
                            s = m(a),
                            c = a.getBoundingClientRect(),
                            l = Object(o.d)(t),
                            u = e.offset,
                            h = e.limit;
                        if (s === r.X) {
                            var g = l.x - c.left - d.thumb.displaySize / 2;
                            e.setMomentum(Object(i.a)(f(s, g) - u.x, -u.x, h.x - u.x), 0)
                        }
                        if (s === r.Y) {
                            g = l.y - c.top - p.thumb.displaySize / 2;
                            e.setMomentum(0, Object(i.a)(f(s, g) - u.y, -u.y, h.y - u.y))
                        }
                    }
                })), l(u, "mousedown", (function (n) {
                    if (Object(o.e)(n.target, [d.thumb.element, p.thumb.element])) {
                        t = !0;
                        var r = n.target,
                            i = Object(o.d)(n),
                            l = r.getBoundingClientRect();
                        s = m(r), a = {
                            x: i.x - l.left,
                            y: i.y - l.top
                        }, c = u.getBoundingClientRect(), Object(o.f)(e.containerEl, {
                            "-user-select": "none"
                        })
                    }
                })), l(window, "mousemove", (function (i) {
                    if (t) {
                        n = !0;
                        var l = e.offset,
                            u = Object(o.d)(i);
                        if (s === r.X) {
                            var h = u.x - a.x - c.left;
                            e.setPosition(f(s, h), l.y)
                        }
                        if (s === r.Y) {
                            h = u.y - a.y - c.top;
                            e.setPosition(l.x, f(s, h))
                        }
                    }
                })), l(window, "mouseup blur", (function () {
                    t = n = !1, Object(o.f)(e.containerEl, {
                        "-user-select": ""
                    })
                }))
            }! function (e) {
                e[e.X = 0] = "X", e[e.Y = 1] = "Y"
            }(r || (r = {}))
        },
        "./node_modules/smooth-scrollbar/events/resize.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return o
            }));
            var r = n("./node_modules/lodash-es/debounce.js"),
                i = n("./node_modules/smooth-scrollbar/utils/index.js");

            function o(e) {
                Object(i.c)(e)(window, "resize", Object(r.a)(e.update.bind(e), 300))
            }
        },
        "./node_modules/smooth-scrollbar/events/select.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return o
            }));
            var r = n("./node_modules/lodash-es/clamp.js"),
                i = n("./node_modules/smooth-scrollbar/utils/index.js");

            function o(e) {
                var t, n = Object(i.c)(e),
                    o = e.containerEl,
                    a = e.contentEl,
                    s = e.offset,
                    c = e.limit,
                    l = !1;
                n(window, "mousemove", (function (n) {
                    l && (cancelAnimationFrame(t), function n(i) {
                        var o = i.x,
                            a = i.y;
                        (o || a) && (e.setMomentum(Object(r.a)(s.x + o, 0, c.x) - s.x, Object(r.a)(s.y + a, 0, c.y) - s.y), t = requestAnimationFrame((function () {
                            n({
                                x: o,
                                y: a
                            })
                        })))
                    }(function (e, t) {
                        var n = e.bounding,
                            r = n.top,
                            o = n.right,
                            a = n.bottom,
                            s = n.left,
                            c = Object(i.d)(t),
                            l = c.x,
                            u = c.y,
                            h = {
                                x: 0,
                                y: 0
                            };
                        if (0 === l && 0 === u) return h;
                        l > o - 20 ? h.x = l - o + 20 : l < s + 20 && (h.x = l - s - 20);
                        u > a - 20 ? h.y = u - a + 20 : u < r + 20 && (h.y = u - r - 20);
                        return h.x *= 2, h.y *= 2, h
                    }(e, n)))
                })), n(a, "selectstart", (function (e) {
                    e.stopPropagation(), cancelAnimationFrame(t), l = !0
                })), n(window, "mouseup blur", (function () {
                    cancelAnimationFrame(t), l = !1
                })), n(o, "scroll", (function (e) {
                    e.preventDefault(), o.scrollTop = o.scrollLeft = 0
                }))
            }
        },
        "./node_modules/smooth-scrollbar/events/touch.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return o
            }));
            var r, i = n("./node_modules/smooth-scrollbar/utils/index.js");

            function o(e) {
                var t, n = /Android/.test(navigator.userAgent) ? 3 : 2,
                    o = e.options.delegateTo || e.containerEl,
                    a = new i.a,
                    s = Object(i.c)(e),
                    c = 0;
                s(o, "touchstart", (function (n) {
                    a.track(n), e.setMomentum(0, 0), 0 === c && (t = e.options.damping, e.options.damping = Math.max(t, .5)), c++
                })), s(o, "touchmove", (function (t) {
                    if (!r || r === e) {
                        a.update(t);
                        var n = a.getDelta(),
                            i = n.x,
                            o = n.y;
                        e.addTransformableMomentum(i, o, t, (function (n) {
                            n && (t.preventDefault(), r = e)
                        }))
                    }
                })), s(o, "touchcancel touchend", (function (i) {
                    var o = a.getVelocity(),
                        s = {
                            x: 0,
                            y: 0
                        };
                    Object.keys(o).forEach((function (e) {
                        var r = o[e] / t;
                        s[e] = Math.abs(r) < 50 ? 0 : r * n
                    })), e.addTransformableMomentum(s.x, s.y, i), 0 === --c && (e.options.damping = t), a.release(i), r = null
                }))
            }
        },
        "./node_modules/smooth-scrollbar/events/wheel.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return i
            }));
            var r = n("./node_modules/smooth-scrollbar/utils/index.js");

            function i(e) {
                Object(r.c)(e)(e.options.delegateTo || e.containerEl, "onwheel" in window || document.implementation.hasFeature("Events.wheel", "3.0") ? "wheel" : "mousewheel", (function (t) {
                    var n = function (e) {
                            if ("deltaX" in e) {
                                var t = function (e) {
                                    return s[e] || s[0]
                                }(e.deltaMode);
                                return {
                                    x: e.deltaX / o * t,
                                    y: e.deltaY / o * t
                                }
                            }
                            if ("wheelDeltaX" in e) return {
                                x: e.wheelDeltaX / a,
                                y: e.wheelDeltaY / a
                            };
                            return {
                                x: 0,
                                y: e.wheelDelta / a
                            }
                        }(t),
                        r = n.x,
                        i = n.y;
                    e.addTransformableMomentum(r, i, t, (function (e) {
                        e && t.preventDefault()
                    }))
                }))
            }
            var o = 1,
                a = -3,
                s = [1, 28, 500]
        },
        "./node_modules/smooth-scrollbar/geometry/get-size.js": function (e, t, n) {
            "use strict";

            function r(e) {
                var t = e.containerEl,
                    n = e.contentEl;
                return {
                    container: {
                        width: t.clientWidth,
                        height: t.clientHeight
                    },
                    content: {
                        width: n.offsetWidth - n.clientWidth + n.scrollWidth,
                        height: n.offsetHeight - n.clientHeight + n.scrollHeight
                    }
                }
            }
            n.d(t, "a", (function () {
                return r
            }))
        },
        "./node_modules/smooth-scrollbar/geometry/index.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/smooth-scrollbar/geometry/get-size.js");
            n.d(t, "a", (function () {
                return r.a
            }));
            var i = n("./node_modules/smooth-scrollbar/geometry/is-visible.js");
            n.d(t, "b", (function () {
                return i.a
            }));
            var o = n("./node_modules/smooth-scrollbar/geometry/update.js");
            n.d(t, "c", (function () {
                return o.a
            }))
        },
        "./node_modules/smooth-scrollbar/geometry/is-visible.js": function (e, t, n) {
            "use strict";

            function r(e, t) {
                var n = e.bounding,
                    r = t.getBoundingClientRect(),
                    i = Math.max(n.top, r.top),
                    o = Math.max(n.left, r.left),
                    a = Math.min(n.right, r.right);
                return i < Math.min(n.bottom, r.bottom) && o < a
            }
            n.d(t, "a", (function () {
                return r
            }))
        },
        "./node_modules/smooth-scrollbar/geometry/update.js": function (e, t, n) {
            "use strict";

            function r(e) {
                var t = e.getSize(),
                    n = {
                        x: Math.max(t.content.width - t.container.width, 0),
                        y: Math.max(t.content.height - t.container.height, 0)
                    },
                    r = e.containerEl.getBoundingClientRect(),
                    i = {
                        top: Math.max(r.top, 0),
                        right: Math.min(r.right, window.innerWidth),
                        bottom: Math.min(r.bottom, window.innerHeight),
                        left: Math.max(r.left, 0)
                    };
                e.size = t, e.limit = n, e.bounding = i, e.track.update(), e.setPosition()
            }
            n.d(t, "a", (function () {
                return r
            }))
        },
        "./node_modules/smooth-scrollbar/index.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/tslib/tslib.es6.js"),
                i = (n("./node_modules/smooth-scrollbar/polyfills.js"), n("./node_modules/smooth-scrollbar/scrollbar.js")),
                o = n("./node_modules/smooth-scrollbar/plugin.js"),
                a = n("./node_modules/smooth-scrollbar/style.js"),
                s = function (e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return Object(r.c)(t, e), t.init = function (e, t) {
                        if (!e || 1 !== e.nodeType) throw new TypeError("expect element to be DOM Element, but got " + e);
                        return Object(a.a)(), i.b.has(e) ? i.b.get(e) : new i.a(e, t)
                    }, t.initAll = function (e) {
                        return Array.from(document.querySelectorAll("[data-scrollbar]"), (function (n) {
                            return t.init(n, e)
                        }))
                    }, t.has = function (e) {
                        return i.b.has(e)
                    }, t.get = function (e) {
                        return i.b.get(e)
                    }, t.getAll = function () {
                        return Array.from(i.b.values())
                    }, t.destroy = function (e) {
                        var t = i.b.get(e);
                        t && t.destroy()
                    }, t.destroyAll = function () {
                        i.b.forEach((function (e) {
                            e.destroy()
                        }))
                    }, t.use = function () {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                        return o.b.apply(void 0, e)
                    }, t.attachStyle = function () {
                        return Object(a.a)()
                    }, t.detachStyle = function () {
                        return Object(a.b)()
                    }, t.version = "8.5.2", t.ScrollbarPlugin = o.a, t
                }(i.a);
            t.a = s
        },
        "./node_modules/smooth-scrollbar/options.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return o
            }));
            var r = n("./node_modules/tslib/tslib.es6.js"),
                i = n("./node_modules/smooth-scrollbar/decorators/index.js"),
                o = function () {
                    function e(e) {
                        var t = this;
                        void 0 === e && (e = {}), this.damping = .1, this.thumbMinSize = 20, this.renderByPixels = !0, this.alwaysShowTracks = !1, this.continuousScrolling = !0, this.delegateTo = null, this.plugins = {}, Object.keys(e).forEach((function (n) {
                            t[n] = e[n]
                        }))
                    }
                    return Object.defineProperty(e.prototype, "wheelEventTarget", {
                        get: function () {
                            return this.delegateTo
                        },
                        set: function (e) {
                            console.warn("[smooth-scrollbar]: `options.wheelEventTarget` is deprecated and will be removed in the future, use `options.delegateTo` instead."), this.delegateTo = e
                        },
                        enumerable: !0,
                        configurable: !0
                    }), Object(r.b)([Object(i.c)(0, 1)], e.prototype, "damping", void 0), Object(r.b)([Object(i.c)(0, 1 / 0)], e.prototype, "thumbMinSize", void 0), Object(r.b)([i.a], e.prototype, "renderByPixels", void 0), Object(r.b)([i.a], e.prototype, "alwaysShowTracks", void 0), Object(r.b)([i.a], e.prototype, "continuousScrolling", void 0), e
                }()
        },
        "./node_modules/smooth-scrollbar/plugin.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return i
            })), n.d(t, "b", (function () {
                return a
            })), n.d(t, "c", (function () {
                return s
            }));
            var r = n("./node_modules/tslib/tslib.es6.js"),
                i = function () {
                    function e(e, t) {
                        var n = this.constructor;
                        this.scrollbar = e, this.name = n.pluginName, this.options = Object(r.a)(Object(r.a)({}, n.defaultOptions), t)
                    }
                    return e.prototype.onInit = function () {}, e.prototype.onDestroy = function () {}, e.prototype.onUpdate = function () {}, e.prototype.onRender = function (e) {}, e.prototype.transformDelta = function (e, t) {
                        return Object(r.a)({}, e)
                    }, e.pluginName = "", e.defaultOptions = {}, e
                }(),
                o = {
                    order: new Set,
                    constructors: {}
                };

            function a() {
                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                e.forEach((function (e) {
                    var t = e.pluginName;
                    if (!t) throw new TypeError("plugin name is required");
                    o.order.add(t), o.constructors[t] = e
                }))
            }

            function s(e, t) {
                return Array.from(o.order).filter((function (e) {
                    return !1 !== t[e]
                })).map((function (n) {
                    var r = new(0, o.constructors[n])(e, t[n]);
                    return t[n] = r.options, r
                }))
            }
        },
        "./node_modules/smooth-scrollbar/polyfills.js": function (e, t, n) {
            "use strict";
            n("./node_modules/core-js/fn/map.js"), n("./node_modules/core-js/fn/set.js"), n("./node_modules/core-js/fn/weak-map.js"), n("./node_modules/core-js/fn/array/from.js"), n("./node_modules/core-js/fn/object/assign.js")
        },
        "./node_modules/smooth-scrollbar/scrollbar.js": function (e, t, n) {
            "use strict";
            n.d(t, "b", (function () {
                return p
            })), n.d(t, "a", (function () {
                return f
            }));
            var r = n("./node_modules/tslib/tslib.es6.js"),
                i = n("./node_modules/lodash-es/clamp.js"),
                o = n("./node_modules/smooth-scrollbar/options.js"),
                a = n("./node_modules/smooth-scrollbar/utils/index.js"),
                s = n("./node_modules/smooth-scrollbar/decorators/index.js"),
                c = n("./node_modules/smooth-scrollbar/track/index.js"),
                l = n("./node_modules/smooth-scrollbar/geometry/index.js"),
                u = n("./node_modules/smooth-scrollbar/scrolling/index.js"),
                h = n("./node_modules/smooth-scrollbar/plugin.js"),
                d = n("./node_modules/smooth-scrollbar/events/index.js"),
                p = new Map,
                f = function () {
                    function e(e, t) {
                        var n = this;
                        this.offset = {
                            x: 0,
                            y: 0
                        }, this.limit = {
                            x: 1 / 0,
                            y: 1 / 0
                        }, this.bounding = {
                            top: 0,
                            right: 0,
                            bottom: 0,
                            left: 0
                        }, this._plugins = [], this._momentum = {
                            x: 0,
                            y: 0
                        }, this._listeners = new Set, this.containerEl = e;
                        var r = this.contentEl = document.createElement("div");
                        this.options = new o.a(t), e.setAttribute("data-scrollbar", "true"), e.setAttribute("tabindex", "-1"), Object(a.f)(e, {
                            overflow: "hidden",
                            outline: "none"
                        }), window.navigator.msPointerEnabled && (e.style.msTouchAction = "none"), r.className = "scroll-content", Array.from(e.childNodes).forEach((function (e) {
                            r.appendChild(e)
                        })), e.appendChild(r), this.track = new c.a(this), this.size = this.getSize(), this._plugins = Object(h.c)(this, this.options.plugins);
                        var i = e.scrollLeft,
                            s = e.scrollTop;
                        e.scrollLeft = e.scrollTop = 0, this.setPosition(i, s, {
                            withoutCallbacks: !0
                        });
                        var l = window,
                            u = l.MutationObserver || l.WebKitMutationObserver || l.MozMutationObserver;
                        "function" == typeof u && (this._observer = new u((function () {
                            n.update()
                        })), this._observer.observe(r, {
                            subtree: !0,
                            childList: !0
                        })), p.set(e, this), requestAnimationFrame((function () {
                            n._init()
                        }))
                    }
                    return Object.defineProperty(e.prototype, "parent", {
                        get: function () {
                            for (var e = this.containerEl.parentElement; e;) {
                                var t = p.get(e);
                                if (t) return t;
                                e = e.parentElement
                            }
                            return null
                        },
                        enumerable: !0,
                        configurable: !0
                    }), Object.defineProperty(e.prototype, "scrollTop", {
                        get: function () {
                            return this.offset.y
                        },
                        set: function (e) {
                            this.setPosition(this.scrollLeft, e)
                        },
                        enumerable: !0,
                        configurable: !0
                    }), Object.defineProperty(e.prototype, "scrollLeft", {
                        get: function () {
                            return this.offset.x
                        },
                        set: function (e) {
                            this.setPosition(e, this.scrollTop)
                        },
                        enumerable: !0,
                        configurable: !0
                    }), e.prototype.getSize = function () {
                        return Object(l.a)(this)
                    }, e.prototype.update = function () {
                        Object(l.c)(this), this._plugins.forEach((function (e) {
                            e.onUpdate()
                        }))
                    }, e.prototype.isVisible = function (e) {
                        return Object(l.b)(this, e)
                    }, e.prototype.setPosition = function (e, t, n) {
                        var r = this;
                        void 0 === e && (e = this.offset.x), void 0 === t && (t = this.offset.y), void 0 === n && (n = {});
                        var i = Object(u.c)(this, e, t);
                        i && !n.withoutCallbacks && this._listeners.forEach((function (e) {
                            e.call(r, i)
                        }))
                    }, e.prototype.scrollTo = function (e, t, n, r) {
                        void 0 === e && (e = this.offset.x), void 0 === t && (t = this.offset.y), void 0 === n && (n = 0), void 0 === r && (r = {}), Object(u.b)(this, e, t, n, r)
                    }, e.prototype.scrollIntoView = function (e, t) {
                        void 0 === t && (t = {}), Object(u.a)(this, e, t)
                    }, e.prototype.addListener = function (e) {
                        if ("function" != typeof e) throw new TypeError("[smooth-scrollbar] scrolling listener should be a function");
                        this._listeners.add(e)
                    }, e.prototype.removeListener = function (e) {
                        this._listeners.delete(e)
                    }, e.prototype.addTransformableMomentum = function (e, t, n, r) {
                        this._updateDebounced();
                        var i = this._plugins.reduce((function (e, t) {
                                return t.transformDelta(e, n) || e
                            }), {
                                x: e,
                                y: t
                            }),
                            o = !this._shouldPropagateMomentum(i.x, i.y);
                        o && this.addMomentum(i.x, i.y), r && r.call(this, o)
                    }, e.prototype.addMomentum = function (e, t) {
                        this.setMomentum(this._momentum.x + e, this._momentum.y + t)
                    }, e.prototype.setMomentum = function (e, t) {
                        0 === this.limit.x && (e = 0), 0 === this.limit.y && (t = 0), this.options.renderByPixels && (e = Math.round(e), t = Math.round(t)), this._momentum.x = e, this._momentum.y = t
                    }, e.prototype.updatePluginOptions = function (e, t) {
                        this._plugins.forEach((function (n) {
                            n.name === e && Object.assign(n.options, t)
                        }))
                    }, e.prototype.destroy = function () {
                        var e = this.containerEl,
                            t = this.contentEl;
                        Object(a.b)(this), this._listeners.clear(), this.setMomentum(0, 0), cancelAnimationFrame(this._renderID), this._observer && this._observer.disconnect(), p.delete(this.containerEl);
                        for (var n = Array.from(t.childNodes); e.firstChild;) e.removeChild(e.firstChild);
                        n.forEach((function (t) {
                            e.appendChild(t)
                        })), Object(a.f)(e, {
                            overflow: ""
                        }), e.scrollTop = this.scrollTop, e.scrollLeft = this.scrollLeft, this._plugins.forEach((function (e) {
                            e.onDestroy()
                        })), this._plugins.length = 0
                    }, e.prototype._init = function () {
                        var e = this;
                        this.update(), Object.keys(d).forEach((function (t) {
                            d[t](e)
                        })), this._plugins.forEach((function (e) {
                            e.onInit()
                        })), this._render()
                    }, e.prototype._updateDebounced = function () {
                        this.update()
                    }, e.prototype._shouldPropagateMomentum = function (e, t) {
                        void 0 === e && (e = 0), void 0 === t && (t = 0);
                        var n = this.options,
                            r = this.offset,
                            o = this.limit;
                        if (!n.continuousScrolling) return !1;
                        0 === o.x && 0 === o.y && this._updateDebounced();
                        var a = Object(i.a)(e + r.x, 0, o.x),
                            s = Object(i.a)(t + r.y, 0, o.y),
                            c = !0;
                        return c = (c = (c = c && a === r.x) && s === r.y) && (r.x === o.x || 0 === r.x || r.y === o.y || 0 === r.y)
                    }, e.prototype._render = function () {
                        var e = this._momentum;
                        if (e.x || e.y) {
                            var t = this._nextTick("x"),
                                n = this._nextTick("y");
                            e.x = t.momentum, e.y = n.momentum, this.setPosition(t.position, n.position)
                        }
                        var i = Object(r.a)({}, this._momentum);
                        this._plugins.forEach((function (e) {
                            e.onRender(i)
                        })), this._renderID = requestAnimationFrame(this._render.bind(this))
                    }, e.prototype._nextTick = function (e) {
                        var t = this.options,
                            n = this.offset,
                            r = this._momentum,
                            i = n[e],
                            o = r[e];
                        if (Math.abs(o) <= .1) return {
                            momentum: 0,
                            position: i + o
                        };
                        var a = o * (1 - t.damping);
                        return t.renderByPixels && (a |= 0), {
                            momentum: a,
                            position: i + o - a
                        }
                    }, Object(r.b)([Object(s.b)(100, {
                        leading: !0
                    })], e.prototype, "_updateDebounced", null), e
                }()
        },
        "./node_modules/smooth-scrollbar/scrolling/index.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/smooth-scrollbar/scrolling/set-position.js");
            n.d(t, "c", (function () {
                return r.a
            }));
            var i = n("./node_modules/smooth-scrollbar/scrolling/scroll-to.js");
            n.d(t, "b", (function () {
                return i.a
            }));
            var o = n("./node_modules/smooth-scrollbar/scrolling/scroll-into-view.js");
            n.d(t, "a", (function () {
                return o.a
            }))
        },
        "./node_modules/smooth-scrollbar/scrolling/scroll-into-view.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return i
            }));
            var r = n("./node_modules/lodash-es/clamp.js");

            function i(e, t, n) {
                var i = void 0 === n ? {} : n,
                    o = i.alignToTop,
                    a = void 0 === o || o,
                    s = i.onlyScrollIfNeeded,
                    c = void 0 !== s && s,
                    l = i.offsetTop,
                    u = void 0 === l ? 0 : l,
                    h = i.offsetLeft,
                    d = void 0 === h ? 0 : h,
                    p = i.offsetBottom,
                    f = void 0 === p ? 0 : p,
                    m = e.containerEl,
                    g = e.bounding,
                    v = e.offset,
                    y = e.limit;
                if (t && m.contains(t)) {
                    var _ = t.getBoundingClientRect();
                    if (!c || !e.isVisible(t)) {
                        var x = a ? _.top - g.top - u : _.bottom - g.bottom + f;
                        e.setMomentum(_.left - g.left - d, Object(r.a)(x, -v.y, y.y - v.y))
                    }
                }
            }
        },
        "./node_modules/smooth-scrollbar/scrolling/scroll-to.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return o
            }));
            var r = n("./node_modules/lodash-es/clamp.js"),
                i = new WeakMap;

            function o(e, t, n, o, s) {
                void 0 === o && (o = 0);
                var c = void 0 === s ? {} : s,
                    l = c.easing,
                    u = void 0 === l ? a : l,
                    h = c.callback,
                    d = e.options,
                    p = e.offset,
                    f = e.limit;
                d.renderByPixels && (t = Math.round(t), n = Math.round(n));
                var m = p.x,
                    g = p.y,
                    v = Object(r.a)(t, 0, f.x) - m,
                    y = Object(r.a)(n, 0, f.y) - g,
                    _ = Date.now();
                cancelAnimationFrame(i.get(e)),
                    function t() {
                        var n = Date.now() - _,
                            r = o ? u(Math.min(n / o, 1)) : 1;
                        if (e.setPosition(m + v * r, g + y * r), n >= o) "function" == typeof h && h.call(e);
                        else {
                            var a = requestAnimationFrame(t);
                            i.set(e, a)
                        }
                    }()
            }

            function a(e) {
                return Math.pow(e - 1, 3) + 1
            }
        },
        "./node_modules/smooth-scrollbar/scrolling/set-position.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return a
            }));
            var r = n("./node_modules/tslib/tslib.es6.js"),
                i = n("./node_modules/lodash-es/clamp.js"),
                o = n("./node_modules/smooth-scrollbar/utils/index.js");

            function a(e, t, n) {
                var a = e.options,
                    s = e.offset,
                    c = e.limit,
                    l = e.track,
                    u = e.contentEl;
                return a.renderByPixels && (t = Math.round(t), n = Math.round(n)), t = Object(i.a)(t, 0, c.x), n = Object(i.a)(n, 0, c.y), t !== s.x && l.xAxis.show(), n !== s.y && l.yAxis.show(), a.alwaysShowTracks || l.autoHideOnIdle(), t === s.x && n === s.y ? null : (s.x = t, s.y = n, Object(o.f)(u, {
                    "-transform": "translate3d(" + -t + "px, " + -n + "px, 0)"
                }), l.update(), {
                    offset: Object(r.a)({}, s),
                    limit: Object(r.a)({}, c)
                })
            }
        },
        "./node_modules/smooth-scrollbar/style.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return i
            })), n.d(t, "b", (function () {
                return o
            }));
            var r = !1;

            function i() {
                if (!r && "undefined" != typeof window) {
                    var e = document.createElement("style");
                    e.id = "smooth-scrollbar-style", e.textContent = "\n[data-scrollbar] {\n  display: block;\n  position: relative;\n}\n\n.scroll-content {\n  -webkit-transform: translate3d(0, 0, 0);\n          transform: translate3d(0, 0, 0);\n}\n\n.scrollbar-track {\n  position: absolute;\n  opacity: 0;\n  z-index: 1;\n  background: rgba(222, 222, 222, .75);\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  -webkit-transition: opacity 0.5s 0.5s ease-out;\n          transition: opacity 0.5s 0.5s ease-out;\n}\n.scrollbar-track.show,\n.scrollbar-track:hover {\n  opacity: 1;\n  -webkit-transition-delay: 0s;\n          transition-delay: 0s;\n}\n\n.scrollbar-track-x {\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 8px;\n}\n.scrollbar-track-y {\n  top: 0;\n  right: 0;\n  width: 8px;\n  height: 100%;\n}\n.scrollbar-thumb {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 8px;\n  height: 8px;\n  background: rgba(0, 0, 0, .5);\n  border-radius: 4px;\n}\n", document.head && document.head.appendChild(e), r = !0
                }
            }

            function o() {
                if (r && "undefined" != typeof window) {
                    var e = document.getElementById("smooth-scrollbar-style");
                    e && e.parentNode && (e.parentNode.removeChild(e), r = !1)
                }
            }
        },
        "./node_modules/smooth-scrollbar/track/direction.js": function (e, t, n) {
            "use strict";
            var r;
            n.d(t, "a", (function () {
                    return r
                })),
                function (e) {
                    e.X = "x", e.Y = "y"
                }(r || (r = {}))
        },
        "./node_modules/smooth-scrollbar/track/index.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return s
            }));
            var r = n("./node_modules/tslib/tslib.es6.js"),
                i = n("./node_modules/smooth-scrollbar/track/track.js"),
                o = n("./node_modules/smooth-scrollbar/track/direction.js"),
                a = n("./node_modules/smooth-scrollbar/decorators/index.js"),
                s = function () {
                    function e(e) {
                        this._scrollbar = e;
                        var t = e.options.thumbMinSize;
                        this.xAxis = new i.a(o.a.X, t), this.yAxis = new i.a(o.a.Y, t), this.xAxis.attachTo(e.containerEl), this.yAxis.attachTo(e.containerEl), e.options.alwaysShowTracks && (this.xAxis.show(), this.yAxis.show())
                    }
                    return e.prototype.update = function () {
                        var e = this._scrollbar,
                            t = e.size,
                            n = e.offset;
                        this.xAxis.update(n.x, t.container.width, t.content.width), this.yAxis.update(n.y, t.container.height, t.content.height)
                    }, e.prototype.autoHideOnIdle = function () {
                        this._scrollbar.options.alwaysShowTracks || (this.xAxis.hide(), this.yAxis.hide())
                    }, Object(r.b)([Object(a.b)(300)], e.prototype, "autoHideOnIdle", null), e
                }()
        },
        "./node_modules/smooth-scrollbar/track/thumb.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return o
            }));
            var r = n("./node_modules/smooth-scrollbar/track/direction.js"),
                i = n("./node_modules/smooth-scrollbar/utils/index.js"),
                o = function () {
                    function e(e, t) {
                        void 0 === t && (t = 0), this._direction = e, this._minSize = t, this.element = document.createElement("div"), this.displaySize = 0, this.realSize = 0, this.offset = 0, this.element.className = "scrollbar-thumb scrollbar-thumb-" + e
                    }
                    return e.prototype.attachTo = function (e) {
                        e.appendChild(this.element)
                    }, e.prototype.update = function (e, t, n) {
                        this.realSize = Math.min(t / n, 1) * t, this.displaySize = Math.max(this.realSize, this._minSize), this.offset = e / n * (t + (this.realSize - this.displaySize)), Object(i.f)(this.element, this._getStyle())
                    }, e.prototype._getStyle = function () {
                        switch (this._direction) {
                            case r.a.X:
                                return {
                                    width: this.displaySize + "px", "-transform": "translate3d(" + this.offset + "px, 0, 0)"
                                };
                            case r.a.Y:
                                return {
                                    height: this.displaySize + "px", "-transform": "translate3d(0, " + this.offset + "px, 0)"
                                };
                            default:
                                return null
                        }
                    }, e
                }()
        },
        "./node_modules/smooth-scrollbar/track/track.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return o
            }));
            var r = n("./node_modules/smooth-scrollbar/track/thumb.js"),
                i = n("./node_modules/smooth-scrollbar/utils/index.js"),
                o = function () {
                    function e(e, t) {
                        void 0 === t && (t = 0), this.element = document.createElement("div"), this._isShown = !1, this.element.className = "scrollbar-track scrollbar-track-" + e, this.thumb = new r.a(e, t), this.thumb.attachTo(this.element)
                    }
                    return e.prototype.attachTo = function (e) {
                        e.appendChild(this.element)
                    }, e.prototype.show = function () {
                        this._isShown || (this._isShown = !0, this.element.classList.add("show"))
                    }, e.prototype.hide = function () {
                        this._isShown && (this._isShown = !1, this.element.classList.remove("show"))
                    }, e.prototype.update = function (e, t, n) {
                        Object(i.f)(this.element, {
                            display: n <= t ? "none" : "block"
                        }), this.thumb.update(e, t, n)
                    }, e
                }()
        },
        "./node_modules/smooth-scrollbar/utils/event-hub.js": function (e, t, n) {
            "use strict";
            var r;
            n.d(t, "b", (function () {
                return a
            })), n.d(t, "a", (function () {
                return s
            }));
            var i = new WeakMap;

            function o() {
                if (void 0 !== r) return r;
                var e = !1;
                try {
                    var t = function () {},
                        n = Object.defineProperty({}, "passive", {
                            get: function () {
                                e = !0
                            }
                        });
                    window.addEventListener("testPassive", t, n), window.removeEventListener("testPassive", t, n)
                } catch (e) {}
                return r = !!e && {
                    passive: !1
                }
            }

            function a(e) {
                var t = i.get(e) || [];
                return i.set(e, t),
                    function (e, n, r) {
                        function i(e) {
                            e.defaultPrevented || r(e)
                        }
                        n.split(/\s+/g).forEach((function (n) {
                            t.push({
                                elem: e,
                                eventName: n,
                                handler: i
                            }), e.addEventListener(n, i, o())
                        }))
                    }
            }

            function s(e) {
                var t = i.get(e);
                t && (t.forEach((function (e) {
                    var t = e.elem,
                        n = e.eventName,
                        r = e.handler;
                    t.removeEventListener(n, r, o())
                })), i.delete(e))
            }
        },
        "./node_modules/smooth-scrollbar/utils/get-pointer-data.js": function (e, t, n) {
            "use strict";

            function r(e) {
                return e.touches ? e.touches[e.touches.length - 1] : e
            }
            n.d(t, "a", (function () {
                return r
            }))
        },
        "./node_modules/smooth-scrollbar/utils/get-position.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return i
            }));
            var r = n("./node_modules/smooth-scrollbar/utils/get-pointer-data.js");

            function i(e) {
                var t = Object(r.a)(e);
                return {
                    x: t.clientX,
                    y: t.clientY
                }
            }
        },
        "./node_modules/smooth-scrollbar/utils/index.js": function (e, t, n) {
            "use strict";
            var r = n("./node_modules/smooth-scrollbar/utils/event-hub.js");
            n.d(t, "b", (function () {
                return r.a
            })), n.d(t, "c", (function () {
                return r.b
            }));
            n("./node_modules/smooth-scrollbar/utils/get-pointer-data.js");
            var i = n("./node_modules/smooth-scrollbar/utils/get-position.js");
            n.d(t, "d", (function () {
                return i.a
            }));
            var o = n("./node_modules/smooth-scrollbar/utils/is-one-of.js");
            n.d(t, "e", (function () {
                return o.a
            }));
            var a = n("./node_modules/smooth-scrollbar/utils/set-style.js");
            n.d(t, "f", (function () {
                return a.a
            }));
            var s = n("./node_modules/smooth-scrollbar/utils/touch-record.js");
            n.d(t, "a", (function () {
                return s.a
            }))
        },
        "./node_modules/smooth-scrollbar/utils/is-one-of.js": function (e, t, n) {
            "use strict";

            function r(e, t) {
                return void 0 === t && (t = []), t.some((function (t) {
                    return e === t
                }))
            }
            n.d(t, "a", (function () {
                return r
            }))
        },
        "./node_modules/smooth-scrollbar/utils/set-style.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return o
            }));
            var r = ["webkit", "moz", "ms", "o"],
                i = new RegExp("^-(?!(?:" + r.join("|") + ")-)");

            function o(e, t) {
                t = function (e) {
                    var t = {};
                    return Object.keys(e).forEach((function (n) {
                        if (i.test(n)) {
                            var o = e[n];
                            n = n.replace(/^-/, ""), t[n] = o, r.forEach((function (e) {
                                t["-" + e + "-" + n] = o
                            }))
                        } else t[n] = e[n]
                    })), t
                }(t), Object.keys(t).forEach((function (n) {
                    var r = n.replace(/^-/, "").replace(/-([a-z])/g, (function (e, t) {
                        return t.toUpperCase()
                    }));
                    e.style[r] = t[n]
                }))
            }
        },
        "./node_modules/smooth-scrollbar/utils/touch-record.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return a
            }));
            var r = n("./node_modules/tslib/tslib.es6.js"),
                i = n("./node_modules/smooth-scrollbar/utils/get-position.js"),
                o = function () {
                    function e(e) {
                        this.updateTime = Date.now(), this.delta = {
                            x: 0,
                            y: 0
                        }, this.velocity = {
                            x: 0,
                            y: 0
                        }, this.lastPosition = {
                            x: 0,
                            y: 0
                        }, this.lastPosition = Object(i.a)(e)
                    }
                    return e.prototype.update = function (e) {
                        var t = this.velocity,
                            n = this.updateTime,
                            r = this.lastPosition,
                            o = Date.now(),
                            a = Object(i.a)(e),
                            s = {
                                x: -(a.x - r.x),
                                y: -(a.y - r.y)
                            },
                            c = o - n || 16,
                            l = s.x / c * 16,
                            u = s.y / c * 16;
                        t.x = .9 * l + .1 * t.x, t.y = .9 * u + .1 * t.y, this.delta = s, this.updateTime = o, this.lastPosition = a
                    }, e
                }(),
                a = function () {
                    function e() {
                        this._touchList = {}
                    }
                    return Object.defineProperty(e.prototype, "_primitiveValue", {
                        get: function () {
                            return {
                                x: 0,
                                y: 0
                            }
                        },
                        enumerable: !0,
                        configurable: !0
                    }), e.prototype.isActive = function () {
                        return void 0 !== this._activeTouchID
                    }, e.prototype.getDelta = function () {
                        var e = this._getActiveTracker();
                        return e ? Object(r.a)({}, e.delta) : this._primitiveValue
                    }, e.prototype.getVelocity = function () {
                        var e = this._getActiveTracker();
                        return e ? Object(r.a)({}, e.velocity) : this._primitiveValue
                    }, e.prototype.track = function (e) {
                        var t = this,
                            n = e.targetTouches;
                        return Array.from(n).forEach((function (e) {
                            t._add(e)
                        })), this._touchList
                    }, e.prototype.update = function (e) {
                        var t = this,
                            n = e.touches,
                            r = e.changedTouches;
                        return Array.from(n).forEach((function (e) {
                            t._renew(e)
                        })), this._setActiveID(r), this._touchList
                    }, e.prototype.release = function (e) {
                        var t = this;
                        delete this._activeTouchID, Array.from(e.changedTouches).forEach((function (e) {
                            t._delete(e)
                        }))
                    }, e.prototype._add = function (e) {
                        if (!this._has(e)) {
                            var t = new o(e);
                            this._touchList[e.identifier] = t
                        }
                    }, e.prototype._renew = function (e) {
                        this._has(e) && this._touchList[e.identifier].update(e)
                    }, e.prototype._delete = function (e) {
                        delete this._touchList[e.identifier]
                    }, e.prototype._has = function (e) {
                        return this._touchList.hasOwnProperty(e.identifier)
                    }, e.prototype._setActiveID = function (e) {
                        this._activeTouchID = e[e.length - 1].identifier
                    }, e.prototype._getActiveTracker = function () {
                        return this._touchList[this._activeTouchID]
                    }, e
                }()
        },
        "./node_modules/smoothscroll-polyfill/dist/smoothscroll.js": function (e, t, n) {
            ! function () {
                "use strict";
                e.exports = {
                    polyfill: function () {
                        var e = window,
                            t = document;
                        if (!("scrollBehavior" in t.documentElement.style) || !0 === e.__forceSmoothScrollPolyfill__) {
                            var n, r = e.HTMLElement || e.Element,
                                i = {
                                    scroll: e.scroll || e.scrollTo,
                                    scrollBy: e.scrollBy,
                                    elementScroll: r.prototype.scroll || s,
                                    scrollIntoView: r.prototype.scrollIntoView
                                },
                                o = e.performance && e.performance.now ? e.performance.now.bind(e.performance) : Date.now,
                                a = (n = e.navigator.userAgent, new RegExp(["MSIE ", "Trident/", "Edge/"].join("|")).test(n) ? 1 : 0);
                            e.scroll = e.scrollTo = function () {
                                void 0 !== arguments[0] && (!0 !== c(arguments[0]) ? f.call(e, t.body, void 0 !== arguments[0].left ? ~~arguments[0].left : e.scrollX || e.pageXOffset, void 0 !== arguments[0].top ? ~~arguments[0].top : e.scrollY || e.pageYOffset) : i.scroll.call(e, void 0 !== arguments[0].left ? arguments[0].left : "object" != typeof arguments[0] ? arguments[0] : e.scrollX || e.pageXOffset, void 0 !== arguments[0].top ? arguments[0].top : void 0 !== arguments[1] ? arguments[1] : e.scrollY || e.pageYOffset))
                            }, e.scrollBy = function () {
                                void 0 !== arguments[0] && (c(arguments[0]) ? i.scrollBy.call(e, void 0 !== arguments[0].left ? arguments[0].left : "object" != typeof arguments[0] ? arguments[0] : 0, void 0 !== arguments[0].top ? arguments[0].top : void 0 !== arguments[1] ? arguments[1] : 0) : f.call(e, t.body, ~~arguments[0].left + (e.scrollX || e.pageXOffset), ~~arguments[0].top + (e.scrollY || e.pageYOffset)))
                            }, r.prototype.scroll = r.prototype.scrollTo = function () {
                                if (void 0 !== arguments[0])
                                    if (!0 !== c(arguments[0])) {
                                        var e = arguments[0].left,
                                            t = arguments[0].top;
                                        f.call(this, this, void 0 === e ? this.scrollLeft : ~~e, void 0 === t ? this.scrollTop : ~~t)
                                    } else {
                                        if ("number" == typeof arguments[0] && void 0 === arguments[1]) throw new SyntaxError("Value could not be converted");
                                        i.elementScroll.call(this, void 0 !== arguments[0].left ? ~~arguments[0].left : "object" != typeof arguments[0] ? ~~arguments[0] : this.scrollLeft, void 0 !== arguments[0].top ? ~~arguments[0].top : void 0 !== arguments[1] ? ~~arguments[1] : this.scrollTop)
                                    }
                            }, r.prototype.scrollBy = function () {
                                void 0 !== arguments[0] && (!0 !== c(arguments[0]) ? this.scroll({
                                    left: ~~arguments[0].left + this.scrollLeft,
                                    top: ~~arguments[0].top + this.scrollTop,
                                    behavior: arguments[0].behavior
                                }) : i.elementScroll.call(this, void 0 !== arguments[0].left ? ~~arguments[0].left + this.scrollLeft : ~~arguments[0] + this.scrollLeft, void 0 !== arguments[0].top ? ~~arguments[0].top + this.scrollTop : ~~arguments[1] + this.scrollTop))
                            }, r.prototype.scrollIntoView = function () {
                                if (!0 !== c(arguments[0])) {
                                    var n = d(this),
                                        r = n.getBoundingClientRect(),
                                        o = this.getBoundingClientRect();
                                    n !== t.body ? (f.call(this, n, n.scrollLeft + o.left - r.left, n.scrollTop + o.top - r.top), "fixed" !== e.getComputedStyle(n).position && e.scrollBy({
                                        left: r.left,
                                        top: r.top,
                                        behavior: "smooth"
                                    })) : e.scrollBy({
                                        left: o.left,
                                        top: o.top,
                                        behavior: "smooth"
                                    })
                                } else i.scrollIntoView.call(this, void 0 === arguments[0] || arguments[0])
                            }
                        }

                        function s(e, t) {
                            this.scrollLeft = e, this.scrollTop = t
                        }

                        function c(e) {
                            if (null === e || "object" != typeof e || void 0 === e.behavior || "auto" === e.behavior || "instant" === e.behavior) return !0;
                            if ("object" == typeof e && "smooth" === e.behavior) return !1;
                            throw new TypeError("behavior member of ScrollOptions " + e.behavior + " is not a valid value for enumeration ScrollBehavior.")
                        }

                        function l(e, t) {
                            return "Y" === t ? e.clientHeight + a < e.scrollHeight : "X" === t ? e.clientWidth + a < e.scrollWidth : void 0
                        }

                        function u(t, n) {
                            var r = e.getComputedStyle(t, null)["overflow" + n];
                            return "auto" === r || "scroll" === r
                        }

                        function h(e) {
                            var t = l(e, "Y") && u(e, "Y"),
                                n = l(e, "X") && u(e, "X");
                            return t || n
                        }

                        function d(e) {
                            for (; e !== t.body && !1 === h(e);) e = e.parentNode || e.host;
                            return e
                        }

                        function p(t) {
                            var n, r, i, a, s = (o() - t.startTime) / 468;
                            a = s = s > 1 ? 1 : s, n = .5 * (1 - Math.cos(Math.PI * a)), r = t.startX + (t.x - t.startX) * n, i = t.startY + (t.y - t.startY) * n, t.method.call(t.scrollable, r, i), r === t.x && i === t.y || e.requestAnimationFrame(p.bind(e, t))
                        }

                        function f(n, r, a) {
                            var c, l, u, h, d = o();
                            n === t.body ? (c = e, l = e.scrollX || e.pageXOffset, u = e.scrollY || e.pageYOffset, h = i.scroll) : (c = n, l = n.scrollLeft, u = n.scrollTop, h = s), p({
                                scrollable: c,
                                method: h,
                                startTime: d,
                                startX: l,
                                startY: u,
                                x: r,
                                y: a
                            })
                        }
                    }
                }
            }()
        },
        "./node_modules/three/build/three.module.js": function (e, t, n) {
            "use strict";
            n.d(t, "a", (function () {
                return Hs
            })), n.d(t, "b", (function () {
                return fc
            })), n.d(t, "c", (function () {
                return s
            })), n.d(t, "d", (function () {
                return jt
            })), n.d(t, "e", (function () {
                return Ht
            })), n.d(t, "f", (function () {
                return Kt
            })), n.d(t, "g", (function () {
                return q
            })), n.d(t, "h", (function () {
                return Ft
            })), n.d(t, "i", (function () {
                return cs
            })), n.d(t, "j", (function () {
                return c
            })), n.d(t, "k", (function () {
                return ei
            })), void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)), void 0 === Number.isInteger && (Number.isInteger = function (e) {
                return "number" == typeof e && isFinite(e) && Math.floor(e) === e
            }), void 0 === Math.sign && (Math.sign = function (e) {
                return e < 0 ? -1 : e > 0 ? 1 : +e
            }), "name" in Function.prototype == !1 && Object.defineProperty(Function.prototype, "name", {
                get: function () {
                    return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]
                }
            }), void 0 === Object.assign && (Object.assign = function (e) {
                if (null == e) throw new TypeError("Cannot convert undefined or null to object");
                const t = Object(e);
                for (let e = 1; e < arguments.length; e++) {
                    const n = arguments[e];
                    if (null != n)
                        for (const e in n) Object.prototype.hasOwnProperty.call(n, e) && (t[e] = n[e])
                }
                return t
            });

            function r() {}
            Object.assign(r.prototype, {
                addEventListener: function (e, t) {
                    void 0 === this._listeners && (this._listeners = {});
                    var n = this._listeners;
                    void 0 === n[e] && (n[e] = []), -1 === n[e].indexOf(t) && n[e].push(t)
                },
                hasEventListener: function (e, t) {
                    if (void 0 === this._listeners) return !1;
                    var n = this._listeners;
                    return void 0 !== n[e] && -1 !== n[e].indexOf(t)
                },
                removeEventListener: function (e, t) {
                    if (void 0 !== this._listeners) {
                        var n = this._listeners[e];
                        if (void 0 !== n) {
                            var r = n.indexOf(t); - 1 !== r && n.splice(r, 1)
                        }
                    }
                },
                dispatchEvent: function (e) {
                    if (void 0 !== this._listeners) {
                        var t = this._listeners[e.type];
                        if (void 0 !== t) {
                            e.target = this;
                            for (var n = t.slice(0), r = 0, i = n.length; r < i; r++) n[r].call(this, e)
                        }
                    }
                }
            });
            for (var i = [], o = 0; o < 256; o++) i[o] = (o < 16 ? "0" : "") + o.toString(16);
            var a, s = {
                DEG2RAD: Math.PI / 180,
                RAD2DEG: 180 / Math.PI,
                generateUUID: function () {
                    var e = 4294967295 * Math.random() | 0,
                        t = 4294967295 * Math.random() | 0,
                        n = 4294967295 * Math.random() | 0,
                        r = 4294967295 * Math.random() | 0;
                    return (i[255 & e] + i[e >> 8 & 255] + i[e >> 16 & 255] + i[e >> 24 & 255] + "-" + i[255 & t] + i[t >> 8 & 255] + "-" + i[t >> 16 & 15 | 64] + i[t >> 24 & 255] + "-" + i[63 & n | 128] + i[n >> 8 & 255] + "-" + i[n >> 16 & 255] + i[n >> 24 & 255] + i[255 & r] + i[r >> 8 & 255] + i[r >> 16 & 255] + i[r >> 24 & 255]).toUpperCase()
                },
                clamp: function (e, t, n) {
                    return Math.max(t, Math.min(n, e))
                },
                euclideanModulo: function (e, t) {
                    return (e % t + t) % t
                },
                mapLinear: function (e, t, n, r, i) {
                    return r + (e - t) * (i - r) / (n - t)
                },
                lerp: function (e, t, n) {
                    return (1 - n) * e + n * t
                },
                smoothstep: function (e, t, n) {
                    return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * (3 - 2 * e)
                },
                smootherstep: function (e, t, n) {
                    return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * e * (e * (6 * e - 15) + 10)
                },
                randInt: function (e, t) {
                    return e + Math.floor(Math.random() * (t - e + 1))
                },
                randFloat: function (e, t) {
                    return e + Math.random() * (t - e)
                },
                randFloatSpread: function (e) {
                    return e * (.5 - Math.random())
                },
                degToRad: function (e) {
                    return e * s.DEG2RAD
                },
                radToDeg: function (e) {
                    return e * s.RAD2DEG
                },
                isPowerOfTwo: function (e) {
                    return 0 == (e & e - 1) && 0 !== e
                },
                ceilPowerOfTwo: function (e) {
                    return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2))
                },
                floorPowerOfTwo: function (e) {
                    return Math.pow(2, Math.floor(Math.log(e) / Math.LN2))
                },
                setQuaternionFromProperEuler: function (e, t, n, r, i) {
                    var o = Math.cos,
                        a = Math.sin,
                        s = o(n / 2),
                        c = a(n / 2),
                        l = o((t + r) / 2),
                        u = a((t + r) / 2),
                        h = o((t - r) / 2),
                        d = a((t - r) / 2),
                        p = o((r - t) / 2),
                        f = a((r - t) / 2);
                    switch (i) {
                        case "XYX":
                            e.set(s * u, c * h, c * d, s * l);
                            break;
                        case "YZY":
                            e.set(c * d, s * u, c * h, s * l);
                            break;
                        case "ZXZ":
                            e.set(c * h, c * d, s * u, s * l);
                            break;
                        case "XZX":
                            e.set(s * u, c * f, c * p, s * l);
                            break;
                        case "YXY":
                            e.set(c * p, s * u, c * f, s * l);
                            break;
                        case "ZYZ":
                            e.set(c * f, c * p, s * u, s * l);
                            break;
                        default:
                            console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " + i)
                    }
                }
            };

            function c(e, t) {
                this.x = e || 0, this.y = t || 0
            }

            function l() {
                this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
            }
            Object.defineProperties(c.prototype, {
                width: {
                    get: function () {
                        return this.x
                    },
                    set: function (e) {
                        this.x = e
                    }
                },
                height: {
                    get: function () {
                        return this.y
                    },
                    set: function (e) {
                        this.y = e
                    }
                }
            }), Object.assign(c.prototype, {
                isVector2: !0,
                set: function (e, t) {
                    return this.x = e, this.y = t, this
                },
                setScalar: function (e) {
                    return this.x = e, this.y = e, this
                },
                setX: function (e) {
                    return this.x = e, this
                },
                setY: function (e) {
                    return this.y = e, this
                },
                setComponent: function (e, t) {
                    switch (e) {
                        case 0:
                            this.x = t;
                            break;
                        case 1:
                            this.y = t;
                            break;
                        default:
                            throw new Error("index is out of range: " + e)
                    }
                    return this
                },
                getComponent: function (e) {
                    switch (e) {
                        case 0:
                            return this.x;
                        case 1:
                            return this.y;
                        default:
                            throw new Error("index is out of range: " + e)
                    }
                },
                clone: function () {
                    return new this.constructor(this.x, this.y)
                },
                copy: function (e) {
                    return this.x = e.x, this.y = e.y, this
                },
                add: function (e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this)
                },
                addScalar: function (e) {
                    return this.x += e, this.y += e, this
                },
                addVectors: function (e, t) {
                    return this.x = e.x + t.x, this.y = e.y + t.y, this
                },
                addScaledVector: function (e, t) {
                    return this.x += e.x * t, this.y += e.y * t, this
                },
                sub: function (e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this)
                },
                subScalar: function (e) {
                    return this.x -= e, this.y -= e, this
                },
                subVectors: function (e, t) {
                    return this.x = e.x - t.x, this.y = e.y - t.y, this
                },
                multiply: function (e) {
                    return this.x *= e.x, this.y *= e.y, this
                },
                multiplyScalar: function (e) {
                    return this.x *= e, this.y *= e, this
                },
                divide: function (e) {
                    return this.x /= e.x, this.y /= e.y, this
                },
                divideScalar: function (e) {
                    return this.multiplyScalar(1 / e)
                },
                applyMatrix3: function (e) {
                    var t = this.x,
                        n = this.y,
                        r = e.elements;
                    return this.x = r[0] * t + r[3] * n + r[6], this.y = r[1] * t + r[4] * n + r[7], this
                },
                min: function (e) {
                    return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this
                },
                max: function (e) {
                    return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this
                },
                clamp: function (e, t) {
                    return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this
                },
                clampScalar: function (e, t) {
                    return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this
                },
                clampLength: function (e, t) {
                    var n = this.length();
                    return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
                },
                floor: function () {
                    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this
                },
                ceil: function () {
                    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this
                },
                round: function () {
                    return this.x = Math.round(this.x), this.y = Math.round(this.y), this
                },
                roundToZero: function () {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this
                },
                negate: function () {
                    return this.x = -this.x, this.y = -this.y, this
                },
                dot: function (e) {
                    return this.x * e.x + this.y * e.y
                },
                cross: function (e) {
                    return this.x * e.y - this.y * e.x
                },
                lengthSq: function () {
                    return this.x * this.x + this.y * this.y
                },
                length: function () {
                    return Math.sqrt(this.x * this.x + this.y * this.y)
                },
                manhattanLength: function () {
                    return Math.abs(this.x) + Math.abs(this.y)
                },
                normalize: function () {
                    return this.divideScalar(this.length() || 1)
                },
                angle: function () {
                    return Math.atan2(-this.y, -this.x) + Math.PI
                },
                distanceTo: function (e) {
                    return Math.sqrt(this.distanceToSquared(e))
                },
                distanceToSquared: function (e) {
                    var t = this.x - e.x,
                        n = this.y - e.y;
                    return t * t + n * n
                },
                manhattanDistanceTo: function (e) {
                    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y)
                },
                setLength: function (e) {
                    return this.normalize().multiplyScalar(e)
                },
                lerp: function (e, t) {
                    return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this
                },
                lerpVectors: function (e, t, n) {
                    return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this
                },
                equals: function (e) {
                    return e.x === this.x && e.y === this.y
                },
                fromArray: function (e, t) {
                    return void 0 === t && (t = 0), this.x = e[t], this.y = e[t + 1], this
                },
                toArray: function (e, t) {
                    return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e
                },
                fromBufferAttribute: function (e, t, n) {
                    return void 0 !== n && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this
                },
                rotateAround: function (e, t) {
                    var n = Math.cos(t),
                        r = Math.sin(t),
                        i = this.x - e.x,
                        o = this.y - e.y;
                    return this.x = i * n - o * r + e.x, this.y = i * r + o * n + e.y, this
                },
                random: function () {
                    return this.x = Math.random(), this.y = Math.random(), this
                }
            }), Object.assign(l.prototype, {
                isMatrix3: !0,
                set: function (e, t, n, r, i, o, a, s, c) {
                    var l = this.elements;
                    return l[0] = e, l[1] = r, l[2] = a, l[3] = t, l[4] = i, l[5] = s, l[6] = n, l[7] = o, l[8] = c, this
                },
                identity: function () {
                    return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this
                },
                clone: function () {
                    return (new this.constructor).fromArray(this.elements)
                },
                copy: function (e) {
                    var t = this.elements,
                        n = e.elements;
                    return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], this
                },
                extractBasis: function (e, t, n) {
                    return e.setFromMatrix3Column(this, 0), t.setFromMatrix3Column(this, 1), n.setFromMatrix3Column(this, 2), this
                },
                setFromMatrix4: function (e) {
                    var t = e.elements;
                    return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]), this
                },
                multiply: function (e) {
                    return this.multiplyMatrices(this, e)
                },
                premultiply: function (e) {
                    return this.multiplyMatrices(e, this)
                },
                multiplyMatrices: function (e, t) {
                    var n = e.elements,
                        r = t.elements,
                        i = this.elements,
                        o = n[0],
                        a = n[3],
                        s = n[6],
                        c = n[1],
                        l = n[4],
                        u = n[7],
                        h = n[2],
                        d = n[5],
                        p = n[8],
                        f = r[0],
                        m = r[3],
                        g = r[6],
                        v = r[1],
                        y = r[4],
                        _ = r[7],
                        x = r[2],
                        b = r[5],
                        w = r[8];
                    return i[0] = o * f + a * v + s * x, i[3] = o * m + a * y + s * b, i[6] = o * g + a * _ + s * w, i[1] = c * f + l * v + u * x, i[4] = c * m + l * y + u * b, i[7] = c * g + l * _ + u * w, i[2] = h * f + d * v + p * x, i[5] = h * m + d * y + p * b, i[8] = h * g + d * _ + p * w, this
                },
                multiplyScalar: function (e) {
                    var t = this.elements;
                    return t[0] *= e, t[3] *= e, t[6] *= e, t[1] *= e, t[4] *= e, t[7] *= e, t[2] *= e, t[5] *= e, t[8] *= e, this
                },
                determinant: function () {
                    var e = this.elements,
                        t = e[0],
                        n = e[1],
                        r = e[2],
                        i = e[3],
                        o = e[4],
                        a = e[5],
                        s = e[6],
                        c = e[7],
                        l = e[8];
                    return t * o * l - t * a * c - n * i * l + n * a * s + r * i * c - r * o * s
                },
                getInverse: function (e, t) {
                    void 0 !== t && console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");
                    var n = e.elements,
                        r = this.elements,
                        i = n[0],
                        o = n[1],
                        a = n[2],
                        s = n[3],
                        c = n[4],
                        l = n[5],
                        u = n[6],
                        h = n[7],
                        d = n[8],
                        p = d * c - l * h,
                        f = l * u - d * s,
                        m = h * s - c * u,
                        g = i * p + o * f + a * m;
                    if (0 === g) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
                    var v = 1 / g;
                    return r[0] = p * v, r[1] = (a * h - d * o) * v, r[2] = (l * o - a * c) * v, r[3] = f * v, r[4] = (d * i - a * u) * v, r[5] = (a * s - l * i) * v, r[6] = m * v, r[7] = (o * u - h * i) * v, r[8] = (c * i - o * s) * v, this
                },
                transpose: function () {
                    var e, t = this.elements;
                    return e = t[1], t[1] = t[3], t[3] = e, e = t[2], t[2] = t[6], t[6] = e, e = t[5], t[5] = t[7], t[7] = e, this
                },
                getNormalMatrix: function (e) {
                    return this.setFromMatrix4(e).getInverse(this).transpose()
                },
                transposeIntoArray: function (e) {
                    var t = this.elements;
                    return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], this
                },
                setUvTransform: function (e, t, n, r, i, o, a) {
                    var s = Math.cos(i),
                        c = Math.sin(i);
                    this.set(n * s, n * c, -n * (s * o + c * a) + o + e, -r * c, r * s, -r * (-c * o + s * a) + a + t, 0, 0, 1)
                },
                scale: function (e, t) {
                    var n = this.elements;
                    return n[0] *= e, n[3] *= e, n[6] *= e, n[1] *= t, n[4] *= t, n[7] *= t, this
                },
                rotate: function (e) {
                    var t = Math.cos(e),
                        n = Math.sin(e),
                        r = this.elements,
                        i = r[0],
                        o = r[3],
                        a = r[6],
                        s = r[1],
                        c = r[4],
                        l = r[7];
                    return r[0] = t * i + n * s, r[3] = t * o + n * c, r[6] = t * a + n * l, r[1] = -n * i + t * s, r[4] = -n * o + t * c, r[7] = -n * a + t * l, this
                },
                translate: function (e, t) {
                    var n = this.elements;
                    return n[0] += e * n[2], n[3] += e * n[5], n[6] += e * n[8], n[1] += t * n[2], n[4] += t * n[5], n[7] += t * n[8], this
                },
                equals: function (e) {
                    for (var t = this.elements, n = e.elements, r = 0; r < 9; r++)
                        if (t[r] !== n[r]) return !1;
                    return !0
                },
                fromArray: function (e, t) {
                    void 0 === t && (t = 0);
                    for (var n = 0; n < 9; n++) this.elements[n] = e[n + t];
                    return this
                },
                toArray: function (e, t) {
                    void 0 === e && (e = []), void 0 === t && (t = 0);
                    var n = this.elements;
                    return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e
                }
            });
            var u = {
                    getDataURL: function (e) {
                        var t;
                        if ("undefined" == typeof HTMLCanvasElement) return e.src;
                        if (e instanceof HTMLCanvasElement) t = e;
                        else {
                            void 0 === a && (a = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")), a.width = e.width, a.height = e.height;
                            var n = a.getContext("2d");
                            e instanceof ImageData ? n.putImageData(e, 0, 0) : n.drawImage(e, 0, 0, e.width, e.height), t = a
                        }
                        return t.width > 2048 || t.height > 2048 ? t.toDataURL("image/jpeg", .6) : t.toDataURL("image/png")
                    }
                },
                h = 0;

            function d(e, t, n, r, i, o, a, u, p, f) {
                Object.defineProperty(this, "id", {
                    value: h++
                }), this.uuid = s.generateUUID(), this.name = "", this.image = void 0 !== e ? e : d.DEFAULT_IMAGE, this.mipmaps = [], this.mapping = void 0 !== t ? t : d.DEFAULT_MAPPING, this.wrapS = void 0 !== n ? n : 1001, this.wrapT = void 0 !== r ? r : 1001, this.magFilter = void 0 !== i ? i : 1006, this.minFilter = void 0 !== o ? o : 1008, this.anisotropy = void 0 !== p ? p : 1, this.format = void 0 !== a ? a : 1023, this.internalFormat = null, this.type = void 0 !== u ? u : 1009, this.offset = new c(0, 0), this.repeat = new c(1, 1), this.center = new c(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new l, this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.encoding = void 0 !== f ? f : 3e3, this.version = 0, this.onUpdate = null
            }

            function p(e, t, n, r) {
                this.x = e || 0, this.y = t || 0, this.z = n || 0, this.w = void 0 !== r ? r : 1
            }

            function f(e, t, n) {
                this.width = e, this.height = t, this.scissor = new p(0, 0, e, t), this.scissorTest = !1, this.viewport = new p(0, 0, e, t), n = n || {}, this.texture = new d(void 0, n.mapping, n.wrapS, n.wrapT, n.magFilter, n.minFilter, n.format, n.type, n.anisotropy, n.encoding), this.texture.image = {}, this.texture.image.width = e, this.texture.image.height = t, this.texture.generateMipmaps = void 0 !== n.generateMipmaps && n.generateMipmaps, this.texture.minFilter = void 0 !== n.minFilter ? n.minFilter : 1006, this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer, this.stencilBuffer = void 0 === n.stencilBuffer || n.stencilBuffer, this.depthTexture = void 0 !== n.depthTexture ? n.depthTexture : null
            }

            function m(e, t, n) {
                f.call(this, e, t, n), this.samples = 4
            }

            function g(e, t, n, r) {
                this._x = e || 0, this._y = t || 0, this._z = n || 0, this._w = void 0 !== r ? r : 1
            }
            d.DEFAULT_IMAGE = void 0, d.DEFAULT_MAPPING = 300, d.prototype = Object.assign(Object.create(r.prototype), {
                constructor: d,
                isTexture: !0,
                updateMatrix: function () {
                    this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y)
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    return this.name = e.name, this.image = e.image, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.internalFormat = e.internalFormat, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.center.copy(e.center), this.rotation = e.rotation, this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrix.copy(e.matrix), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this.encoding = e.encoding, this
                },
                toJSON: function (e) {
                    var t = void 0 === e || "string" == typeof e;
                    if (!t && void 0 !== e.textures[this.uuid]) return e.textures[this.uuid];
                    var n = {
                        metadata: {
                            version: 4.5,
                            type: "Texture",
                            generator: "Texture.toJSON"
                        },
                        uuid: this.uuid,
                        name: this.name,
                        mapping: this.mapping,
                        repeat: [this.repeat.x, this.repeat.y],
                        offset: [this.offset.x, this.offset.y],
                        center: [this.center.x, this.center.y],
                        rotation: this.rotation,
                        wrap: [this.wrapS, this.wrapT],
                        format: this.format,
                        type: this.type,
                        encoding: this.encoding,
                        minFilter: this.minFilter,
                        magFilter: this.magFilter,
                        anisotropy: this.anisotropy,
                        flipY: this.flipY,
                        premultiplyAlpha: this.premultiplyAlpha,
                        unpackAlignment: this.unpackAlignment
                    };
                    if (void 0 !== this.image) {
                        var r = this.image;
                        if (void 0 === r.uuid && (r.uuid = s.generateUUID()), !t && void 0 === e.images[r.uuid]) {
                            var i;
                            if (Array.isArray(r)) {
                                i = [];
                                for (var o = 0, a = r.length; o < a; o++) i.push(u.getDataURL(r[o]))
                            } else i = u.getDataURL(r);
                            e.images[r.uuid] = {
                                uuid: r.uuid,
                                url: i
                            }
                        }
                        n.image = r.uuid
                    }
                    return t || (e.textures[this.uuid] = n), n
                },
                dispose: function () {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                },
                transformUv: function (e) {
                    if (300 !== this.mapping) return e;
                    if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1) switch (this.wrapS) {
                        case 1e3:
                            e.x = e.x - Math.floor(e.x);
                            break;
                        case 1001:
                            e.x = e.x < 0 ? 0 : 1;
                            break;
                        case 1002:
                            1 === Math.abs(Math.floor(e.x) % 2) ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x)
                    }
                    if (e.y < 0 || e.y > 1) switch (this.wrapT) {
                        case 1e3:
                            e.y = e.y - Math.floor(e.y);
                            break;
                        case 1001:
                            e.y = e.y < 0 ? 0 : 1;
                            break;
                        case 1002:
                            1 === Math.abs(Math.floor(e.y) % 2) ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y)
                    }
                    return this.flipY && (e.y = 1 - e.y), e
                }
            }), Object.defineProperty(d.prototype, "needsUpdate", {
                set: function (e) {
                    !0 === e && this.version++
                }
            }), Object.defineProperties(p.prototype, {
                width: {
                    get: function () {
                        return this.z
                    },
                    set: function (e) {
                        this.z = e
                    }
                },
                height: {
                    get: function () {
                        return this.w
                    },
                    set: function (e) {
                        this.w = e
                    }
                }
            }), Object.assign(p.prototype, {
                isVector4: !0,
                set: function (e, t, n, r) {
                    return this.x = e, this.y = t, this.z = n, this.w = r, this
                },
                setScalar: function (e) {
                    return this.x = e, this.y = e, this.z = e, this.w = e, this
                },
                setX: function (e) {
                    return this.x = e, this
                },
                setY: function (e) {
                    return this.y = e, this
                },
                setZ: function (e) {
                    return this.z = e, this
                },
                setW: function (e) {
                    return this.w = e, this
                },
                setComponent: function (e, t) {
                    switch (e) {
                        case 0:
                            this.x = t;
                            break;
                        case 1:
                            this.y = t;
                            break;
                        case 2:
                            this.z = t;
                            break;
                        case 3:
                            this.w = t;
                            break;
                        default:
                            throw new Error("index is out of range: " + e)
                    }
                    return this
                },
                getComponent: function (e) {
                    switch (e) {
                        case 0:
                            return this.x;
                        case 1:
                            return this.y;
                        case 2:
                            return this.z;
                        case 3:
                            return this.w;
                        default:
                            throw new Error("index is out of range: " + e)
                    }
                },
                clone: function () {
                    return new this.constructor(this.x, this.y, this.z, this.w)
                },
                copy: function (e) {
                    return this.x = e.x, this.y = e.y, this.z = e.z, this.w = void 0 !== e.w ? e.w : 1, this
                },
                add: function (e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this)
                },
                addScalar: function (e) {
                    return this.x += e, this.y += e, this.z += e, this.w += e, this
                },
                addVectors: function (e, t) {
                    return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this.w = e.w + t.w, this
                },
                addScaledVector: function (e, t) {
                    return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this.w += e.w * t, this
                },
                sub: function (e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this)
                },
                subScalar: function (e) {
                    return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this
                },
                subVectors: function (e, t) {
                    return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this.w = e.w - t.w, this
                },
                multiplyScalar: function (e) {
                    return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this
                },
                applyMatrix4: function (e) {
                    var t = this.x,
                        n = this.y,
                        r = this.z,
                        i = this.w,
                        o = e.elements;
                    return this.x = o[0] * t + o[4] * n + o[8] * r + o[12] * i, this.y = o[1] * t + o[5] * n + o[9] * r + o[13] * i, this.z = o[2] * t + o[6] * n + o[10] * r + o[14] * i, this.w = o[3] * t + o[7] * n + o[11] * r + o[15] * i, this
                },
                divideScalar: function (e) {
                    return this.multiplyScalar(1 / e)
                },
                setAxisAngleFromQuaternion: function (e) {
                    this.w = 2 * Math.acos(e.w);
                    var t = Math.sqrt(1 - e.w * e.w);
                    return t < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t), this
                },
                setAxisAngleFromRotationMatrix: function (e) {
                    var t, n, r, i, o = e.elements,
                        a = o[0],
                        s = o[4],
                        c = o[8],
                        l = o[1],
                        u = o[5],
                        h = o[9],
                        d = o[2],
                        p = o[6],
                        f = o[10];
                    if (Math.abs(s - l) < .01 && Math.abs(c - d) < .01 && Math.abs(h - p) < .01) {
                        if (Math.abs(s + l) < .1 && Math.abs(c + d) < .1 && Math.abs(h + p) < .1 && Math.abs(a + u + f - 3) < .1) return this.set(1, 0, 0, 0), this;
                        t = Math.PI;
                        var m = (a + 1) / 2,
                            g = (u + 1) / 2,
                            v = (f + 1) / 2,
                            y = (s + l) / 4,
                            _ = (c + d) / 4,
                            x = (h + p) / 4;
                        return m > g && m > v ? m < .01 ? (n = 0, r = .707106781, i = .707106781) : (r = y / (n = Math.sqrt(m)), i = _ / n) : g > v ? g < .01 ? (n = .707106781, r = 0, i = .707106781) : (n = y / (r = Math.sqrt(g)), i = x / r) : v < .01 ? (n = .707106781, r = .707106781, i = 0) : (n = _ / (i = Math.sqrt(v)), r = x / i), this.set(n, r, i, t), this
                    }
                    var b = Math.sqrt((p - h) * (p - h) + (c - d) * (c - d) + (l - s) * (l - s));
                    return Math.abs(b) < .001 && (b = 1), this.x = (p - h) / b, this.y = (c - d) / b, this.z = (l - s) / b, this.w = Math.acos((a + u + f - 1) / 2), this
                },
                min: function (e) {
                    return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this
                },
                max: function (e) {
                    return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this
                },
                clamp: function (e, t) {
                    return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this.w = Math.max(e.w, Math.min(t.w, this.w)), this
                },
                clampScalar: function (e, t) {
                    return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this.w = Math.max(e, Math.min(t, this.w)), this
                },
                clampLength: function (e, t) {
                    var n = this.length();
                    return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
                },
                floor: function () {
                    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this
                },
                ceil: function () {
                    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this
                },
                round: function () {
                    return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this
                },
                roundToZero: function () {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this
                },
                negate: function () {
                    return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this
                },
                dot: function (e) {
                    return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
                },
                lengthSq: function () {
                    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
                },
                length: function () {
                    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
                },
                manhattanLength: function () {
                    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
                },
                normalize: function () {
                    return this.divideScalar(this.length() || 1)
                },
                setLength: function (e) {
                    return this.normalize().multiplyScalar(e)
                },
                lerp: function (e, t) {
                    return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this.w += (e.w - this.w) * t, this
                },
                lerpVectors: function (e, t, n) {
                    return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this.w = e.w + (t.w - e.w) * n, this
                },
                equals: function (e) {
                    return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
                },
                fromArray: function (e, t) {
                    return void 0 === t && (t = 0), this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this.w = e[t + 3], this
                },
                toArray: function (e, t) {
                    return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e[t + 3] = this.w, e
                },
                fromBufferAttribute: function (e, t, n) {
                    return void 0 !== n && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this.w = e.getW(t), this
                },
                random: function () {
                    return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this.w = Math.random(), this
                }
            }), f.prototype = Object.assign(Object.create(r.prototype), {
                constructor: f,
                isWebGLRenderTarget: !0,
                setSize: function (e, t) {
                    this.width === e && this.height === t || (this.width = e, this.height = t, this.texture.image.width = e, this.texture.image.height = t, this.dispose()), this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t)
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    return this.width = e.width, this.height = e.height, this.viewport.copy(e.viewport), this.texture = e.texture.clone(), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this
                },
                dispose: function () {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }), m.prototype = Object.assign(Object.create(f.prototype), {
                constructor: m,
                isWebGLMultisampleRenderTarget: !0,
                copy: function (e) {
                    return f.prototype.copy.call(this, e), this.samples = e.samples, this
                }
            }), Object.assign(g, {
                slerp: function (e, t, n, r) {
                    return n.copy(e).slerp(t, r)
                },
                slerpFlat: function (e, t, n, r, i, o, a) {
                    var s = n[r + 0],
                        c = n[r + 1],
                        l = n[r + 2],
                        u = n[r + 3],
                        h = i[o + 0],
                        d = i[o + 1],
                        p = i[o + 2],
                        f = i[o + 3];
                    if (u !== f || s !== h || c !== d || l !== p) {
                        var m = 1 - a,
                            g = s * h + c * d + l * p + u * f,
                            v = g >= 0 ? 1 : -1,
                            y = 1 - g * g;
                        if (y > Number.EPSILON) {
                            var _ = Math.sqrt(y),
                                x = Math.atan2(_, g * v);
                            m = Math.sin(m * x) / _, a = Math.sin(a * x) / _
                        }
                        var b = a * v;
                        if (s = s * m + h * b, c = c * m + d * b, l = l * m + p * b, u = u * m + f * b, m === 1 - a) {
                            var w = 1 / Math.sqrt(s * s + c * c + l * l + u * u);
                            s *= w, c *= w, l *= w, u *= w
                        }
                    }
                    e[t] = s, e[t + 1] = c, e[t + 2] = l, e[t + 3] = u
                },
                multiplyQuaternionsFlat: function (e, t, n, r, i, o) {
                    var a = n[r],
                        s = n[r + 1],
                        c = n[r + 2],
                        l = n[r + 3],
                        u = i[o],
                        h = i[o + 1],
                        d = i[o + 2],
                        p = i[o + 3];
                    return e[t] = a * p + l * u + s * d - c * h, e[t + 1] = s * p + l * h + c * u - a * d, e[t + 2] = c * p + l * d + a * h - s * u, e[t + 3] = l * p - a * u - s * h - c * d, e
                }
            }), Object.defineProperties(g.prototype, {
                x: {
                    get: function () {
                        return this._x
                    },
                    set: function (e) {
                        this._x = e, this._onChangeCallback()
                    }
                },
                y: {
                    get: function () {
                        return this._y
                    },
                    set: function (e) {
                        this._y = e, this._onChangeCallback()
                    }
                },
                z: {
                    get: function () {
                        return this._z
                    },
                    set: function (e) {
                        this._z = e, this._onChangeCallback()
                    }
                },
                w: {
                    get: function () {
                        return this._w
                    },
                    set: function (e) {
                        this._w = e, this._onChangeCallback()
                    }
                }
            }), Object.assign(g.prototype, {
                isQuaternion: !0,
                set: function (e, t, n, r) {
                    return this._x = e, this._y = t, this._z = n, this._w = r, this._onChangeCallback(), this
                },
                clone: function () {
                    return new this.constructor(this._x, this._y, this._z, this._w)
                },
                copy: function (e) {
                    return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this._onChangeCallback(), this
                },
                setFromEuler: function (e, t) {
                    if (!e || !e.isEuler) throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
                    var n = e._x,
                        r = e._y,
                        i = e._z,
                        o = e.order,
                        a = Math.cos,
                        s = Math.sin,
                        c = a(n / 2),
                        l = a(r / 2),
                        u = a(i / 2),
                        h = s(n / 2),
                        d = s(r / 2),
                        p = s(i / 2);
                    switch (o) {
                        case "XYZ":
                            this._x = h * l * u + c * d * p, this._y = c * d * u - h * l * p, this._z = c * l * p + h * d * u, this._w = c * l * u - h * d * p;
                            break;
                        case "YXZ":
                            this._x = h * l * u + c * d * p, this._y = c * d * u - h * l * p, this._z = c * l * p - h * d * u, this._w = c * l * u + h * d * p;
                            break;
                        case "ZXY":
                            this._x = h * l * u - c * d * p, this._y = c * d * u + h * l * p, this._z = c * l * p + h * d * u, this._w = c * l * u - h * d * p;
                            break;
                        case "ZYX":
                            this._x = h * l * u - c * d * p, this._y = c * d * u + h * l * p, this._z = c * l * p - h * d * u, this._w = c * l * u + h * d * p;
                            break;
                        case "YZX":
                            this._x = h * l * u + c * d * p, this._y = c * d * u + h * l * p, this._z = c * l * p - h * d * u, this._w = c * l * u - h * d * p;
                            break;
                        case "XZY":
                            this._x = h * l * u - c * d * p, this._y = c * d * u - h * l * p, this._z = c * l * p + h * d * u, this._w = c * l * u + h * d * p;
                            break;
                        default:
                            console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + o)
                    }
                    return !1 !== t && this._onChangeCallback(), this
                },
                setFromAxisAngle: function (e, t) {
                    var n = t / 2,
                        r = Math.sin(n);
                    return this._x = e.x * r, this._y = e.y * r, this._z = e.z * r, this._w = Math.cos(n), this._onChangeCallback(), this
                },
                setFromRotationMatrix: function (e) {
                    var t, n = e.elements,
                        r = n[0],
                        i = n[4],
                        o = n[8],
                        a = n[1],
                        s = n[5],
                        c = n[9],
                        l = n[2],
                        u = n[6],
                        h = n[10],
                        d = r + s + h;
                    return d > 0 ? (t = .5 / Math.sqrt(d + 1), this._w = .25 / t, this._x = (u - c) * t, this._y = (o - l) * t, this._z = (a - i) * t) : r > s && r > h ? (t = 2 * Math.sqrt(1 + r - s - h), this._w = (u - c) / t, this._x = .25 * t, this._y = (i + a) / t, this._z = (o + l) / t) : s > h ? (t = 2 * Math.sqrt(1 + s - r - h), this._w = (o - l) / t, this._x = (i + a) / t, this._y = .25 * t, this._z = (c + u) / t) : (t = 2 * Math.sqrt(1 + h - r - s), this._w = (a - i) / t, this._x = (o + l) / t, this._y = (c + u) / t, this._z = .25 * t), this._onChangeCallback(), this
                },
                setFromUnitVectors: function (e, t) {
                    var n = e.dot(t) + 1;
                    return n < 1e-6 ? (n = 0, Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y, this._y = e.x, this._z = 0, this._w = n) : (this._x = 0, this._y = -e.z, this._z = e.y, this._w = n)) : (this._x = e.y * t.z - e.z * t.y, this._y = e.z * t.x - e.x * t.z, this._z = e.x * t.y - e.y * t.x, this._w = n), this.normalize()
                },
                angleTo: function (e) {
                    return 2 * Math.acos(Math.abs(s.clamp(this.dot(e), -1, 1)))
                },
                rotateTowards: function (e, t) {
                    var n = this.angleTo(e);
                    if (0 === n) return this;
                    var r = Math.min(1, t / n);
                    return this.slerp(e, r), this
                },
                inverse: function () {
                    return this.conjugate()
                },
                conjugate: function () {
                    return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this
                },
                dot: function (e) {
                    return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
                },
                lengthSq: function () {
                    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
                },
                length: function () {
                    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
                },
                normalize: function () {
                    var e = this.length();
                    return 0 === e ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this._onChangeCallback(), this
                },
                multiply: function (e, t) {
                    return void 0 !== t ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e)
                },
                premultiply: function (e) {
                    return this.multiplyQuaternions(e, this)
                },
                multiplyQuaternions: function (e, t) {
                    var n = e._x,
                        r = e._y,
                        i = e._z,
                        o = e._w,
                        a = t._x,
                        s = t._y,
                        c = t._z,
                        l = t._w;
                    return this._x = n * l + o * a + r * c - i * s, this._y = r * l + o * s + i * a - n * c, this._z = i * l + o * c + n * s - r * a, this._w = o * l - n * a - r * s - i * c, this._onChangeCallback(), this
                },
                slerp: function (e, t) {
                    if (0 === t) return this;
                    if (1 === t) return this.copy(e);
                    var n = this._x,
                        r = this._y,
                        i = this._z,
                        o = this._w,
                        a = o * e._w + n * e._x + r * e._y + i * e._z;
                    if (a < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, a = -a) : this.copy(e), a >= 1) return this._w = o, this._x = n, this._y = r, this._z = i, this;
                    var s = 1 - a * a;
                    if (s <= Number.EPSILON) {
                        var c = 1 - t;
                        return this._w = c * o + t * this._w, this._x = c * n + t * this._x, this._y = c * r + t * this._y, this._z = c * i + t * this._z, this.normalize(), this._onChangeCallback(), this
                    }
                    var l = Math.sqrt(s),
                        u = Math.atan2(l, a),
                        h = Math.sin((1 - t) * u) / l,
                        d = Math.sin(t * u) / l;
                    return this._w = o * h + this._w * d, this._x = n * h + this._x * d, this._y = r * h + this._y * d, this._z = i * h + this._z * d, this._onChangeCallback(), this
                },
                equals: function (e) {
                    return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w
                },
                fromArray: function (e, t) {
                    return void 0 === t && (t = 0), this._x = e[t], this._y = e[t + 1], this._z = e[t + 2], this._w = e[t + 3], this._onChangeCallback(), this
                },
                toArray: function (e, t) {
                    return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._w, e
                },
                fromBufferAttribute: function (e, t) {
                    return this._x = e.getX(t), this._y = e.getY(t), this._z = e.getZ(t), this._w = e.getW(t), this
                },
                _onChange: function (e) {
                    return this._onChangeCallback = e, this
                },
                _onChangeCallback: function () {}
            });
            var v = new _,
                y = new g;

            function _(e, t, n) {
                this.x = e || 0, this.y = t || 0, this.z = n || 0
            }
            Object.assign(_.prototype, {
                isVector3: !0,
                set: function (e, t, n) {
                    return this.x = e, this.y = t, this.z = n, this
                },
                setScalar: function (e) {
                    return this.x = e, this.y = e, this.z = e, this
                },
                setX: function (e) {
                    return this.x = e, this
                },
                setY: function (e) {
                    return this.y = e, this
                },
                setZ: function (e) {
                    return this.z = e, this
                },
                setComponent: function (e, t) {
                    switch (e) {
                        case 0:
                            this.x = t;
                            break;
                        case 1:
                            this.y = t;
                            break;
                        case 2:
                            this.z = t;
                            break;
                        default:
                            throw new Error("index is out of range: " + e)
                    }
                    return this
                },
                getComponent: function (e) {
                    switch (e) {
                        case 0:
                            return this.x;
                        case 1:
                            return this.y;
                        case 2:
                            return this.z;
                        default:
                            throw new Error("index is out of range: " + e)
                    }
                },
                clone: function () {
                    return new this.constructor(this.x, this.y, this.z)
                },
                copy: function (e) {
                    return this.x = e.x, this.y = e.y, this.z = e.z, this
                },
                add: function (e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this)
                },
                addScalar: function (e) {
                    return this.x += e, this.y += e, this.z += e, this
                },
                addVectors: function (e, t) {
                    return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this
                },
                addScaledVector: function (e, t) {
                    return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this
                },
                sub: function (e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this)
                },
                subScalar: function (e) {
                    return this.x -= e, this.y -= e, this.z -= e, this
                },
                subVectors: function (e, t) {
                    return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this
                },
                multiply: function (e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(e, t)) : (this.x *= e.x, this.y *= e.y, this.z *= e.z, this)
                },
                multiplyScalar: function (e) {
                    return this.x *= e, this.y *= e, this.z *= e, this
                },
                multiplyVectors: function (e, t) {
                    return this.x = e.x * t.x, this.y = e.y * t.y, this.z = e.z * t.z, this
                },
                applyEuler: function (e) {
                    return e && e.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), this.applyQuaternion(y.setFromEuler(e))
                },
                applyAxisAngle: function (e, t) {
                    return this.applyQuaternion(y.setFromAxisAngle(e, t))
                },
                applyMatrix3: function (e) {
                    var t = this.x,
                        n = this.y,
                        r = this.z,
                        i = e.elements;
                    return this.x = i[0] * t + i[3] * n + i[6] * r, this.y = i[1] * t + i[4] * n + i[7] * r, this.z = i[2] * t + i[5] * n + i[8] * r, this
                },
                applyNormalMatrix: function (e) {
                    return this.applyMatrix3(e).normalize()
                },
                applyMatrix4: function (e) {
                    var t = this.x,
                        n = this.y,
                        r = this.z,
                        i = e.elements,
                        o = 1 / (i[3] * t + i[7] * n + i[11] * r + i[15]);
                    return this.x = (i[0] * t + i[4] * n + i[8] * r + i[12]) * o, this.y = (i[1] * t + i[5] * n + i[9] * r + i[13]) * o, this.z = (i[2] * t + i[6] * n + i[10] * r + i[14]) * o, this
                },
                applyQuaternion: function (e) {
                    var t = this.x,
                        n = this.y,
                        r = this.z,
                        i = e.x,
                        o = e.y,
                        a = e.z,
                        s = e.w,
                        c = s * t + o * r - a * n,
                        l = s * n + a * t - i * r,
                        u = s * r + i * n - o * t,
                        h = -i * t - o * n - a * r;
                    return this.x = c * s + h * -i + l * -a - u * -o, this.y = l * s + h * -o + u * -i - c * -a, this.z = u * s + h * -a + c * -o - l * -i, this
                },
                project: function (e) {
                    return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)
                },
                unproject: function (e) {
                    return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)
                },
                transformDirection: function (e) {
                    var t = this.x,
                        n = this.y,
                        r = this.z,
                        i = e.elements;
                    return this.x = i[0] * t + i[4] * n + i[8] * r, this.y = i[1] * t + i[5] * n + i[9] * r, this.z = i[2] * t + i[6] * n + i[10] * r, this.normalize()
                },
                divide: function (e) {
                    return this.x /= e.x, this.y /= e.y, this.z /= e.z, this
                },
                divideScalar: function (e) {
                    return this.multiplyScalar(1 / e)
                },
                min: function (e) {
                    return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this
                },
                max: function (e) {
                    return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this
                },
                clamp: function (e, t) {
                    return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this
                },
                clampScalar: function (e, t) {
                    return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this
                },
                clampLength: function (e, t) {
                    var n = this.length();
                    return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
                },
                floor: function () {
                    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this
                },
                ceil: function () {
                    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this
                },
                round: function () {
                    return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this
                },
                roundToZero: function () {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this
                },
                negate: function () {
                    return this.x = -this.x, this.y = -this.y, this.z = -this.z, this
                },
                dot: function (e) {
                    return this.x * e.x + this.y * e.y + this.z * e.z
                },
                lengthSq: function () {
                    return this.x * this.x + this.y * this.y + this.z * this.z
                },
                length: function () {
                    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
                },
                manhattanLength: function () {
                    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
                },
                normalize: function () {
                    return this.divideScalar(this.length() || 1)
                },
                setLength: function (e) {
                    return this.normalize().multiplyScalar(e)
                },
                lerp: function (e, t) {
                    return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this
                },
                lerpVectors: function (e, t, n) {
                    return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this
                },
                cross: function (e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(e, t)) : this.crossVectors(this, e)
                },
                crossVectors: function (e, t) {
                    var n = e.x,
                        r = e.y,
                        i = e.z,
                        o = t.x,
                        a = t.y,
                        s = t.z;
                    return this.x = r * s - i * a, this.y = i * o - n * s, this.z = n * a - r * o, this
                },
                projectOnVector: function (e) {
                    var t = e.lengthSq();
                    if (0 === t) return this.set(0, 0, 0);
                    var n = e.dot(this) / t;
                    return this.copy(e).multiplyScalar(n)
                },
                projectOnPlane: function (e) {
                    return v.copy(this).projectOnVector(e), this.sub(v)
                },
                reflect: function (e) {
                    return this.sub(v.copy(e).multiplyScalar(2 * this.dot(e)))
                },
                angleTo: function (e) {
                    var t = Math.sqrt(this.lengthSq() * e.lengthSq());
                    if (0 === t) return Math.PI / 2;
                    var n = this.dot(e) / t;
                    return Math.acos(s.clamp(n, -1, 1))
                },
                distanceTo: function (e) {
                    return Math.sqrt(this.distanceToSquared(e))
                },
                distanceToSquared: function (e) {
                    var t = this.x - e.x,
                        n = this.y - e.y,
                        r = this.z - e.z;
                    return t * t + n * n + r * r
                },
                manhattanDistanceTo: function (e) {
                    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z)
                },
                setFromSpherical: function (e) {
                    return this.setFromSphericalCoords(e.radius, e.phi, e.theta)
                },
                setFromSphericalCoords: function (e, t, n) {
                    var r = Math.sin(t) * e;
                    return this.x = r * Math.sin(n), this.y = Math.cos(t) * e, this.z = r * Math.cos(n), this
                },
                setFromCylindrical: function (e) {
                    return this.setFromCylindricalCoords(e.radius, e.theta, e.y)
                },
                setFromCylindricalCoords: function (e, t, n) {
                    return this.x = e * Math.sin(t), this.y = n, this.z = e * Math.cos(t), this
                },
                setFromMatrixPosition: function (e) {
                    var t = e.elements;
                    return this.x = t[12], this.y = t[13], this.z = t[14], this
                },
                setFromMatrixScale: function (e) {
                    var t = this.setFromMatrixColumn(e, 0).length(),
                        n = this.setFromMatrixColumn(e, 1).length(),
                        r = this.setFromMatrixColumn(e, 2).length();
                    return this.x = t, this.y = n, this.z = r, this
                },
                setFromMatrixColumn: function (e, t) {
                    return this.fromArray(e.elements, 4 * t)
                },
                setFromMatrix3Column: function (e, t) {
                    return this.fromArray(e.elements, 3 * t)
                },
                equals: function (e) {
                    return e.x === this.x && e.y === this.y && e.z === this.z
                },
                fromArray: function (e, t) {
                    return void 0 === t && (t = 0), this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this
                },
                toArray: function (e, t) {
                    return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e
                },
                fromBufferAttribute: function (e, t, n) {
                    return void 0 !== n && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this
                },
                random: function () {
                    return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this
                }
            });
            var x = new _,
                b = new A,
                w = new _(0, 0, 0),
                M = new _(1, 1, 1),
                T = new _,
                S = new _,
                E = new _;

            function A() {
                this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
            }
            Object.assign(A.prototype, {
                isMatrix4: !0,
                set: function (e, t, n, r, i, o, a, s, c, l, u, h, d, p, f, m) {
                    var g = this.elements;
                    return g[0] = e, g[4] = t, g[8] = n, g[12] = r, g[1] = i, g[5] = o, g[9] = a, g[13] = s, g[2] = c, g[6] = l, g[10] = u, g[14] = h, g[3] = d, g[7] = p, g[11] = f, g[15] = m, this
                },
                identity: function () {
                    return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
                },
                clone: function () {
                    return (new A).fromArray(this.elements)
                },
                copy: function (e) {
                    var t = this.elements,
                        n = e.elements;
                    return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], t[9] = n[9], t[10] = n[10], t[11] = n[11], t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15], this
                },
                copyPosition: function (e) {
                    var t = this.elements,
                        n = e.elements;
                    return t[12] = n[12], t[13] = n[13], t[14] = n[14], this
                },
                extractBasis: function (e, t, n) {
                    return e.setFromMatrixColumn(this, 0), t.setFromMatrixColumn(this, 1), n.setFromMatrixColumn(this, 2), this
                },
                makeBasis: function (e, t, n) {
                    return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1), this
                },
                extractRotation: function (e) {
                    var t = this.elements,
                        n = e.elements,
                        r = 1 / x.setFromMatrixColumn(e, 0).length(),
                        i = 1 / x.setFromMatrixColumn(e, 1).length(),
                        o = 1 / x.setFromMatrixColumn(e, 2).length();
                    return t[0] = n[0] * r, t[1] = n[1] * r, t[2] = n[2] * r, t[3] = 0, t[4] = n[4] * i, t[5] = n[5] * i, t[6] = n[6] * i, t[7] = 0, t[8] = n[8] * o, t[9] = n[9] * o, t[10] = n[10] * o, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this
                },
                makeRotationFromEuler: function (e) {
                    e && e.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
                    var t = this.elements,
                        n = e.x,
                        r = e.y,
                        i = e.z,
                        o = Math.cos(n),
                        a = Math.sin(n),
                        s = Math.cos(r),
                        c = Math.sin(r),
                        l = Math.cos(i),
                        u = Math.sin(i);
                    if ("XYZ" === e.order) {
                        var h = o * l,
                            d = o * u,
                            p = a * l,
                            f = a * u;
                        t[0] = s * l, t[4] = -s * u, t[8] = c, t[1] = d + p * c, t[5] = h - f * c, t[9] = -a * s, t[2] = f - h * c, t[6] = p + d * c, t[10] = o * s
                    } else if ("YXZ" === e.order) {
                        var m = s * l,
                            g = s * u,
                            v = c * l,
                            y = c * u;
                        t[0] = m + y * a, t[4] = v * a - g, t[8] = o * c, t[1] = o * u, t[5] = o * l, t[9] = -a, t[2] = g * a - v, t[6] = y + m * a, t[10] = o * s
                    } else if ("ZXY" === e.order) {
                        m = s * l, g = s * u, v = c * l, y = c * u;
                        t[0] = m - y * a, t[4] = -o * u, t[8] = v + g * a, t[1] = g + v * a, t[5] = o * l, t[9] = y - m * a, t[2] = -o * c, t[6] = a, t[10] = o * s
                    } else if ("ZYX" === e.order) {
                        h = o * l, d = o * u, p = a * l, f = a * u;
                        t[0] = s * l, t[4] = p * c - d, t[8] = h * c + f, t[1] = s * u, t[5] = f * c + h, t[9] = d * c - p, t[2] = -c, t[6] = a * s, t[10] = o * s
                    } else if ("YZX" === e.order) {
                        var _ = o * s,
                            x = o * c,
                            b = a * s,
                            w = a * c;
                        t[0] = s * l, t[4] = w - _ * u, t[8] = b * u + x, t[1] = u, t[5] = o * l, t[9] = -a * l, t[2] = -c * l, t[6] = x * u + b, t[10] = _ - w * u
                    } else if ("XZY" === e.order) {
                        _ = o * s, x = o * c, b = a * s, w = a * c;
                        t[0] = s * l, t[4] = -u, t[8] = c * l, t[1] = _ * u + w, t[5] = o * l, t[9] = x * u - b, t[2] = b * u - x, t[6] = a * l, t[10] = w * u + _
                    }
                    return t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this
                },
                makeRotationFromQuaternion: function (e) {
                    return this.compose(w, e, M)
                },
                lookAt: function (e, t, n) {
                    var r = this.elements;
                    return E.subVectors(e, t), 0 === E.lengthSq() && (E.z = 1), E.normalize(), T.crossVectors(n, E), 0 === T.lengthSq() && (1 === Math.abs(n.z) ? E.x += 1e-4 : E.z += 1e-4, E.normalize(), T.crossVectors(n, E)), T.normalize(), S.crossVectors(E, T), r[0] = T.x, r[4] = S.x, r[8] = E.x, r[1] = T.y, r[5] = S.y, r[9] = E.y, r[2] = T.z, r[6] = S.z, r[10] = E.z, this
                },
                multiply: function (e, t) {
                    return void 0 !== t ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e)
                },
                premultiply: function (e) {
                    return this.multiplyMatrices(e, this)
                },
                multiplyMatrices: function (e, t) {
                    var n = e.elements,
                        r = t.elements,
                        i = this.elements,
                        o = n[0],
                        a = n[4],
                        s = n[8],
                        c = n[12],
                        l = n[1],
                        u = n[5],
                        h = n[9],
                        d = n[13],
                        p = n[2],
                        f = n[6],
                        m = n[10],
                        g = n[14],
                        v = n[3],
                        y = n[7],
                        _ = n[11],
                        x = n[15],
                        b = r[0],
                        w = r[4],
                        M = r[8],
                        T = r[12],
                        S = r[1],
                        E = r[5],
                        A = r[9],
                        j = r[13],
                        L = r[2],
                        C = r[6],
                        P = r[10],
                        O = r[14],
                        R = r[3],
                        D = r[7],
                        N = r[11],
                        I = r[15];
                    return i[0] = o * b + a * S + s * L + c * R, i[4] = o * w + a * E + s * C + c * D, i[8] = o * M + a * A + s * P + c * N, i[12] = o * T + a * j + s * O + c * I, i[1] = l * b + u * S + h * L + d * R, i[5] = l * w + u * E + h * C + d * D, i[9] = l * M + u * A + h * P + d * N, i[13] = l * T + u * j + h * O + d * I, i[2] = p * b + f * S + m * L + g * R, i[6] = p * w + f * E + m * C + g * D, i[10] = p * M + f * A + m * P + g * N, i[14] = p * T + f * j + m * O + g * I, i[3] = v * b + y * S + _ * L + x * R, i[7] = v * w + y * E + _ * C + x * D, i[11] = v * M + y * A + _ * P + x * N, i[15] = v * T + y * j + _ * O + x * I, this
                },
                multiplyScalar: function (e) {
                    var t = this.elements;
                    return t[0] *= e, t[4] *= e, t[8] *= e, t[12] *= e, t[1] *= e, t[5] *= e, t[9] *= e, t[13] *= e, t[2] *= e, t[6] *= e, t[10] *= e, t[14] *= e, t[3] *= e, t[7] *= e, t[11] *= e, t[15] *= e, this
                },
                determinant: function () {
                    var e = this.elements,
                        t = e[0],
                        n = e[4],
                        r = e[8],
                        i = e[12],
                        o = e[1],
                        a = e[5],
                        s = e[9],
                        c = e[13],
                        l = e[2],
                        u = e[6],
                        h = e[10],
                        d = e[14];
                    return e[3] * (+i * s * u - r * c * u - i * a * h + n * c * h + r * a * d - n * s * d) + e[7] * (+t * s * d - t * c * h + i * o * h - r * o * d + r * c * l - i * s * l) + e[11] * (+t * c * u - t * a * d - i * o * u + n * o * d + i * a * l - n * c * l) + e[15] * (-r * a * l - t * s * u + t * a * h + r * o * u - n * o * h + n * s * l)
                },
                transpose: function () {
                    var e, t = this.elements;
                    return e = t[1], t[1] = t[4], t[4] = e, e = t[2], t[2] = t[8], t[8] = e, e = t[6], t[6] = t[9], t[9] = e, e = t[3], t[3] = t[12], t[12] = e, e = t[7], t[7] = t[13], t[13] = e, e = t[11], t[11] = t[14], t[14] = e, this
                },
                setPosition: function (e, t, n) {
                    var r = this.elements;
                    return e.isVector3 ? (r[12] = e.x, r[13] = e.y, r[14] = e.z) : (r[12] = e, r[13] = t, r[14] = n), this
                },
                getInverse: function (e, t) {
                    void 0 !== t && console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");
                    var n = this.elements,
                        r = e.elements,
                        i = r[0],
                        o = r[1],
                        a = r[2],
                        s = r[3],
                        c = r[4],
                        l = r[5],
                        u = r[6],
                        h = r[7],
                        d = r[8],
                        p = r[9],
                        f = r[10],
                        m = r[11],
                        g = r[12],
                        v = r[13],
                        y = r[14],
                        _ = r[15],
                        x = p * y * h - v * f * h + v * u * m - l * y * m - p * u * _ + l * f * _,
                        b = g * f * h - d * y * h - g * u * m + c * y * m + d * u * _ - c * f * _,
                        w = d * v * h - g * p * h + g * l * m - c * v * m - d * l * _ + c * p * _,
                        M = g * p * u - d * v * u - g * l * f + c * v * f + d * l * y - c * p * y,
                        T = i * x + o * b + a * w + s * M;
                    if (0 === T) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                    var S = 1 / T;
                    return n[0] = x * S, n[1] = (v * f * s - p * y * s - v * a * m + o * y * m + p * a * _ - o * f * _) * S, n[2] = (l * y * s - v * u * s + v * a * h - o * y * h - l * a * _ + o * u * _) * S, n[3] = (p * u * s - l * f * s - p * a * h + o * f * h + l * a * m - o * u * m) * S, n[4] = b * S, n[5] = (d * y * s - g * f * s + g * a * m - i * y * m - d * a * _ + i * f * _) * S, n[6] = (g * u * s - c * y * s - g * a * h + i * y * h + c * a * _ - i * u * _) * S, n[7] = (c * f * s - d * u * s + d * a * h - i * f * h - c * a * m + i * u * m) * S, n[8] = w * S, n[9] = (g * p * s - d * v * s - g * o * m + i * v * m + d * o * _ - i * p * _) * S, n[10] = (c * v * s - g * l * s + g * o * h - i * v * h - c * o * _ + i * l * _) * S, n[11] = (d * l * s - c * p * s - d * o * h + i * p * h + c * o * m - i * l * m) * S, n[12] = M * S, n[13] = (d * v * a - g * p * a + g * o * f - i * v * f - d * o * y + i * p * y) * S, n[14] = (g * l * a - c * v * a - g * o * u + i * v * u + c * o * y - i * l * y) * S, n[15] = (c * p * a - d * l * a + d * o * u - i * p * u - c * o * f + i * l * f) * S, this
                },
                scale: function (e) {
                    var t = this.elements,
                        n = e.x,
                        r = e.y,
                        i = e.z;
                    return t[0] *= n, t[4] *= r, t[8] *= i, t[1] *= n, t[5] *= r, t[9] *= i, t[2] *= n, t[6] *= r, t[10] *= i, t[3] *= n, t[7] *= r, t[11] *= i, this
                },
                getMaxScaleOnAxis: function () {
                    var e = this.elements,
                        t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
                        n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
                        r = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
                    return Math.sqrt(Math.max(t, n, r))
                },
                makeTranslation: function (e, t, n) {
                    return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1), this
                },
                makeRotationX: function (e) {
                    var t = Math.cos(e),
                        n = Math.sin(e);
                    return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this
                },
                makeRotationY: function (e) {
                    var t = Math.cos(e),
                        n = Math.sin(e);
                    return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this
                },
                makeRotationZ: function (e) {
                    var t = Math.cos(e),
                        n = Math.sin(e);
                    return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
                },
                makeRotationAxis: function (e, t) {
                    var n = Math.cos(t),
                        r = Math.sin(t),
                        i = 1 - n,
                        o = e.x,
                        a = e.y,
                        s = e.z,
                        c = i * o,
                        l = i * a;
                    return this.set(c * o + n, c * a - r * s, c * s + r * a, 0, c * a + r * s, l * a + n, l * s - r * o, 0, c * s - r * a, l * s + r * o, i * s * s + n, 0, 0, 0, 0, 1), this
                },
                makeScale: function (e, t, n) {
                    return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this
                },
                makeShear: function (e, t, n) {
                    return this.set(1, t, n, 0, e, 1, n, 0, e, t, 1, 0, 0, 0, 0, 1), this
                },
                compose: function (e, t, n) {
                    var r = this.elements,
                        i = t._x,
                        o = t._y,
                        a = t._z,
                        s = t._w,
                        c = i + i,
                        l = o + o,
                        u = a + a,
                        h = i * c,
                        d = i * l,
                        p = i * u,
                        f = o * l,
                        m = o * u,
                        g = a * u,
                        v = s * c,
                        y = s * l,
                        _ = s * u,
                        x = n.x,
                        b = n.y,
                        w = n.z;
                    return r[0] = (1 - (f + g)) * x, r[1] = (d + _) * x, r[2] = (p - y) * x, r[3] = 0, r[4] = (d - _) * b, r[5] = (1 - (h + g)) * b, r[6] = (m + v) * b, r[7] = 0, r[8] = (p + y) * w, r[9] = (m - v) * w, r[10] = (1 - (h + f)) * w, r[11] = 0, r[12] = e.x, r[13] = e.y, r[14] = e.z, r[15] = 1, this
                },
                decompose: function (e, t, n) {
                    var r = this.elements,
                        i = x.set(r[0], r[1], r[2]).length(),
                        o = x.set(r[4], r[5], r[6]).length(),
                        a = x.set(r[8], r[9], r[10]).length();
                    this.determinant() < 0 && (i = -i), e.x = r[12], e.y = r[13], e.z = r[14], b.copy(this);
                    var s = 1 / i,
                        c = 1 / o,
                        l = 1 / a;
                    return b.elements[0] *= s, b.elements[1] *= s, b.elements[2] *= s, b.elements[4] *= c, b.elements[5] *= c, b.elements[6] *= c, b.elements[8] *= l, b.elements[9] *= l, b.elements[10] *= l, t.setFromRotationMatrix(b), n.x = i, n.y = o, n.z = a, this
                },
                makePerspective: function (e, t, n, r, i, o) {
                    void 0 === o && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
                    var a = this.elements,
                        s = 2 * i / (t - e),
                        c = 2 * i / (n - r),
                        l = (t + e) / (t - e),
                        u = (n + r) / (n - r),
                        h = -(o + i) / (o - i),
                        d = -2 * o * i / (o - i);
                    return a[0] = s, a[4] = 0, a[8] = l, a[12] = 0, a[1] = 0, a[5] = c, a[9] = u, a[13] = 0, a[2] = 0, a[6] = 0, a[10] = h, a[14] = d, a[3] = 0, a[7] = 0, a[11] = -1, a[15] = 0, this
                },
                makeOrthographic: function (e, t, n, r, i, o) {
                    var a = this.elements,
                        s = 1 / (t - e),
                        c = 1 / (n - r),
                        l = 1 / (o - i),
                        u = (t + e) * s,
                        h = (n + r) * c,
                        d = (o + i) * l;
                    return a[0] = 2 * s, a[4] = 0, a[8] = 0, a[12] = -u, a[1] = 0, a[5] = 2 * c, a[9] = 0, a[13] = -h, a[2] = 0, a[6] = 0, a[10] = -2 * l, a[14] = -d, a[3] = 0, a[7] = 0, a[11] = 0, a[15] = 1, this
                },
                equals: function (e) {
                    for (var t = this.elements, n = e.elements, r = 0; r < 16; r++)
                        if (t[r] !== n[r]) return !1;
                    return !0
                },
                fromArray: function (e, t) {
                    void 0 === t && (t = 0);
                    for (var n = 0; n < 16; n++) this.elements[n] = e[n + t];
                    return this
                },
                toArray: function (e, t) {
                    void 0 === e && (e = []), void 0 === t && (t = 0);
                    var n = this.elements;
                    return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e[t + 9] = n[9], e[t + 10] = n[10], e[t + 11] = n[11], e[t + 12] = n[12], e[t + 13] = n[13], e[t + 14] = n[14], e[t + 15] = n[15], e
                }
            });
            var j = new A,
                L = new g;

            function C(e, t, n, r) {
                this._x = e || 0, this._y = t || 0, this._z = n || 0, this._order = r || C.DefaultOrder
            }

            function P() {
                this.mask = 1
            }
            C.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"], C.DefaultOrder = "XYZ", Object.defineProperties(C.prototype, {
                x: {
                    get: function () {
                        return this._x
                    },
                    set: function (e) {
                        this._x = e, this._onChangeCallback()
                    }
                },
                y: {
                    get: function () {
                        return this._y
                    },
                    set: function (e) {
                        this._y = e, this._onChangeCallback()
                    }
                },
                z: {
                    get: function () {
                        return this._z
                    },
                    set: function (e) {
                        this._z = e, this._onChangeCallback()
                    }
                },
                order: {
                    get: function () {
                        return this._order
                    },
                    set: function (e) {
                        this._order = e, this._onChangeCallback()
                    }
                }
            }), Object.assign(C.prototype, {
                isEuler: !0,
                set: function (e, t, n, r) {
                    return this._x = e, this._y = t, this._z = n, this._order = r || this._order, this._onChangeCallback(), this
                },
                clone: function () {
                    return new this.constructor(this._x, this._y, this._z, this._order)
                },
                copy: function (e) {
                    return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this._onChangeCallback(), this
                },
                setFromRotationMatrix: function (e, t, n) {
                    var r = s.clamp,
                        i = e.elements,
                        o = i[0],
                        a = i[4],
                        c = i[8],
                        l = i[1],
                        u = i[5],
                        h = i[9],
                        d = i[2],
                        p = i[6],
                        f = i[10];
                    switch (t = t || this._order) {
                        case "XYZ":
                            this._y = Math.asin(r(c, -1, 1)), Math.abs(c) < .9999999 ? (this._x = Math.atan2(-h, f), this._z = Math.atan2(-a, o)) : (this._x = Math.atan2(p, u), this._z = 0);
                            break;
                        case "YXZ":
                            this._x = Math.asin(-r(h, -1, 1)), Math.abs(h) < .9999999 ? (this._y = Math.atan2(c, f), this._z = Math.atan2(l, u)) : (this._y = Math.atan2(-d, o), this._z = 0);
                            break;
                        case "ZXY":
                            this._x = Math.asin(r(p, -1, 1)), Math.abs(p) < .9999999 ? (this._y = Math.atan2(-d, f), this._z = Math.atan2(-a, u)) : (this._y = 0, this._z = Math.atan2(l, o));
                            break;
                        case "ZYX":
                            this._y = Math.asin(-r(d, -1, 1)), Math.abs(d) < .9999999 ? (this._x = Math.atan2(p, f), this._z = Math.atan2(l, o)) : (this._x = 0, this._z = Math.atan2(-a, u));
                            break;
                        case "YZX":
                            this._z = Math.asin(r(l, -1, 1)), Math.abs(l) < .9999999 ? (this._x = Math.atan2(-h, u), this._y = Math.atan2(-d, o)) : (this._x = 0, this._y = Math.atan2(c, f));
                            break;
                        case "XZY":
                            this._z = Math.asin(-r(a, -1, 1)), Math.abs(a) < .9999999 ? (this._x = Math.atan2(p, u), this._y = Math.atan2(c, o)) : (this._x = Math.atan2(-h, f), this._y = 0);
                            break;
                        default:
                            console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + t)
                    }
                    return this._order = t, !1 !== n && this._onChangeCallback(), this
                },
                setFromQuaternion: function (e, t, n) {
                    return j.makeRotationFromQuaternion(e), this.setFromRotationMatrix(j, t, n)
                },
                setFromVector3: function (e, t) {
                    return this.set(e.x, e.y, e.z, t || this._order)
                },
                reorder: function (e) {
                    return L.setFromEuler(this), this.setFromQuaternion(L, e)
                },
                equals: function (e) {
                    return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order
                },
                fromArray: function (e) {
                    return this._x = e[0], this._y = e[1], this._z = e[2], void 0 !== e[3] && (this._order = e[3]), this._onChangeCallback(), this
                },
                toArray: function (e, t) {
                    return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._order, e
                },
                toVector3: function (e) {
                    return e ? e.set(this._x, this._y, this._z) : new _(this._x, this._y, this._z)
                },
                _onChange: function (e) {
                    return this._onChangeCallback = e, this
                },
                _onChangeCallback: function () {}
            }), Object.assign(P.prototype, {
                set: function (e) {
                    this.mask = 1 << e | 0
                },
                enable: function (e) {
                    this.mask |= 1 << e | 0
                },
                enableAll: function () {
                    this.mask = -1
                },
                toggle: function (e) {
                    this.mask ^= 1 << e | 0
                },
                disable: function (e) {
                    this.mask &= ~(1 << e | 0)
                },
                disableAll: function () {
                    this.mask = 0
                },
                test: function (e) {
                    return 0 != (this.mask & e.mask)
                }
            });
            let O = 0;
            const R = new _,
                D = new g,
                N = new A,
                I = new _,
                k = new _,
                z = new _,
                B = new g,
                F = new _(1, 0, 0),
                U = new _(0, 1, 0),
                H = new _(0, 0, 1),
                G = {
                    type: "added"
                },
                V = {
                    type: "removed"
                };

            function W() {
                Object.defineProperty(this, "id", {
                    value: O++
                }), this.uuid = s.generateUUID(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = W.DefaultUp.clone();
                var e = new _,
                    t = new C,
                    n = new g,
                    r = new _(1, 1, 1);
                t._onChange((function () {
                    n.setFromEuler(t, !1)
                })), n._onChange((function () {
                    t.setFromQuaternion(n, void 0, !1)
                })), Object.defineProperties(this, {
                    position: {
                        configurable: !0,
                        enumerable: !0,
                        value: e
                    },
                    rotation: {
                        configurable: !0,
                        enumerable: !0,
                        value: t
                    },
                    quaternion: {
                        configurable: !0,
                        enumerable: !0,
                        value: n
                    },
                    scale: {
                        configurable: !0,
                        enumerable: !0,
                        value: r
                    },
                    modelViewMatrix: {
                        value: new A
                    },
                    normalMatrix: {
                        value: new l
                    }
                }), this.matrix = new A, this.matrixWorld = new A, this.matrixAutoUpdate = W.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = !1, this.layers = new P, this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.userData = {}
            }

            function q() {
                W.call(this), this.type = "Scene", this.background = null, this.environment = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0, "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
                    detail: this
                }))
            }
            W.DefaultUp = new _(0, 1, 0), W.DefaultMatrixAutoUpdate = !0, W.prototype = Object.assign(Object.create(r.prototype), {
                constructor: W,
                isObject3D: !0,
                onBeforeRender: function () {},
                onAfterRender: function () {},
                applyMatrix4: function (e) {
                    this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(e), this.matrix.decompose(this.position, this.quaternion, this.scale)
                },
                applyQuaternion: function (e) {
                    return this.quaternion.premultiply(e), this
                },
                setRotationFromAxisAngle: function (e, t) {
                    this.quaternion.setFromAxisAngle(e, t)
                },
                setRotationFromEuler: function (e) {
                    this.quaternion.setFromEuler(e, !0)
                },
                setRotationFromMatrix: function (e) {
                    this.quaternion.setFromRotationMatrix(e)
                },
                setRotationFromQuaternion: function (e) {
                    this.quaternion.copy(e)
                },
                rotateOnAxis: function (e, t) {
                    return D.setFromAxisAngle(e, t), this.quaternion.multiply(D), this
                },
                rotateOnWorldAxis: function (e, t) {
                    return D.setFromAxisAngle(e, t), this.quaternion.premultiply(D), this
                },
                rotateX: function (e) {
                    return this.rotateOnAxis(F, e)
                },
                rotateY: function (e) {
                    return this.rotateOnAxis(U, e)
                },
                rotateZ: function (e) {
                    return this.rotateOnAxis(H, e)
                },
                translateOnAxis: function (e, t) {
                    return R.copy(e).applyQuaternion(this.quaternion), this.position.add(R.multiplyScalar(t)), this
                },
                translateX: function (e) {
                    return this.translateOnAxis(F, e)
                },
                translateY: function (e) {
                    return this.translateOnAxis(U, e)
                },
                translateZ: function (e) {
                    return this.translateOnAxis(H, e)
                },
                localToWorld: function (e) {
                    return e.applyMatrix4(this.matrixWorld)
                },
                worldToLocal: function (e) {
                    return e.applyMatrix4(N.getInverse(this.matrixWorld))
                },
                lookAt: function (e, t, n) {
                    e.isVector3 ? I.copy(e) : I.set(e, t, n);
                    var r = this.parent;
                    this.updateWorldMatrix(!0, !1), k.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? N.lookAt(k, I, this.up) : N.lookAt(I, k, this.up), this.quaternion.setFromRotationMatrix(N), r && (N.extractRotation(r.matrixWorld), D.setFromRotationMatrix(N), this.quaternion.premultiply(D.inverse()))
                },
                add: function (e) {
                    if (arguments.length > 1) {
                        for (var t = 0; t < arguments.length; t++) this.add(arguments[t]);
                        return this
                    }
                    return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e && e.isObject3D ? (null !== e.parent && e.parent.remove(e), e.parent = this, this.children.push(e), e.dispatchEvent(G)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this)
                },
                remove: function (e) {
                    if (arguments.length > 1) {
                        for (var t = 0; t < arguments.length; t++) this.remove(arguments[t]);
                        return this
                    }
                    var n = this.children.indexOf(e);
                    return -1 !== n && (e.parent = null, this.children.splice(n, 1), e.dispatchEvent(V)), this
                },
                attach: function (e) {
                    return this.updateWorldMatrix(!0, !1), N.getInverse(this.matrixWorld), null !== e.parent && (e.parent.updateWorldMatrix(!0, !1), N.multiply(e.parent.matrixWorld)), e.applyMatrix4(N), e.updateWorldMatrix(!1, !1), this.add(e), this
                },
                getObjectById: function (e) {
                    return this.getObjectByProperty("id", e)
                },
                getObjectByName: function (e) {
                    return this.getObjectByProperty("name", e)
                },
                getObjectByProperty: function (e, t) {
                    if (this[e] === t) return this;
                    for (var n = 0, r = this.children.length; n < r; n++) {
                        var i = this.children[n].getObjectByProperty(e, t);
                        if (void 0 !== i) return i
                    }
                },
                getWorldPosition: function (e) {
                    return void 0 === e && (console.warn("THREE.Object3D: .getWorldPosition() target is now required"), e = new _), this.updateMatrixWorld(!0), e.setFromMatrixPosition(this.matrixWorld)
                },
                getWorldQuaternion: function (e) {
                    return void 0 === e && (console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"), e = new g), this.updateMatrixWorld(!0), this.matrixWorld.decompose(k, e, z), e
                },
                getWorldScale: function (e) {
                    return void 0 === e && (console.warn("THREE.Object3D: .getWorldScale() target is now required"), e = new _), this.updateMatrixWorld(!0), this.matrixWorld.decompose(k, B, e), e
                },
                getWorldDirection: function (e) {
                    void 0 === e && (console.warn("THREE.Object3D: .getWorldDirection() target is now required"), e = new _), this.updateMatrixWorld(!0);
                    var t = this.matrixWorld.elements;
                    return e.set(t[8], t[9], t[10]).normalize()
                },
                raycast: function () {},
                traverse: function (e) {
                    e(this);
                    for (var t = this.children, n = 0, r = t.length; n < r; n++) t[n].traverse(e)
                },
                traverseVisible: function (e) {
                    if (!1 !== this.visible) {
                        e(this);
                        for (var t = this.children, n = 0, r = t.length; n < r; n++) t[n].traverseVisible(e)
                    }
                },
                traverseAncestors: function (e) {
                    var t = this.parent;
                    null !== t && (e(t), t.traverseAncestors(e))
                },
                updateMatrix: function () {
                    this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0
                },
                updateMatrixWorld: function (e) {
                    this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
                    for (var t = this.children, n = 0, r = t.length; n < r; n++) t[n].updateMatrixWorld(e)
                },
                updateWorldMatrix: function (e, t) {
                    var n = this.parent;
                    if (!0 === e && null !== n && n.updateWorldMatrix(!0, !1), this.matrixAutoUpdate && this.updateMatrix(), null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), !0 === t)
                        for (var r = this.children, i = 0, o = r.length; i < o; i++) r[i].updateWorldMatrix(!1, !0)
                },
                toJSON: function (e) {
                    var t = void 0 === e || "string" == typeof e,
                        n = {};
                    t && (e = {
                        geometries: {},
                        materials: {},
                        textures: {},
                        images: {},
                        shapes: {}
                    }, n.metadata = {
                        version: 4.5,
                        type: "Object",
                        generator: "Object3D.toJSON"
                    });
                    var r = {};

                    function i(t, n) {
                        return void 0 === t[n.uuid] && (t[n.uuid] = n.toJSON(e)), n.uuid
                    }
                    if (r.uuid = this.uuid, r.type = this.type, "" !== this.name && (r.name = this.name), !0 === this.castShadow && (r.castShadow = !0), !0 === this.receiveShadow && (r.receiveShadow = !0), !1 === this.visible && (r.visible = !1), !1 === this.frustumCulled && (r.frustumCulled = !1), 0 !== this.renderOrder && (r.renderOrder = this.renderOrder), "{}" !== JSON.stringify(this.userData) && (r.userData = this.userData), r.layers = this.layers.mask, r.matrix = this.matrix.toArray(), !1 === this.matrixAutoUpdate && (r.matrixAutoUpdate = !1), this.isInstancedMesh && (r.type = "InstancedMesh", r.count = this.count, r.instanceMatrix = this.instanceMatrix.toJSON()), this.isMesh || this.isLine || this.isPoints) {
                        r.geometry = i(e.geometries, this.geometry);
                        var o = this.geometry.parameters;
                        if (void 0 !== o && void 0 !== o.shapes) {
                            var a = o.shapes;
                            if (Array.isArray(a))
                                for (var s = 0, c = a.length; s < c; s++) {
                                    var l = a[s];
                                    i(e.shapes, l)
                                } else i(e.shapes, a)
                        }
                    }
                    if (void 0 !== this.material)
                        if (Array.isArray(this.material)) {
                            var u = [];
                            for (s = 0, c = this.material.length; s < c; s++) u.push(i(e.materials, this.material[s]));
                            r.material = u
                        } else r.material = i(e.materials, this.material);
                    if (this.children.length > 0) {
                        r.children = [];
                        for (s = 0; s < this.children.length; s++) r.children.push(this.children[s].toJSON(e).object)
                    }
                    if (t) {
                        var h = m(e.geometries),
                            d = m(e.materials),
                            p = m(e.textures),
                            f = m(e.images);
                        a = m(e.shapes);
                        h.length > 0 && (n.geometries = h), d.length > 0 && (n.materials = d), p.length > 0 && (n.textures = p), f.length > 0 && (n.images = f), a.length > 0 && (n.shapes = a)
                    }
                    return n.object = r, n;

                    function m(e) {
                        var t = [];
                        for (var n in e) {
                            var r = e[n];
                            delete r.metadata, t.push(r)
                        }
                        return t
                    }
                },
                clone: function (e) {
                    return (new this.constructor).copy(this, e)
                },
                copy: function (e, t) {
                    if (void 0 === t && (t = !0), this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.userData = JSON.parse(JSON.stringify(e.userData)), !0 === t)
                        for (var n = 0; n < e.children.length; n++) {
                            var r = e.children[n];
                            this.add(r.clone())
                        }
                    return this
                }
            }), q.prototype = Object.assign(Object.create(W.prototype), {
                constructor: q,
                isScene: !0,
                copy: function (e, t) {
                    return W.prototype.copy.call(this, e, t), null !== e.background && (this.background = e.background.clone()), null !== e.environment && (this.environment = e.environment.clone()), null !== e.fog && (this.fog = e.fog.clone()), null !== e.overrideMaterial && (this.overrideMaterial = e.overrideMaterial.clone()), this.autoUpdate = e.autoUpdate, this.matrixAutoUpdate = e.matrixAutoUpdate, this
                },
                toJSON: function (e) {
                    var t = W.prototype.toJSON.call(this, e);
                    return null !== this.background && (t.object.background = this.background.toJSON(e)), null !== this.environment && (t.object.environment = this.environment.toJSON(e)), null !== this.fog && (t.object.fog = this.fog.toJSON()), t
                },
                dispose: function () {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            });
            var X = [new _, new _, new _, new _, new _, new _, new _, new _],
                Y = new _,
                J = new ae,
                Z = new _,
                Q = new _,
                $ = new _,
                K = new _,
                ee = new _,
                te = new _,
                ne = new _,
                re = new _,
                ie = new _,
                oe = new _;

            function ae(e, t) {
                this.min = void 0 !== e ? e : new _(1 / 0, 1 / 0, 1 / 0), this.max = void 0 !== t ? t : new _(-1 / 0, -1 / 0, -1 / 0)
            }

            function se(e, t, n, r, i) {
                var o, a;
                for (o = 0, a = e.length - 3; o <= a; o += 3) {
                    oe.fromArray(e, o);
                    var s = i.x * Math.abs(oe.x) + i.y * Math.abs(oe.y) + i.z * Math.abs(oe.z),
                        c = t.dot(oe),
                        l = n.dot(oe),
                        u = r.dot(oe);
                    if (Math.max(-Math.max(c, l, u), Math.min(c, l, u)) > s) return !1
                }
                return !0
            }
            Object.assign(ae.prototype, {
                isBox3: !0,
                set: function (e, t) {
                    return this.min.copy(e), this.max.copy(t), this
                },
                setFromArray: function (e) {
                    for (var t = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, o = -1 / 0, a = -1 / 0, s = 0, c = e.length; s < c; s += 3) {
                        var l = e[s],
                            u = e[s + 1],
                            h = e[s + 2];
                        l < t && (t = l), u < n && (n = u), h < r && (r = h), l > i && (i = l), u > o && (o = u), h > a && (a = h)
                    }
                    return this.min.set(t, n, r), this.max.set(i, o, a), this
                },
                setFromBufferAttribute: function (e) {
                    for (var t = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, o = -1 / 0, a = -1 / 0, s = 0, c = e.count; s < c; s++) {
                        var l = e.getX(s),
                            u = e.getY(s),
                            h = e.getZ(s);
                        l < t && (t = l), u < n && (n = u), h < r && (r = h), l > i && (i = l), u > o && (o = u), h > a && (a = h)
                    }
                    return this.min.set(t, n, r), this.max.set(i, o, a), this
                },
                setFromPoints: function (e) {
                    this.makeEmpty();
                    for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
                    return this
                },
                setFromCenterAndSize: function (e, t) {
                    var n = Y.copy(t).multiplyScalar(.5);
                    return this.min.copy(e).sub(n), this.max.copy(e).add(n), this
                },
                setFromObject: function (e) {
                    return this.makeEmpty(), this.expandByObject(e)
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    return this.min.copy(e.min), this.max.copy(e.max), this
                },
                makeEmpty: function () {
                    return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this
                },
                isEmpty: function () {
                    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
                },
                getCenter: function (e) {
                    return void 0 === e && (console.warn("THREE.Box3: .getCenter() target is now required"), e = new _), this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
                },
                getSize: function (e) {
                    return void 0 === e && (console.warn("THREE.Box3: .getSize() target is now required"), e = new _), this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min)
                },
                expandByPoint: function (e) {
                    return this.min.min(e), this.max.max(e), this
                },
                expandByVector: function (e) {
                    return this.min.sub(e), this.max.add(e), this
                },
                expandByScalar: function (e) {
                    return this.min.addScalar(-e), this.max.addScalar(e), this
                },
                expandByObject: function (e) {
                    e.updateWorldMatrix(!1, !1);
                    var t = e.geometry;
                    void 0 !== t && (null === t.boundingBox && t.computeBoundingBox(), J.copy(t.boundingBox), J.applyMatrix4(e.matrixWorld), this.union(J));
                    for (var n = e.children, r = 0, i = n.length; r < i; r++) this.expandByObject(n[r]);
                    return this
                },
                containsPoint: function (e) {
                    return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z)
                },
                containsBox: function (e) {
                    return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z
                },
                getParameter: function (e, t) {
                    return void 0 === t && (console.warn("THREE.Box3: .getParameter() target is now required"), t = new _), t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z))
                },
                intersectsBox: function (e) {
                    return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z)
                },
                intersectsSphere: function (e) {
                    return this.clampPoint(e.center, Y), Y.distanceToSquared(e.center) <= e.radius * e.radius
                },
                intersectsPlane: function (e) {
                    var t, n;
                    return e.normal.x > 0 ? (t = e.normal.x * this.min.x, n = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x, n = e.normal.x * this.min.x), e.normal.y > 0 ? (t += e.normal.y * this.min.y, n += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y, n += e.normal.y * this.min.y), e.normal.z > 0 ? (t += e.normal.z * this.min.z, n += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z, n += e.normal.z * this.min.z), t <= -e.constant && n >= -e.constant
                },
                intersectsTriangle: function (e) {
                    if (this.isEmpty()) return !1;
                    this.getCenter(ne), re.subVectors(this.max, ne), Z.subVectors(e.a, ne), Q.subVectors(e.b, ne), $.subVectors(e.c, ne), K.subVectors(Q, Z), ee.subVectors($, Q), te.subVectors(Z, $);
                    var t = [0, -K.z, K.y, 0, -ee.z, ee.y, 0, -te.z, te.y, K.z, 0, -K.x, ee.z, 0, -ee.x, te.z, 0, -te.x, -K.y, K.x, 0, -ee.y, ee.x, 0, -te.y, te.x, 0];
                    return !!se(t, Z, Q, $, re) && (!!se(t = [1, 0, 0, 0, 1, 0, 0, 0, 1], Z, Q, $, re) && (ie.crossVectors(K, ee), se(t = [ie.x, ie.y, ie.z], Z, Q, $, re)))
                },
                clampPoint: function (e, t) {
                    return void 0 === t && (console.warn("THREE.Box3: .clampPoint() target is now required"), t = new _), t.copy(e).clamp(this.min, this.max)
                },
                distanceToPoint: function (e) {
                    return Y.copy(e).clamp(this.min, this.max).sub(e).length()
                },
                getBoundingSphere: function (e) {
                    return void 0 === e && console.error("THREE.Box3: .getBoundingSphere() target is now required"), this.getCenter(e.center), e.radius = .5 * this.getSize(Y).length(), e
                },
                intersect: function (e) {
                    return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this
                },
                union: function (e) {
                    return this.min.min(e.min), this.max.max(e.max), this
                },
                applyMatrix4: function (e) {
                    return this.isEmpty() || (X[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), X[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), X[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), X[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), X[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), X[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), X[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), X[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints(X)), this
                },
                translate: function (e) {
                    return this.min.add(e), this.max.add(e), this
                },
                equals: function (e) {
                    return e.min.equals(this.min) && e.max.equals(this.max)
                }
            });
            var ce = new ae;

            function le(e, t) {
                this.center = void 0 !== e ? e : new _, this.radius = void 0 !== t ? t : -1
            }
            Object.assign(le.prototype, {
                set: function (e, t) {
                    return this.center.copy(e), this.radius = t, this
                },
                setFromPoints: function (e, t) {
                    var n = this.center;
                    void 0 !== t ? n.copy(t) : ce.setFromPoints(e).getCenter(n);
                    for (var r = 0, i = 0, o = e.length; i < o; i++) r = Math.max(r, n.distanceToSquared(e[i]));
                    return this.radius = Math.sqrt(r), this
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    return this.center.copy(e.center), this.radius = e.radius, this
                },
                isEmpty: function () {
                    return this.radius < 0
                },
                makeEmpty: function () {
                    return this.center.set(0, 0, 0), this.radius = -1, this
                },
                containsPoint: function (e) {
                    return e.distanceToSquared(this.center) <= this.radius * this.radius
                },
                distanceToPoint: function (e) {
                    return e.distanceTo(this.center) - this.radius
                },
                intersectsSphere: function (e) {
                    var t = this.radius + e.radius;
                    return e.center.distanceToSquared(this.center) <= t * t
                },
                intersectsBox: function (e) {
                    return e.intersectsSphere(this)
                },
                intersectsPlane: function (e) {
                    return Math.abs(e.distanceToPoint(this.center)) <= this.radius
                },
                clampPoint: function (e, t) {
                    var n = this.center.distanceToSquared(e);
                    return void 0 === t && (console.warn("THREE.Sphere: .clampPoint() target is now required"), t = new _), t.copy(e), n > this.radius * this.radius && (t.sub(this.center).normalize(), t.multiplyScalar(this.radius).add(this.center)), t
                },
                getBoundingBox: function (e) {
                    return void 0 === e && (console.warn("THREE.Sphere: .getBoundingBox() target is now required"), e = new ae), this.isEmpty() ? (e.makeEmpty(), e) : (e.set(this.center, this.center), e.expandByScalar(this.radius), e)
                },
                applyMatrix4: function (e) {
                    return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this
                },
                translate: function (e) {
                    return this.center.add(e), this
                },
                equals: function (e) {
                    return e.center.equals(this.center) && e.radius === this.radius
                }
            });
            var ue = new _,
                he = new _,
                de = new _,
                pe = new _,
                fe = new _,
                me = new _,
                ge = new _;

            function ve(e, t) {
                this.origin = void 0 !== e ? e : new _, this.direction = void 0 !== t ? t : new _(0, 0, -1)
            }
            Object.assign(ve.prototype, {
                set: function (e, t) {
                    return this.origin.copy(e), this.direction.copy(t), this
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    return this.origin.copy(e.origin), this.direction.copy(e.direction), this
                },
                at: function (e, t) {
                    return void 0 === t && (console.warn("THREE.Ray: .at() target is now required"), t = new _), t.copy(this.direction).multiplyScalar(e).add(this.origin)
                },
                lookAt: function (e) {
                    return this.direction.copy(e).sub(this.origin).normalize(), this
                },
                recast: function (e) {
                    return this.origin.copy(this.at(e, ue)), this
                },
                closestPointToPoint: function (e, t) {
                    void 0 === t && (console.warn("THREE.Ray: .closestPointToPoint() target is now required"), t = new _), t.subVectors(e, this.origin);
                    var n = t.dot(this.direction);
                    return n < 0 ? t.copy(this.origin) : t.copy(this.direction).multiplyScalar(n).add(this.origin)
                },
                distanceToPoint: function (e) {
                    return Math.sqrt(this.distanceSqToPoint(e))
                },
                distanceSqToPoint: function (e) {
                    var t = ue.subVectors(e, this.origin).dot(this.direction);
                    return t < 0 ? this.origin.distanceToSquared(e) : (ue.copy(this.direction).multiplyScalar(t).add(this.origin), ue.distanceToSquared(e))
                },
                distanceSqToSegment: function (e, t, n, r) {
                    he.copy(e).add(t).multiplyScalar(.5), de.copy(t).sub(e).normalize(), pe.copy(this.origin).sub(he);
                    var i, o, a, s, c = .5 * e.distanceTo(t),
                        l = -this.direction.dot(de),
                        u = pe.dot(this.direction),
                        h = -pe.dot(de),
                        d = pe.lengthSq(),
                        p = Math.abs(1 - l * l);
                    if (p > 0)
                        if (o = l * u - h, s = c * p, (i = l * h - u) >= 0)
                            if (o >= -s)
                                if (o <= s) {
                                    var f = 1 / p;
                                    a = (i *= f) * (i + l * (o *= f) + 2 * u) + o * (l * i + o + 2 * h) + d
                                } else o = c, a = -(i = Math.max(0, -(l * o + u))) * i + o * (o + 2 * h) + d;
                    else o = -c, a = -(i = Math.max(0, -(l * o + u))) * i + o * (o + 2 * h) + d;
                    else o <= -s ? a = -(i = Math.max(0, -(-l * c + u))) * i + (o = i > 0 ? -c : Math.min(Math.max(-c, -h), c)) * (o + 2 * h) + d : o <= s ? (i = 0, a = (o = Math.min(Math.max(-c, -h), c)) * (o + 2 * h) + d) : a = -(i = Math.max(0, -(l * c + u))) * i + (o = i > 0 ? c : Math.min(Math.max(-c, -h), c)) * (o + 2 * h) + d;
                    else o = l > 0 ? -c : c, a = -(i = Math.max(0, -(l * o + u))) * i + o * (o + 2 * h) + d;
                    return n && n.copy(this.direction).multiplyScalar(i).add(this.origin), r && r.copy(de).multiplyScalar(o).add(he), a
                },
                intersectSphere: function (e, t) {
                    ue.subVectors(e.center, this.origin);
                    var n = ue.dot(this.direction),
                        r = ue.dot(ue) - n * n,
                        i = e.radius * e.radius;
                    if (r > i) return null;
                    var o = Math.sqrt(i - r),
                        a = n - o,
                        s = n + o;
                    return a < 0 && s < 0 ? null : a < 0 ? this.at(s, t) : this.at(a, t)
                },
                intersectsSphere: function (e) {
                    return this.distanceSqToPoint(e.center) <= e.radius * e.radius
                },
                distanceToPlane: function (e) {
                    var t = e.normal.dot(this.direction);
                    if (0 === t) return 0 === e.distanceToPoint(this.origin) ? 0 : null;
                    var n = -(this.origin.dot(e.normal) + e.constant) / t;
                    return n >= 0 ? n : null
                },
                intersectPlane: function (e, t) {
                    var n = this.distanceToPlane(e);
                    return null === n ? null : this.at(n, t)
                },
                intersectsPlane: function (e) {
                    var t = e.distanceToPoint(this.origin);
                    return 0 === t || e.normal.dot(this.direction) * t < 0
                },
                intersectBox: function (e, t) {
                    var n, r, i, o, a, s, c = 1 / this.direction.x,
                        l = 1 / this.direction.y,
                        u = 1 / this.direction.z,
                        h = this.origin;
                    return c >= 0 ? (n = (e.min.x - h.x) * c, r = (e.max.x - h.x) * c) : (n = (e.max.x - h.x) * c, r = (e.min.x - h.x) * c), l >= 0 ? (i = (e.min.y - h.y) * l, o = (e.max.y - h.y) * l) : (i = (e.max.y - h.y) * l, o = (e.min.y - h.y) * l), n > o || i > r ? null : ((i > n || n != n) && (n = i), (o < r || r != r) && (r = o), u >= 0 ? (a = (e.min.z - h.z) * u, s = (e.max.z - h.z) * u) : (a = (e.max.z - h.z) * u, s = (e.min.z - h.z) * u), n > s || a > r ? null : ((a > n || n != n) && (n = a), (s < r || r != r) && (r = s), r < 0 ? null : this.at(n >= 0 ? n : r, t)))
                },
                intersectsBox: function (e) {
                    return null !== this.intersectBox(e, ue)
                },
                intersectTriangle: function (e, t, n, r, i) {
                    fe.subVectors(t, e), me.subVectors(n, e), ge.crossVectors(fe, me);
                    var o, a = this.direction.dot(ge);
                    if (a > 0) {
                        if (r) return null;
                        o = 1
                    } else {
                        if (!(a < 0)) return null;
                        o = -1, a = -a
                    }
                    pe.subVectors(this.origin, e);
                    var s = o * this.direction.dot(me.crossVectors(pe, me));
                    if (s < 0) return null;
                    var c = o * this.direction.dot(fe.cross(pe));
                    if (c < 0) return null;
                    if (s + c > a) return null;
                    var l = -o * pe.dot(ge);
                    return l < 0 ? null : this.at(l / a, i)
                },
                applyMatrix4: function (e) {
                    return this.origin.applyMatrix4(e), this.direction.transformDirection(e), this
                },
                equals: function (e) {
                    return e.origin.equals(this.origin) && e.direction.equals(this.direction)
                }
            });
            var ye = new _,
                _e = new _,
                xe = new l;

            function be(e, t) {
                this.normal = void 0 !== e ? e : new _(1, 0, 0), this.constant = void 0 !== t ? t : 0
            }
            Object.assign(be.prototype, {
                isPlane: !0,
                set: function (e, t) {
                    return this.normal.copy(e), this.constant = t, this
                },
                setComponents: function (e, t, n, r) {
                    return this.normal.set(e, t, n), this.constant = r, this
                },
                setFromNormalAndCoplanarPoint: function (e, t) {
                    return this.normal.copy(e), this.constant = -t.dot(this.normal), this
                },
                setFromCoplanarPoints: function (e, t, n) {
                    var r = ye.subVectors(n, t).cross(_e.subVectors(e, t)).normalize();
                    return this.setFromNormalAndCoplanarPoint(r, e), this
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    return this.normal.copy(e.normal), this.constant = e.constant, this
                },
                normalize: function () {
                    var e = 1 / this.normal.length();
                    return this.normal.multiplyScalar(e), this.constant *= e, this
                },
                negate: function () {
                    return this.constant *= -1, this.normal.negate(), this
                },
                distanceToPoint: function (e) {
                    return this.normal.dot(e) + this.constant
                },
                distanceToSphere: function (e) {
                    return this.distanceToPoint(e.center) - e.radius
                },
                projectPoint: function (e, t) {
                    return void 0 === t && (console.warn("THREE.Plane: .projectPoint() target is now required"), t = new _), t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)
                },
                intersectLine: function (e, t) {
                    void 0 === t && (console.warn("THREE.Plane: .intersectLine() target is now required"), t = new _);
                    var n = e.delta(ye),
                        r = this.normal.dot(n);
                    if (0 === r) return 0 === this.distanceToPoint(e.start) ? t.copy(e.start) : void 0;
                    var i = -(e.start.dot(this.normal) + this.constant) / r;
                    return i < 0 || i > 1 ? void 0 : t.copy(n).multiplyScalar(i).add(e.start)
                },
                intersectsLine: function (e) {
                    var t = this.distanceToPoint(e.start),
                        n = this.distanceToPoint(e.end);
                    return t < 0 && n > 0 || n < 0 && t > 0
                },
                intersectsBox: function (e) {
                    return e.intersectsPlane(this)
                },
                intersectsSphere: function (e) {
                    return e.intersectsPlane(this)
                },
                coplanarPoint: function (e) {
                    return void 0 === e && (console.warn("THREE.Plane: .coplanarPoint() target is now required"), e = new _), e.copy(this.normal).multiplyScalar(-this.constant)
                },
                applyMatrix4: function (e, t) {
                    var n = t || xe.getNormalMatrix(e),
                        r = this.coplanarPoint(ye).applyMatrix4(e),
                        i = this.normal.applyMatrix3(n).normalize();
                    return this.constant = -r.dot(i), this
                },
                translate: function (e) {
                    return this.constant -= e.dot(this.normal), this
                },
                equals: function (e) {
                    return e.normal.equals(this.normal) && e.constant === this.constant
                }
            });
            var we = new _,
                Me = new _,
                Te = new _,
                Se = new _,
                Ee = new _,
                Ae = new _,
                je = new _,
                Le = new _,
                Ce = new _,
                Pe = new _;

            function Oe(e, t, n) {
                this.a = void 0 !== e ? e : new _, this.b = void 0 !== t ? t : new _, this.c = void 0 !== n ? n : new _
            }
            Object.assign(Oe, {
                getNormal: function (e, t, n, r) {
                    void 0 === r && (console.warn("THREE.Triangle: .getNormal() target is now required"), r = new _), r.subVectors(n, t), we.subVectors(e, t), r.cross(we);
                    var i = r.lengthSq();
                    return i > 0 ? r.multiplyScalar(1 / Math.sqrt(i)) : r.set(0, 0, 0)
                },
                getBarycoord: function (e, t, n, r, i) {
                    we.subVectors(r, t), Me.subVectors(n, t), Te.subVectors(e, t);
                    var o = we.dot(we),
                        a = we.dot(Me),
                        s = we.dot(Te),
                        c = Me.dot(Me),
                        l = Me.dot(Te),
                        u = o * c - a * a;
                    if (void 0 === i && (console.warn("THREE.Triangle: .getBarycoord() target is now required"), i = new _), 0 === u) return i.set(-2, -1, -1);
                    var h = 1 / u,
                        d = (c * s - a * l) * h,
                        p = (o * l - a * s) * h;
                    return i.set(1 - d - p, p, d)
                },
                containsPoint: function (e, t, n, r) {
                    return Oe.getBarycoord(e, t, n, r, Se), Se.x >= 0 && Se.y >= 0 && Se.x + Se.y <= 1
                },
                getUV: function (e, t, n, r, i, o, a, s) {
                    return this.getBarycoord(e, t, n, r, Se), s.set(0, 0), s.addScaledVector(i, Se.x), s.addScaledVector(o, Se.y), s.addScaledVector(a, Se.z), s
                },
                isFrontFacing: function (e, t, n, r) {
                    return we.subVectors(n, t), Me.subVectors(e, t), we.cross(Me).dot(r) < 0
                }
            }), Object.assign(Oe.prototype, {
                set: function (e, t, n) {
                    return this.a.copy(e), this.b.copy(t), this.c.copy(n), this
                },
                setFromPointsAndIndices: function (e, t, n, r) {
                    return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[r]), this
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this
                },
                getArea: function () {
                    return we.subVectors(this.c, this.b), Me.subVectors(this.a, this.b), .5 * we.cross(Me).length()
                },
                getMidpoint: function (e) {
                    return void 0 === e && (console.warn("THREE.Triangle: .getMidpoint() target is now required"), e = new _), e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
                },
                getNormal: function (e) {
                    return Oe.getNormal(this.a, this.b, this.c, e)
                },
                getPlane: function (e) {
                    return void 0 === e && (console.warn("THREE.Triangle: .getPlane() target is now required"), e = new be), e.setFromCoplanarPoints(this.a, this.b, this.c)
                },
                getBarycoord: function (e, t) {
                    return Oe.getBarycoord(e, this.a, this.b, this.c, t)
                },
                getUV: function (e, t, n, r, i) {
                    return Oe.getUV(e, this.a, this.b, this.c, t, n, r, i)
                },
                containsPoint: function (e) {
                    return Oe.containsPoint(e, this.a, this.b, this.c)
                },
                isFrontFacing: function (e) {
                    return Oe.isFrontFacing(this.a, this.b, this.c, e)
                },
                intersectsBox: function (e) {
                    return e.intersectsTriangle(this)
                },
                closestPointToPoint: function (e, t) {
                    void 0 === t && (console.warn("THREE.Triangle: .closestPointToPoint() target is now required"), t = new _);
                    var n, r, i = this.a,
                        o = this.b,
                        a = this.c;
                    Ee.subVectors(o, i), Ae.subVectors(a, i), Le.subVectors(e, i);
                    var s = Ee.dot(Le),
                        c = Ae.dot(Le);
                    if (s <= 0 && c <= 0) return t.copy(i);
                    Ce.subVectors(e, o);
                    var l = Ee.dot(Ce),
                        u = Ae.dot(Ce);
                    if (l >= 0 && u <= l) return t.copy(o);
                    var h = s * u - l * c;
                    if (h <= 0 && s >= 0 && l <= 0) return n = s / (s - l), t.copy(i).addScaledVector(Ee, n);
                    Pe.subVectors(e, a);
                    var d = Ee.dot(Pe),
                        p = Ae.dot(Pe);
                    if (p >= 0 && d <= p) return t.copy(a);
                    var f = d * c - s * p;
                    if (f <= 0 && c >= 0 && p <= 0) return r = c / (c - p), t.copy(i).addScaledVector(Ae, r);
                    var m = l * p - d * u;
                    if (m <= 0 && u - l >= 0 && d - p >= 0) return je.subVectors(a, o), r = (u - l) / (u - l + (d - p)), t.copy(o).addScaledVector(je, r);
                    var g = 1 / (m + f + h);
                    return n = f * g, r = h * g, t.copy(i).addScaledVector(Ee, n).addScaledVector(Ae, r)
                },
                equals: function (e) {
                    return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c)
                }
            });
            var Re = {
                    aliceblue: 15792383,
                    antiquewhite: 16444375,
                    aqua: 65535,
                    aquamarine: 8388564,
                    azure: 15794175,
                    beige: 16119260,
                    bisque: 16770244,
                    black: 0,
                    blanchedalmond: 16772045,
                    blue: 255,
                    blueviolet: 9055202,
                    brown: 10824234,
                    burlywood: 14596231,
                    cadetblue: 6266528,
                    chartreuse: 8388352,
                    chocolate: 13789470,
                    coral: 16744272,
                    cornflowerblue: 6591981,
                    cornsilk: 16775388,
                    crimson: 14423100,
                    cyan: 65535,
                    darkblue: 139,
                    darkcyan: 35723,
                    darkgoldenrod: 12092939,
                    darkgray: 11119017,
                    darkgreen: 25600,
                    darkgrey: 11119017,
                    darkkhaki: 12433259,
                    darkmagenta: 9109643,
                    darkolivegreen: 5597999,
                    darkorange: 16747520,
                    darkorchid: 10040012,
                    darkred: 9109504,
                    darksalmon: 15308410,
                    darkseagreen: 9419919,
                    darkslateblue: 4734347,
                    darkslategray: 3100495,
                    darkslategrey: 3100495,
                    darkturquoise: 52945,
                    darkviolet: 9699539,
                    deeppink: 16716947,
                    deepskyblue: 49151,
                    dimgray: 6908265,
                    dimgrey: 6908265,
                    dodgerblue: 2003199,
                    firebrick: 11674146,
                    floralwhite: 16775920,
                    forestgreen: 2263842,
                    fuchsia: 16711935,
                    gainsboro: 14474460,
                    ghostwhite: 16316671,
                    gold: 16766720,
                    goldenrod: 14329120,
                    gray: 8421504,
                    green: 32768,
                    greenyellow: 11403055,
                    grey: 8421504,
                    honeydew: 15794160,
                    hotpink: 16738740,
                    indianred: 13458524,
                    indigo: 4915330,
                    ivory: 16777200,
                    khaki: 15787660,
                    lavender: 15132410,
                    lavenderblush: 16773365,
                    lawngreen: 8190976,
                    lemonchiffon: 16775885,
                    lightblue: 11393254,
                    lightcoral: 15761536,
                    lightcyan: 14745599,
                    lightgoldenrodyellow: 16448210,
                    lightgray: 13882323,
                    lightgreen: 9498256,
                    lightgrey: 13882323,
                    lightpink: 16758465,
                    lightsalmon: 16752762,
                    lightseagreen: 2142890,
                    lightskyblue: 8900346,
                    lightslategray: 7833753,
                    lightslategrey: 7833753,
                    lightsteelblue: 11584734,
                    lightyellow: 16777184,
                    lime: 65280,
                    limegreen: 3329330,
                    linen: 16445670,
                    magenta: 16711935,
                    maroon: 8388608,
                    mediumaquamarine: 6737322,
                    mediumblue: 205,
                    mediumorchid: 12211667,
                    mediumpurple: 9662683,
                    mediumseagreen: 3978097,
                    mediumslateblue: 8087790,
                    mediumspringgreen: 64154,
                    mediumturquoise: 4772300,
                    mediumvioletred: 13047173,
                    midnightblue: 1644912,
                    mintcream: 16121850,
                    mistyrose: 16770273,
                    moccasin: 16770229,
                    navajowhite: 16768685,
                    navy: 128,
                    oldlace: 16643558,
                    olive: 8421376,
                    olivedrab: 7048739,
                    orange: 16753920,
                    orangered: 16729344,
                    orchid: 14315734,
                    palegoldenrod: 15657130,
                    palegreen: 10025880,
                    paleturquoise: 11529966,
                    palevioletred: 14381203,
                    papayawhip: 16773077,
                    peachpuff: 16767673,
                    peru: 13468991,
                    pink: 16761035,
                    plum: 14524637,
                    powderblue: 11591910,
                    purple: 8388736,
                    rebeccapurple: 6697881,
                    red: 16711680,
                    rosybrown: 12357519,
                    royalblue: 4286945,
                    saddlebrown: 9127187,
                    salmon: 16416882,
                    sandybrown: 16032864,
                    seagreen: 3050327,
                    seashell: 16774638,
                    sienna: 10506797,
                    silver: 12632256,
                    skyblue: 8900331,
                    slateblue: 6970061,
                    slategray: 7372944,
                    slategrey: 7372944,
                    snow: 16775930,
                    springgreen: 65407,
                    steelblue: 4620980,
                    tan: 13808780,
                    teal: 32896,
                    thistle: 14204888,
                    tomato: 16737095,
                    turquoise: 4251856,
                    violet: 15631086,
                    wheat: 16113331,
                    white: 16777215,
                    whitesmoke: 16119285,
                    yellow: 16776960,
                    yellowgreen: 10145074
                },
                De = {
                    h: 0,
                    s: 0,
                    l: 0
                },
                Ne = {
                    h: 0,
                    s: 0,
                    l: 0
                };

            function Ie(e, t, n) {
                return void 0 === t && void 0 === n ? this.set(e) : this.setRGB(e, t, n)
            }

            function ke(e, t, n) {
                return n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6 ? e + 6 * (t - e) * n : n < .5 ? t : n < 2 / 3 ? e + 6 * (t - e) * (2 / 3 - n) : e
            }

            function ze(e) {
                return e < .04045 ? .0773993808 * e : Math.pow(.9478672986 * e + .0521327014, 2.4)
            }

            function Be(e) {
                return e < .0031308 ? 12.92 * e : 1.055 * Math.pow(e, .41666) - .055
            }

            function Fe(e, t, n, r, i, o) {
                this.a = e, this.b = t, this.c = n, this.normal = r && r.isVector3 ? r : new _, this.vertexNormals = Array.isArray(r) ? r : [], this.color = i && i.isColor ? i : new Ie, this.vertexColors = Array.isArray(i) ? i : [], this.materialIndex = void 0 !== o ? o : 0
            }
            Object.assign(Ie.prototype, {
                isColor: !0,
                r: 1,
                g: 1,
                b: 1,
                set: function (e) {
                    return e && e.isColor ? this.copy(e) : "number" == typeof e ? this.setHex(e) : "string" == typeof e && this.setStyle(e), this
                },
                setScalar: function (e) {
                    return this.r = e, this.g = e, this.b = e, this
                },
                setHex: function (e) {
                    return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (255 & e) / 255, this
                },
                setRGB: function (e, t, n) {
                    return this.r = e, this.g = t, this.b = n, this
                },
                setHSL: function (e, t, n) {
                    if (e = s.euclideanModulo(e, 1), t = s.clamp(t, 0, 1), n = s.clamp(n, 0, 1), 0 === t) this.r = this.g = this.b = n;
                    else {
                        var r = n <= .5 ? n * (1 + t) : n + t - n * t,
                            i = 2 * n - r;
                        this.r = ke(i, r, e + 1 / 3), this.g = ke(i, r, e), this.b = ke(i, r, e - 1 / 3)
                    }
                    return this
                },
                setStyle: function (e) {
                    function t(t) {
                        void 0 !== t && parseFloat(t) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.")
                    }
                    var n;
                    if (n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)) {
                        var r, i = n[1],
                            o = n[2];
                        switch (i) {
                            case "rgb":
                            case "rgba":
                                if (r = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) return this.r = Math.min(255, parseInt(r[1], 10)) / 255, this.g = Math.min(255, parseInt(r[2], 10)) / 255, this.b = Math.min(255, parseInt(r[3], 10)) / 255, t(r[5]), this;
                                if (r = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) return this.r = Math.min(100, parseInt(r[1], 10)) / 100, this.g = Math.min(100, parseInt(r[2], 10)) / 100, this.b = Math.min(100, parseInt(r[3], 10)) / 100, t(r[5]), this;
                                break;
                            case "hsl":
                            case "hsla":
                                if (r = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) {
                                    var a = parseFloat(r[1]) / 360,
                                        s = parseInt(r[2], 10) / 100,
                                        c = parseInt(r[3], 10) / 100;
                                    return t(r[5]), this.setHSL(a, s, c)
                                }
                        }
                    } else if (n = /^\#([A-Fa-f0-9]+)$/.exec(e)) {
                        var l = n[1],
                            u = l.length;
                        if (3 === u) return this.r = parseInt(l.charAt(0) + l.charAt(0), 16) / 255, this.g = parseInt(l.charAt(1) + l.charAt(1), 16) / 255, this.b = parseInt(l.charAt(2) + l.charAt(2), 16) / 255, this;
                        if (6 === u) return this.r = parseInt(l.charAt(0) + l.charAt(1), 16) / 255, this.g = parseInt(l.charAt(2) + l.charAt(3), 16) / 255, this.b = parseInt(l.charAt(4) + l.charAt(5), 16) / 255, this
                    }
                    return e && e.length > 0 ? this.setColorName(e) : this
                },
                setColorName: function (e) {
                    var t = Re[e];
                    return void 0 !== t ? this.setHex(t) : console.warn("THREE.Color: Unknown color " + e), this
                },
                clone: function () {
                    return new this.constructor(this.r, this.g, this.b)
                },
                copy: function (e) {
                    return this.r = e.r, this.g = e.g, this.b = e.b, this
                },
                copyGammaToLinear: function (e, t) {
                    return void 0 === t && (t = 2), this.r = Math.pow(e.r, t), this.g = Math.pow(e.g, t), this.b = Math.pow(e.b, t), this
                },
                copyLinearToGamma: function (e, t) {
                    void 0 === t && (t = 2);
                    var n = t > 0 ? 1 / t : 1;
                    return this.r = Math.pow(e.r, n), this.g = Math.pow(e.g, n), this.b = Math.pow(e.b, n), this
                },
                convertGammaToLinear: function (e) {
                    return this.copyGammaToLinear(this, e), this
                },
                convertLinearToGamma: function (e) {
                    return this.copyLinearToGamma(this, e), this
                },
                copySRGBToLinear: function (e) {
                    return this.r = ze(e.r), this.g = ze(e.g), this.b = ze(e.b), this
                },
                copyLinearToSRGB: function (e) {
                    return this.r = Be(e.r), this.g = Be(e.g), this.b = Be(e.b), this
                },
                convertSRGBToLinear: function () {
                    return this.copySRGBToLinear(this), this
                },
                convertLinearToSRGB: function () {
                    return this.copyLinearToSRGB(this), this
                },
                getHex: function () {
                    return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
                },
                getHexString: function () {
                    return ("000000" + this.getHex().toString(16)).slice(-6)
                },
                getHSL: function (e) {
                    void 0 === e && (console.warn("THREE.Color: .getHSL() target is now required"), e = {
                        h: 0,
                        s: 0,
                        l: 0
                    });
                    var t, n, r = this.r,
                        i = this.g,
                        o = this.b,
                        a = Math.max(r, i, o),
                        s = Math.min(r, i, o),
                        c = (s + a) / 2;
                    if (s === a) t = 0, n = 0;
                    else {
                        var l = a - s;
                        switch (n = c <= .5 ? l / (a + s) : l / (2 - a - s), a) {
                            case r:
                                t = (i - o) / l + (i < o ? 6 : 0);
                                break;
                            case i:
                                t = (o - r) / l + 2;
                                break;
                            case o:
                                t = (r - i) / l + 4
                        }
                        t /= 6
                    }
                    return e.h = t, e.s = n, e.l = c, e
                },
                getStyle: function () {
                    return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
                },
                offsetHSL: function (e, t, n) {
                    return this.getHSL(De), De.h += e, De.s += t, De.l += n, this.setHSL(De.h, De.s, De.l), this
                },
                add: function (e) {
                    return this.r += e.r, this.g += e.g, this.b += e.b, this
                },
                addColors: function (e, t) {
                    return this.r = e.r + t.r, this.g = e.g + t.g, this.b = e.b + t.b, this
                },
                addScalar: function (e) {
                    return this.r += e, this.g += e, this.b += e, this
                },
                sub: function (e) {
                    return this.r = Math.max(0, this.r - e.r), this.g = Math.max(0, this.g - e.g), this.b = Math.max(0, this.b - e.b), this
                },
                multiply: function (e) {
                    return this.r *= e.r, this.g *= e.g, this.b *= e.b, this
                },
                multiplyScalar: function (e) {
                    return this.r *= e, this.g *= e, this.b *= e, this
                },
                lerp: function (e, t) {
                    return this.r += (e.r - this.r) * t, this.g += (e.g - this.g) * t, this.b += (e.b - this.b) * t, this
                },
                lerpHSL: function (e, t) {
                    this.getHSL(De), e.getHSL(Ne);
                    var n = s.lerp(De.h, Ne.h, t),
                        r = s.lerp(De.s, Ne.s, t),
                        i = s.lerp(De.l, Ne.l, t);
                    return this.setHSL(n, r, i), this
                },
                equals: function (e) {
                    return e.r === this.r && e.g === this.g && e.b === this.b
                },
                fromArray: function (e, t) {
                    return void 0 === t && (t = 0), this.r = e[t], this.g = e[t + 1], this.b = e[t + 2], this
                },
                toArray: function (e, t) {
                    return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.r, e[t + 1] = this.g, e[t + 2] = this.b, e
                },
                toJSON: function () {
                    return this.getHex()
                }
            }), Ie.NAMES = Re, Object.assign(Fe.prototype, {
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    this.a = e.a, this.b = e.b, this.c = e.c, this.normal.copy(e.normal), this.color.copy(e.color), this.materialIndex = e.materialIndex;
                    for (var t = 0, n = e.vertexNormals.length; t < n; t++) this.vertexNormals[t] = e.vertexNormals[t].clone();
                    for (t = 0, n = e.vertexColors.length; t < n; t++) this.vertexColors[t] = e.vertexColors[t].clone();
                    return this
                }
            });
            var Ue = 0;

            function He() {
                Object.defineProperty(this, "id", {
                    value: Ue++
                }), this.uuid = s.generateUUID(), this.name = "", this.type = "Material", this.fog = !0, this.blending = 1, this.side = 0, this.flatShading = !1, this.vertexColors = !1, this.opacity = 1, this.transparent = !1, this.blendSrc = 204, this.blendDst = 205, this.blendEquation = 100, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = 3, this.depthTest = !0, this.depthWrite = !0, this.stencilWriteMask = 255, this.stencilFunc = 519, this.stencilRef = 0, this.stencilFuncMask = 255, this.stencilFail = 7680, this.stencilZFail = 7680, this.stencilZPass = 7680, this.stencilWrite = !1, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaTest = 0, this.premultipliedAlpha = !1, this.visible = !0, this.toneMapped = !0, this.userData = {}, this.version = 0
            }

            function Ge(e) {
                He.call(this), this.type = "MeshBasicMaterial", this.color = new Ie(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = 0, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.setValues(e)
            }
            He.prototype = Object.assign(Object.create(r.prototype), {
                constructor: He,
                isMaterial: !0,
                onBeforeCompile: function () {},
                setValues: function (e) {
                    if (void 0 !== e)
                        for (var t in e) {
                            var n = e[t];
                            if (void 0 !== n)
                                if ("shading" !== t) {
                                    var r = this[t];
                                    void 0 !== r ? r && r.isColor ? r.set(n) : r && r.isVector3 && n && n.isVector3 ? r.copy(n) : this[t] = n : console.warn("THREE." + this.type + ": '" + t + "' is not a property of this material.")
                                } else console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = 1 === n;
                            else console.warn("THREE.Material: '" + t + "' parameter is undefined.")
                        }
                },
                toJSON: function (e) {
                    var t = void 0 === e || "string" == typeof e;
                    t && (e = {
                        textures: {},
                        images: {}
                    });
                    var n = {
                        metadata: {
                            version: 4.5,
                            type: "Material",
                            generator: "Material.toJSON"
                        }
                    };

                    function r(e) {
                        var t = [];
                        for (var n in e) {
                            var r = e[n];
                            delete r.metadata, t.push(r)
                        }
                        return t
                    }
                    if (n.uuid = this.uuid, n.type = this.type, "" !== this.name && (n.name = this.name), this.color && this.color.isColor && (n.color = this.color.getHex()), void 0 !== this.roughness && (n.roughness = this.roughness), void 0 !== this.metalness && (n.metalness = this.metalness), this.sheen && this.sheen.isColor && (n.sheen = this.sheen.getHex()), this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()), this.emissiveIntensity && 1 !== this.emissiveIntensity && (n.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (n.specular = this.specular.getHex()), void 0 !== this.shininess && (n.shininess = this.shininess), void 0 !== this.clearcoat && (n.clearcoat = this.clearcoat), void 0 !== this.clearcoatRoughness && (n.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatMap && this.clearcoatMap.isTexture && (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid), this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (n.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid, n.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid), this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(e).uuid), this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(e).uuid, n.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(e).uuid, n.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(e).uuid, n.normalMapType = this.normalMapType, n.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(e).uuid, n.displacementScale = this.displacementScale, n.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(e).uuid, n.reflectivity = this.reflectivity, n.refractionRatio = this.refractionRatio, void 0 !== this.combine && (n.combine = this.combine), void 0 !== this.envMapIntensity && (n.envMapIntensity = this.envMapIntensity)), this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(e).uuid), void 0 !== this.size && (n.size = this.size), void 0 !== this.sizeAttenuation && (n.sizeAttenuation = this.sizeAttenuation), 1 !== this.blending && (n.blending = this.blending), !0 === this.flatShading && (n.flatShading = this.flatShading), 0 !== this.side && (n.side = this.side), this.vertexColors && (n.vertexColors = !0), this.opacity < 1 && (n.opacity = this.opacity), !0 === this.transparent && (n.transparent = this.transparent), n.depthFunc = this.depthFunc, n.depthTest = this.depthTest, n.depthWrite = this.depthWrite, n.stencilWrite = this.stencilWrite, n.stencilWriteMask = this.stencilWriteMask, n.stencilFunc = this.stencilFunc, n.stencilRef = this.stencilRef, n.stencilFuncMask = this.stencilFuncMask, n.stencilFail = this.stencilFail, n.stencilZFail = this.stencilZFail, n.stencilZPass = this.stencilZPass, this.rotation && 0 !== this.rotation && (n.rotation = this.rotation), !0 === this.polygonOffset && (n.polygonOffset = !0), 0 !== this.polygonOffsetFactor && (n.polygonOffsetFactor = this.polygonOffsetFactor), 0 !== this.polygonOffsetUnits && (n.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth && 1 !== this.linewidth && (n.linewidth = this.linewidth), void 0 !== this.dashSize && (n.dashSize = this.dashSize), void 0 !== this.gapSize && (n.gapSize = this.gapSize), void 0 !== this.scale && (n.scale = this.scale), !0 === this.dithering && (n.dithering = !0), this.alphaTest > 0 && (n.alphaTest = this.alphaTest), !0 === this.premultipliedAlpha && (n.premultipliedAlpha = this.premultipliedAlpha), !0 === this.wireframe && (n.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth), "round" !== this.wireframeLinecap && (n.wireframeLinecap = this.wireframeLinecap), "round" !== this.wireframeLinejoin && (n.wireframeLinejoin = this.wireframeLinejoin), !0 === this.morphTargets && (n.morphTargets = !0), !0 === this.morphNormals && (n.morphNormals = !0), !0 === this.skinning && (n.skinning = !0), !1 === this.visible && (n.visible = !1), !1 === this.toneMapped && (n.toneMapped = !1), "{}" !== JSON.stringify(this.userData) && (n.userData = this.userData), t) {
                        var i = r(e.textures),
                            o = r(e.images);
                        i.length > 0 && (n.textures = i), o.length > 0 && (n.images = o)
                    }
                    return n
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    this.name = e.name, this.fog = e.fog, this.blending = e.blending, this.side = e.side, this.flatShading = e.flatShading, this.vertexColors = e.vertexColors, this.opacity = e.opacity, this.transparent = e.transparent, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.stencilWriteMask = e.stencilWriteMask, this.stencilFunc = e.stencilFunc, this.stencilRef = e.stencilRef, this.stencilFuncMask = e.stencilFuncMask, this.stencilFail = e.stencilFail, this.stencilZFail = e.stencilZFail, this.stencilZPass = e.stencilZPass, this.stencilWrite = e.stencilWrite;
                    var t = e.clippingPlanes,
                        n = null;
                    if (null !== t) {
                        var r = t.length;
                        n = new Array(r);
                        for (var i = 0; i !== r; ++i) n[i] = t[i].clone()
                    }
                    return this.clippingPlanes = n, this.clipIntersection = e.clipIntersection, this.clipShadows = e.clipShadows, this.shadowSide = e.shadowSide, this.colorWrite = e.colorWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.dithering = e.dithering, this.alphaTest = e.alphaTest, this.premultipliedAlpha = e.premultipliedAlpha, this.visible = e.visible, this.toneMapped = e.toneMapped, this.userData = JSON.parse(JSON.stringify(e.userData)), this
                },
                dispose: function () {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }), Object.defineProperty(He.prototype, "needsUpdate", {
                set: function (e) {
                    !0 === e && this.version++
                }
            }), Ge.prototype = Object.create(He.prototype), Ge.prototype.constructor = Ge, Ge.prototype.isMeshBasicMaterial = !0, Ge.prototype.copy = function (e) {
                return He.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this
            };
            var Ve = new _;

            function We(e, t, n) {
                if (Array.isArray(e)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                this.name = "", this.array = e, this.itemSize = t, this.count = void 0 !== e ? e.length / t : 0, this.normalized = !0 === n, this.usage = 35044, this.updateRange = {
                    offset: 0,
                    count: -1
                }, this.version = 0
            }

            function qe(e, t, n) {
                We.call(this, new Int8Array(e), t, n)
            }

            function Xe(e, t, n) {
                We.call(this, new Uint8Array(e), t, n)
            }

            function Ye(e, t, n) {
                We.call(this, new Uint8ClampedArray(e), t, n)
            }

            function Je(e, t, n) {
                We.call(this, new Int16Array(e), t, n)
            }

            function Ze(e, t, n) {
                We.call(this, new Uint16Array(e), t, n)
            }

            function Qe(e, t, n) {
                We.call(this, new Int32Array(e), t, n)
            }

            function $e(e, t, n) {
                We.call(this, new Uint32Array(e), t, n)
            }

            function Ke(e, t, n) {
                We.call(this, new Float32Array(e), t, n)
            }

            function et(e, t, n) {
                We.call(this, new Float64Array(e), t, n)
            }

            function tt() {
                this.vertices = [], this.normals = [], this.colors = [], this.uvs = [], this.uvs2 = [], this.groups = [], this.morphTargets = {}, this.skinWeights = [], this.skinIndices = [], this.boundingBox = null, this.boundingSphere = null, this.verticesNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.uvsNeedUpdate = !1, this.groupsNeedUpdate = !1
            }

            function nt(e) {
                if (0 === e.length) return -1 / 0;
                let t = e[0];
                for (let n = 1, r = e.length; n < r; ++n) e[n] > t && (t = e[n]);
                return t
            }
            Object.defineProperty(We.prototype, "needsUpdate", {
                set: function (e) {
                    !0 === e && this.version++
                }
            }), Object.assign(We.prototype, {
                isBufferAttribute: !0,
                onUploadCallback: function () {},
                setUsage: function (e) {
                    return this.usage = e, this
                },
                copy: function (e) {
                    return this.name = e.name, this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.count = e.count, this.normalized = e.normalized, this.usage = e.usage, this
                },
                copyAt: function (e, t, n) {
                    e *= this.itemSize, n *= t.itemSize;
                    for (var r = 0, i = this.itemSize; r < i; r++) this.array[e + r] = t.array[n + r];
                    return this
                },
                copyArray: function (e) {
                    return this.array.set(e), this
                },
                copyColorsArray: function (e) {
                    for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                        var o = e[r];
                        void 0 === o && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", r), o = new Ie), t[n++] = o.r, t[n++] = o.g, t[n++] = o.b
                    }
                    return this
                },
                copyVector2sArray: function (e) {
                    for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                        var o = e[r];
                        void 0 === o && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", r), o = new c), t[n++] = o.x, t[n++] = o.y
                    }
                    return this
                },
                copyVector3sArray: function (e) {
                    for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                        var o = e[r];
                        void 0 === o && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", r), o = new _), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z
                    }
                    return this
                },
                copyVector4sArray: function (e) {
                    for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                        var o = e[r];
                        void 0 === o && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", r), o = new p), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z, t[n++] = o.w
                    }
                    return this
                },
                applyMatrix3: function (e) {
                    for (var t = 0, n = this.count; t < n; t++) Ve.x = this.getX(t), Ve.y = this.getY(t), Ve.z = this.getZ(t), Ve.applyMatrix3(e), this.setXYZ(t, Ve.x, Ve.y, Ve.z);
                    return this
                },
                applyMatrix4: function (e) {
                    for (var t = 0, n = this.count; t < n; t++) Ve.x = this.getX(t), Ve.y = this.getY(t), Ve.z = this.getZ(t), Ve.applyMatrix4(e), this.setXYZ(t, Ve.x, Ve.y, Ve.z);
                    return this
                },
                applyNormalMatrix: function (e) {
                    for (var t = 0, n = this.count; t < n; t++) Ve.x = this.getX(t), Ve.y = this.getY(t), Ve.z = this.getZ(t), Ve.applyNormalMatrix(e), this.setXYZ(t, Ve.x, Ve.y, Ve.z);
                    return this
                },
                transformDirection: function (e) {
                    for (var t = 0, n = this.count; t < n; t++) Ve.x = this.getX(t), Ve.y = this.getY(t), Ve.z = this.getZ(t), Ve.transformDirection(e), this.setXYZ(t, Ve.x, Ve.y, Ve.z);
                    return this
                },
                set: function (e, t) {
                    return void 0 === t && (t = 0), this.array.set(e, t), this
                },
                getX: function (e) {
                    return this.array[e * this.itemSize]
                },
                setX: function (e, t) {
                    return this.array[e * this.itemSize] = t, this
                },
                getY: function (e) {
                    return this.array[e * this.itemSize + 1]
                },
                setY: function (e, t) {
                    return this.array[e * this.itemSize + 1] = t, this
                },
                getZ: function (e) {
                    return this.array[e * this.itemSize + 2]
                },
                setZ: function (e, t) {
                    return this.array[e * this.itemSize + 2] = t, this
                },
                getW: function (e) {
                    return this.array[e * this.itemSize + 3]
                },
                setW: function (e, t) {
                    return this.array[e * this.itemSize + 3] = t, this
                },
                setXY: function (e, t, n) {
                    return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this
                },
                setXYZ: function (e, t, n, r) {
                    return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = r, this
                },
                setXYZW: function (e, t, n, r, i) {
                    return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = r, this.array[e + 3] = i, this
                },
                onUpload: function (e) {
                    return this.onUploadCallback = e, this
                },
                clone: function () {
                    return new this.constructor(this.array, this.itemSize).copy(this)
                },
                toJSON: function () {
                    return {
                        itemSize: this.itemSize,
                        type: this.array.constructor.name,
                        array: Array.prototype.slice.call(this.array),
                        normalized: this.normalized
                    }
                }
            }), qe.prototype = Object.create(We.prototype), qe.prototype.constructor = qe, Xe.prototype = Object.create(We.prototype), Xe.prototype.constructor = Xe, Ye.prototype = Object.create(We.prototype), Ye.prototype.constructor = Ye, Je.prototype = Object.create(We.prototype), Je.prototype.constructor = Je, Ze.prototype = Object.create(We.prototype), Ze.prototype.constructor = Ze, Qe.prototype = Object.create(We.prototype), Qe.prototype.constructor = Qe, $e.prototype = Object.create(We.prototype), $e.prototype.constructor = $e, Ke.prototype = Object.create(We.prototype), Ke.prototype.constructor = Ke, et.prototype = Object.create(We.prototype), et.prototype.constructor = et, Object.assign(tt.prototype, {
                computeGroups: function (e) {
                    for (var t, n = [], r = void 0, i = e.faces, o = 0; o < i.length; o++) {
                        var a = i[o];
                        a.materialIndex !== r && (r = a.materialIndex, void 0 !== t && (t.count = 3 * o - t.start, n.push(t)), t = {
                            start: 3 * o,
                            materialIndex: r
                        })
                    }
                    void 0 !== t && (t.count = 3 * o - t.start, n.push(t)), this.groups = n
                },
                fromGeometry: function (e) {
                    var t, n = e.faces,
                        r = e.vertices,
                        i = e.faceVertexUvs,
                        o = i[0] && i[0].length > 0,
                        a = i[1] && i[1].length > 0,
                        s = e.morphTargets,
                        l = s.length;
                    if (l > 0) {
                        t = [];
                        for (var u = 0; u < l; u++) t[u] = {
                            name: s[u].name,
                            data: []
                        };
                        this.morphTargets.position = t
                    }
                    var h, d = e.morphNormals,
                        p = d.length;
                    if (p > 0) {
                        h = [];
                        for (u = 0; u < p; u++) h[u] = {
                            name: d[u].name,
                            data: []
                        };
                        this.morphTargets.normal = h
                    }
                    var f = e.skinIndices,
                        m = e.skinWeights,
                        g = f.length === r.length,
                        v = m.length === r.length;
                    r.length > 0 && 0 === n.length && console.error("THREE.DirectGeometry: Faceless geometries are not supported.");
                    for (u = 0; u < n.length; u++) {
                        var y = n[u];
                        this.vertices.push(r[y.a], r[y.b], r[y.c]);
                        var _ = y.vertexNormals;
                        if (3 === _.length) this.normals.push(_[0], _[1], _[2]);
                        else {
                            var x = y.normal;
                            this.normals.push(x, x, x)
                        }
                        var b, w = y.vertexColors;
                        if (3 === w.length) this.colors.push(w[0], w[1], w[2]);
                        else {
                            var M = y.color;
                            this.colors.push(M, M, M)
                        }
                        if (!0 === o) void 0 !== (b = i[0][u]) ? this.uvs.push(b[0], b[1], b[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", u), this.uvs.push(new c, new c, new c));
                        if (!0 === a) void 0 !== (b = i[1][u]) ? this.uvs2.push(b[0], b[1], b[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", u), this.uvs2.push(new c, new c, new c));
                        for (var T = 0; T < l; T++) {
                            var S = s[T].vertices;
                            t[T].data.push(S[y.a], S[y.b], S[y.c])
                        }
                        for (T = 0; T < p; T++) {
                            var E = d[T].vertexNormals[u];
                            h[T].data.push(E.a, E.b, E.c)
                        }
                        g && this.skinIndices.push(f[y.a], f[y.b], f[y.c]), v && this.skinWeights.push(m[y.a], m[y.b], m[y.c])
                    }
                    return this.computeGroups(e), this.verticesNeedUpdate = e.verticesNeedUpdate, this.normalsNeedUpdate = e.normalsNeedUpdate, this.colorsNeedUpdate = e.colorsNeedUpdate, this.uvsNeedUpdate = e.uvsNeedUpdate, this.groupsNeedUpdate = e.groupsNeedUpdate, null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()), this
                }
            });
            var rt = 1,
                it = new A,
                ot = new W,
                at = new _,
                st = new ae,
                ct = new ae,
                lt = new _;

            function ut() {
                Object.defineProperty(this, "id", {
                    value: rt += 2
                }), this.uuid = s.generateUUID(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.morphTargetsRelative = !1, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = {
                    start: 0,
                    count: 1 / 0
                }, this.userData = {}
            }
            ut.prototype = Object.assign(Object.create(r.prototype), {
                constructor: ut,
                isBufferGeometry: !0,
                getIndex: function () {
                    return this.index
                },
                setIndex: function (e) {
                    Array.isArray(e) ? this.index = new(nt(e) > 65535 ? $e : Ze)(e, 1) : this.index = e
                },
                getAttribute: function (e) {
                    return this.attributes[e]
                },
                setAttribute: function (e, t) {
                    return this.attributes[e] = t, this
                },
                deleteAttribute: function (e) {
                    return delete this.attributes[e], this
                },
                addGroup: function (e, t, n) {
                    this.groups.push({
                        start: e,
                        count: t,
                        materialIndex: void 0 !== n ? n : 0
                    })
                },
                clearGroups: function () {
                    this.groups = []
                },
                setDrawRange: function (e, t) {
                    this.drawRange.start = e, this.drawRange.count = t
                },
                applyMatrix4: function (e) {
                    var t = this.attributes.position;
                    void 0 !== t && (t.applyMatrix4(e), t.needsUpdate = !0);
                    var n = this.attributes.normal;
                    if (void 0 !== n) {
                        var r = (new l).getNormalMatrix(e);
                        n.applyNormalMatrix(r), n.needsUpdate = !0
                    }
                    var i = this.attributes.tangent;
                    return void 0 !== i && (i.transformDirection(e), i.needsUpdate = !0), null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this
                },
                rotateX: function (e) {
                    return it.makeRotationX(e), this.applyMatrix4(it), this
                },
                rotateY: function (e) {
                    return it.makeRotationY(e), this.applyMatrix4(it), this
                },
                rotateZ: function (e) {
                    return it.makeRotationZ(e), this.applyMatrix4(it), this
                },
                translate: function (e, t, n) {
                    return it.makeTranslation(e, t, n), this.applyMatrix4(it), this
                },
                scale: function (e, t, n) {
                    return it.makeScale(e, t, n), this.applyMatrix4(it), this
                },
                lookAt: function (e) {
                    return ot.lookAt(e), ot.updateMatrix(), this.applyMatrix4(ot.matrix), this
                },
                center: function () {
                    return this.computeBoundingBox(), this.boundingBox.getCenter(at).negate(), this.translate(at.x, at.y, at.z), this
                },
                setFromObject: function (e) {
                    var t = e.geometry;
                    if (e.isPoints || e.isLine) {
                        var n = new Ke(3 * t.vertices.length, 3),
                            r = new Ke(3 * t.colors.length, 3);
                        if (this.setAttribute("position", n.copyVector3sArray(t.vertices)), this.setAttribute("color", r.copyColorsArray(t.colors)), t.lineDistances && t.lineDistances.length === t.vertices.length) {
                            var i = new Ke(t.lineDistances.length, 1);
                            this.setAttribute("lineDistance", i.copyArray(t.lineDistances))
                        }
                        null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()), null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone())
                    } else e.isMesh && t && t.isGeometry && this.fromGeometry(t);
                    return this
                },
                setFromPoints: function (e) {
                    for (var t = [], n = 0, r = e.length; n < r; n++) {
                        var i = e[n];
                        t.push(i.x, i.y, i.z || 0)
                    }
                    return this.setAttribute("position", new Ke(t, 3)), this
                },
                updateFromObject: function (e) {
                    var t, n = e.geometry;
                    if (e.isMesh) {
                        var r = n.__directGeometry;
                        if (!0 === n.elementsNeedUpdate && (r = void 0, n.elementsNeedUpdate = !1), void 0 === r) return this.fromGeometry(n);
                        r.verticesNeedUpdate = n.verticesNeedUpdate, r.normalsNeedUpdate = n.normalsNeedUpdate, r.colorsNeedUpdate = n.colorsNeedUpdate, r.uvsNeedUpdate = n.uvsNeedUpdate, r.groupsNeedUpdate = n.groupsNeedUpdate, n.verticesNeedUpdate = !1, n.normalsNeedUpdate = !1, n.colorsNeedUpdate = !1, n.uvsNeedUpdate = !1, n.groupsNeedUpdate = !1, n = r
                    }
                    return !0 === n.verticesNeedUpdate && (void 0 !== (t = this.attributes.position) && (t.copyVector3sArray(n.vertices), t.needsUpdate = !0), n.verticesNeedUpdate = !1), !0 === n.normalsNeedUpdate && (void 0 !== (t = this.attributes.normal) && (t.copyVector3sArray(n.normals), t.needsUpdate = !0), n.normalsNeedUpdate = !1), !0 === n.colorsNeedUpdate && (void 0 !== (t = this.attributes.color) && (t.copyColorsArray(n.colors), t.needsUpdate = !0), n.colorsNeedUpdate = !1), n.uvsNeedUpdate && (void 0 !== (t = this.attributes.uv) && (t.copyVector2sArray(n.uvs), t.needsUpdate = !0), n.uvsNeedUpdate = !1), n.lineDistancesNeedUpdate && (void 0 !== (t = this.attributes.lineDistance) && (t.copyArray(n.lineDistances), t.needsUpdate = !0), n.lineDistancesNeedUpdate = !1), n.groupsNeedUpdate && (n.computeGroups(e.geometry), this.groups = n.groups, n.groupsNeedUpdate = !1), this
                },
                fromGeometry: function (e) {
                    return e.__directGeometry = (new tt).fromGeometry(e), this.fromDirectGeometry(e.__directGeometry)
                },
                fromDirectGeometry: function (e) {
                    var t = new Float32Array(3 * e.vertices.length);
                    if (this.setAttribute("position", new We(t, 3).copyVector3sArray(e.vertices)), e.normals.length > 0) {
                        var n = new Float32Array(3 * e.normals.length);
                        this.setAttribute("normal", new We(n, 3).copyVector3sArray(e.normals))
                    }
                    if (e.colors.length > 0) {
                        var r = new Float32Array(3 * e.colors.length);
                        this.setAttribute("color", new We(r, 3).copyColorsArray(e.colors))
                    }
                    if (e.uvs.length > 0) {
                        var i = new Float32Array(2 * e.uvs.length);
                        this.setAttribute("uv", new We(i, 2).copyVector2sArray(e.uvs))
                    }
                    if (e.uvs2.length > 0) {
                        var o = new Float32Array(2 * e.uvs2.length);
                        this.setAttribute("uv2", new We(o, 2).copyVector2sArray(e.uvs2))
                    }
                    for (var a in this.groups = e.groups, e.morphTargets) {
                        for (var s = [], c = e.morphTargets[a], l = 0, u = c.length; l < u; l++) {
                            var h = c[l],
                                d = new Ke(3 * h.data.length, 3);
                            d.name = h.name, s.push(d.copyVector3sArray(h.data))
                        }
                        this.morphAttributes[a] = s
                    }
                    if (e.skinIndices.length > 0) {
                        var p = new Ke(4 * e.skinIndices.length, 4);
                        this.setAttribute("skinIndex", p.copyVector4sArray(e.skinIndices))
                    }
                    if (e.skinWeights.length > 0) {
                        var f = new Ke(4 * e.skinWeights.length, 4);
                        this.setAttribute("skinWeight", f.copyVector4sArray(e.skinWeights))
                    }
                    return null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()), this
                },
                computeBoundingBox: function () {
                    null === this.boundingBox && (this.boundingBox = new ae);
                    var e = this.attributes.position,
                        t = this.morphAttributes.position;
                    if (void 0 !== e) {
                        if (this.boundingBox.setFromBufferAttribute(e), t)
                            for (var n = 0, r = t.length; n < r; n++) {
                                var i = t[n];
                                st.setFromBufferAttribute(i), this.morphTargetsRelative ? (lt.addVectors(this.boundingBox.min, st.min), this.boundingBox.expandByPoint(lt), lt.addVectors(this.boundingBox.max, st.max), this.boundingBox.expandByPoint(lt)) : (this.boundingBox.expandByPoint(st.min), this.boundingBox.expandByPoint(st.max))
                            }
                    } else this.boundingBox.makeEmpty();
                    (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
                },
                computeBoundingSphere: function () {
                    null === this.boundingSphere && (this.boundingSphere = new le);
                    var e = this.attributes.position,
                        t = this.morphAttributes.position;
                    if (e) {
                        var n = this.boundingSphere.center;
                        if (st.setFromBufferAttribute(e), t)
                            for (var r = 0, i = t.length; r < i; r++) {
                                var o = t[r];
                                ct.setFromBufferAttribute(o), this.morphTargetsRelative ? (lt.addVectors(st.min, ct.min), st.expandByPoint(lt), lt.addVectors(st.max, ct.max), st.expandByPoint(lt)) : (st.expandByPoint(ct.min), st.expandByPoint(ct.max))
                            }
                        st.getCenter(n);
                        var a = 0;
                        for (r = 0, i = e.count; r < i; r++) lt.fromBufferAttribute(e, r), a = Math.max(a, n.distanceToSquared(lt));
                        if (t)
                            for (r = 0, i = t.length; r < i; r++) {
                                o = t[r];
                                for (var s = this.morphTargetsRelative, c = 0, l = o.count; c < l; c++) lt.fromBufferAttribute(o, c), s && (at.fromBufferAttribute(e, c), lt.add(at)), a = Math.max(a, n.distanceToSquared(lt))
                            }
                        this.boundingSphere.radius = Math.sqrt(a), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
                    }
                },
                computeFaceNormals: function () {},
                computeVertexNormals: function () {
                    var e = this.index,
                        t = this.attributes;
                    if (t.position) {
                        var n = t.position.array;
                        if (void 0 === t.normal) this.setAttribute("normal", new We(new Float32Array(n.length), 3));
                        else
                            for (var r = t.normal.array, i = 0, o = r.length; i < o; i++) r[i] = 0;
                        var a, s, c, l = t.normal.array,
                            u = new _,
                            h = new _,
                            d = new _,
                            p = new _,
                            f = new _;
                        if (e) {
                            var m = e.array;
                            for (i = 0, o = e.count; i < o; i += 3) a = 3 * m[i + 0], s = 3 * m[i + 1], c = 3 * m[i + 2], u.fromArray(n, a), h.fromArray(n, s), d.fromArray(n, c), p.subVectors(d, h), f.subVectors(u, h), p.cross(f), l[a] += p.x, l[a + 1] += p.y, l[a + 2] += p.z, l[s] += p.x, l[s + 1] += p.y, l[s + 2] += p.z, l[c] += p.x, l[c + 1] += p.y, l[c + 2] += p.z
                        } else
                            for (i = 0, o = n.length; i < o; i += 9) u.fromArray(n, i), h.fromArray(n, i + 3), d.fromArray(n, i + 6), p.subVectors(d, h), f.subVectors(u, h), p.cross(f), l[i] = p.x, l[i + 1] = p.y, l[i + 2] = p.z, l[i + 3] = p.x, l[i + 4] = p.y, l[i + 5] = p.z, l[i + 6] = p.x, l[i + 7] = p.y, l[i + 8] = p.z;
                        this.normalizeNormals(), t.normal.needsUpdate = !0
                    }
                },
                merge: function (e, t) {
                    if (e && e.isBufferGeometry) {
                        void 0 === t && (t = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
                        var n = this.attributes;
                        for (var r in n)
                            if (void 0 !== e.attributes[r])
                                for (var i = n[r].array, o = e.attributes[r], a = o.array, s = o.itemSize * t, c = Math.min(a.length, i.length - s), l = 0, u = s; l < c; l++, u++) i[u] = a[l];
                        return this
                    }
                    console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e)
                },
                normalizeNormals: function () {
                    for (var e = this.attributes.normal, t = 0, n = e.count; t < n; t++) lt.x = e.getX(t), lt.y = e.getY(t), lt.z = e.getZ(t), lt.normalize(), e.setXYZ(t, lt.x, lt.y, lt.z)
                },
                toNonIndexed: function () {
                    function e(e, t) {
                        for (var n = e.array, r = e.itemSize, i = e.normalized, o = new n.constructor(t.length * r), a = 0, s = 0, c = 0, l = t.length; c < l; c++) {
                            a = t[c] * r;
                            for (var u = 0; u < r; u++) o[s++] = n[a++]
                        }
                        return new We(o, r, i)
                    }
                    if (null === this.index) return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."), this;
                    var t = new ut,
                        n = this.index.array,
                        r = this.attributes;
                    for (var i in r) {
                        var o = e(r[i], n);
                        t.setAttribute(i, o)
                    }
                    var a = this.morphAttributes;
                    for (i in a) {
                        for (var s = [], c = a[i], l = 0, u = c.length; l < u; l++) {
                            o = e(c[l], n);
                            s.push(o)
                        }
                        t.morphAttributes[i] = s
                    }
                    t.morphTargetsRelative = this.morphTargetsRelative;
                    for (var h = this.groups, d = (l = 0, h.length); l < d; l++) {
                        var p = h[l];
                        t.addGroup(p.start, p.count, p.materialIndex)
                    }
                    return t
                },
                toJSON: function () {
                    var e = {
                        metadata: {
                            version: 4.5,
                            type: "BufferGeometry",
                            generator: "BufferGeometry.toJSON"
                        }
                    };
                    if (e.uuid = this.uuid, e.type = this.type, "" !== this.name && (e.name = this.name), Object.keys(this.userData).length > 0 && (e.userData = this.userData), void 0 !== this.parameters) {
                        var t = this.parameters;
                        for (var n in t) void 0 !== t[n] && (e[n] = t[n]);
                        return e
                    }
                    e.data = {
                        attributes: {}
                    };
                    var r = this.index;
                    null !== r && (e.data.index = {
                        type: r.array.constructor.name,
                        array: Array.prototype.slice.call(r.array)
                    });
                    var i = this.attributes;
                    for (var n in i) {
                        var o = (d = i[n]).toJSON();
                        "" !== d.name && (o.name = d.name), e.data.attributes[n] = o
                    }
                    var a = {},
                        s = !1;
                    for (var n in this.morphAttributes) {
                        for (var c = this.morphAttributes[n], l = [], u = 0, h = c.length; u < h; u++) {
                            var d;
                            o = (d = c[u]).toJSON();
                            "" !== d.name && (o.name = d.name), l.push(o)
                        }
                        l.length > 0 && (a[n] = l, s = !0)
                    }
                    s && (e.data.morphAttributes = a, e.data.morphTargetsRelative = this.morphTargetsRelative);
                    var p = this.groups;
                    p.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(p)));
                    var f = this.boundingSphere;
                    return null !== f && (e.data.boundingSphere = {
                        center: f.center.toArray(),
                        radius: f.radius
                    }), e
                },
                clone: function () {
                    return (new ut).copy(this)
                },
                copy: function (e) {
                    var t, n, r;
                    this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.name = e.name;
                    var i = e.index;
                    null !== i && this.setIndex(i.clone());
                    var o = e.attributes;
                    for (t in o) {
                        var a = o[t];
                        this.setAttribute(t, a.clone())
                    }
                    var s = e.morphAttributes;
                    for (t in s) {
                        var c = [],
                            l = s[t];
                        for (n = 0, r = l.length; n < r; n++) c.push(l[n].clone());
                        this.morphAttributes[t] = c
                    }
                    this.morphTargetsRelative = e.morphTargetsRelative;
                    var u = e.groups;
                    for (n = 0, r = u.length; n < r; n++) {
                        var h = u[n];
                        this.addGroup(h.start, h.count, h.materialIndex)
                    }
                    var d = e.boundingBox;
                    null !== d && (this.boundingBox = d.clone());
                    var p = e.boundingSphere;
                    return null !== p && (this.boundingSphere = p.clone()), this.drawRange.start = e.drawRange.start, this.drawRange.count = e.drawRange.count, this.userData = e.userData, this
                },
                dispose: function () {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            });
            var ht = new A,
                dt = new ve,
                pt = new le,
                ft = new _,
                mt = new _,
                gt = new _,
                vt = new _,
                yt = new _,
                _t = new _,
                xt = new _,
                bt = new _,
                wt = new _,
                Mt = new c,
                Tt = new c,
                St = new c,
                Et = new _,
                At = new _;

            function jt(e, t) {
                W.call(this), this.type = "Mesh", this.geometry = void 0 !== e ? e : new ut, this.material = void 0 !== t ? t : new Ge, this.updateMorphTargets()
            }

            function Lt(e, t, n, r, i, o, a, s) {
                if (null === (1 === t.side ? r.intersectTriangle(a, o, i, !0, s) : r.intersectTriangle(i, o, a, 2 !== t.side, s))) return null;
                At.copy(s), At.applyMatrix4(e.matrixWorld);
                var c = n.ray.origin.distanceTo(At);
                return c < n.near || c > n.far ? null : {
                    distance: c,
                    point: At.clone(),
                    object: e
                }
            }

            function Ct(e, t, n, r, i, o, a, s, l, u, h, d) {
                ft.fromBufferAttribute(i, u), mt.fromBufferAttribute(i, h), gt.fromBufferAttribute(i, d);
                var p = e.morphTargetInfluences;
                if (t.morphTargets && o && p) {
                    xt.set(0, 0, 0), bt.set(0, 0, 0), wt.set(0, 0, 0);
                    for (var f = 0, m = o.length; f < m; f++) {
                        var g = p[f],
                            v = o[f];
                        0 !== g && (vt.fromBufferAttribute(v, u), yt.fromBufferAttribute(v, h), _t.fromBufferAttribute(v, d), a ? (xt.addScaledVector(vt, g), bt.addScaledVector(yt, g), wt.addScaledVector(_t, g)) : (xt.addScaledVector(vt.sub(ft), g), bt.addScaledVector(yt.sub(mt), g), wt.addScaledVector(_t.sub(gt), g)))
                    }
                    ft.add(xt), mt.add(bt), gt.add(wt)
                }
                e.isSkinnedMesh && (e.boneTransform(u, ft), e.boneTransform(h, mt), e.boneTransform(d, gt));
                var y = Lt(e, t, n, r, ft, mt, gt, Et);
                if (y) {
                    s && (Mt.fromBufferAttribute(s, u), Tt.fromBufferAttribute(s, h), St.fromBufferAttribute(s, d), y.uv = Oe.getUV(Et, ft, mt, gt, Mt, Tt, St, new c)), l && (Mt.fromBufferAttribute(l, u), Tt.fromBufferAttribute(l, h), St.fromBufferAttribute(l, d), y.uv2 = Oe.getUV(Et, ft, mt, gt, Mt, Tt, St, new c));
                    var _ = new Fe(u, h, d);
                    Oe.getNormal(ft, mt, gt, _.normal), y.face = _
                }
                return y
            }
            jt.prototype = Object.assign(Object.create(W.prototype), {
                constructor: jt,
                isMesh: !0,
                copy: function (e) {
                    return W.prototype.copy.call(this, e), void 0 !== e.morphTargetInfluences && (this.morphTargetInfluences = e.morphTargetInfluences.slice()), void 0 !== e.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)), this
                },
                updateMorphTargets: function () {
                    var e, t, n, r = this.geometry;
                    if (r.isBufferGeometry) {
                        var i = r.morphAttributes,
                            o = Object.keys(i);
                        if (o.length > 0) {
                            var a = i[o[0]];
                            if (void 0 !== a)
                                for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, e = 0, t = a.length; e < t; e++) n = a[e].name || String(e), this.morphTargetInfluences.push(0), this.morphTargetDictionary[n] = e
                        }
                    } else {
                        var s = r.morphTargets;
                        void 0 !== s && s.length > 0 && console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")
                    }
                },
                raycast: function (e, t) {
                    var n, r = this.geometry,
                        i = this.material,
                        o = this.matrixWorld;
                    if (void 0 !== i && (null === r.boundingSphere && r.computeBoundingSphere(), pt.copy(r.boundingSphere), pt.applyMatrix4(o), !1 !== e.ray.intersectsSphere(pt) && (ht.getInverse(o), dt.copy(e.ray).applyMatrix4(ht), null === r.boundingBox || !1 !== dt.intersectsBox(r.boundingBox))))
                        if (r.isBufferGeometry) {
                            var a, s, l, u, h, d, p, f, m, g = r.index,
                                v = r.attributes.position,
                                y = r.morphAttributes.position,
                                _ = r.morphTargetsRelative,
                                x = r.attributes.uv,
                                b = r.attributes.uv2,
                                w = r.groups,
                                M = r.drawRange;
                            if (null !== g)
                                if (Array.isArray(i))
                                    for (u = 0, d = w.length; u < d; u++)
                                        for (m = i[(f = w[u]).materialIndex], h = Math.max(f.start, M.start), p = Math.min(f.start + f.count, M.start + M.count); h < p; h += 3) a = g.getX(h), s = g.getX(h + 1), l = g.getX(h + 2), (n = Ct(this, m, e, dt, v, y, _, x, b, a, s, l)) && (n.faceIndex = Math.floor(h / 3), n.face.materialIndex = f.materialIndex, t.push(n));
                                else
                                    for (u = Math.max(0, M.start), d = Math.min(g.count, M.start + M.count); u < d; u += 3) a = g.getX(u), s = g.getX(u + 1), l = g.getX(u + 2), (n = Ct(this, i, e, dt, v, y, _, x, b, a, s, l)) && (n.faceIndex = Math.floor(u / 3), t.push(n));
                            else if (void 0 !== v)
                                if (Array.isArray(i))
                                    for (u = 0, d = w.length; u < d; u++)
                                        for (m = i[(f = w[u]).materialIndex], h = Math.max(f.start, M.start), p = Math.min(f.start + f.count, M.start + M.count); h < p; h += 3)(n = Ct(this, m, e, dt, v, y, _, x, b, a = h, s = h + 1, l = h + 2)) && (n.faceIndex = Math.floor(h / 3), n.face.materialIndex = f.materialIndex, t.push(n));
                                else
                                    for (u = Math.max(0, M.start), d = Math.min(v.count, M.start + M.count); u < d; u += 3)(n = Ct(this, i, e, dt, v, y, _, x, b, a = u, s = u + 1, l = u + 2)) && (n.faceIndex = Math.floor(u / 3), t.push(n))
                        } else if (r.isGeometry) {
                        var T, S, E, A, j = Array.isArray(i),
                            L = r.vertices,
                            C = r.faces,
                            P = r.faceVertexUvs[0];
                        P.length > 0 && (A = P);
                        for (var O = 0, R = C.length; O < R; O++) {
                            var D = C[O],
                                N = j ? i[D.materialIndex] : i;
                            if (void 0 !== N && (T = L[D.a], S = L[D.b], E = L[D.c], n = Lt(this, N, e, dt, T, S, E, Et))) {
                                if (A && A[O]) {
                                    var I = A[O];
                                    Mt.copy(I[0]), Tt.copy(I[1]), St.copy(I[2]), n.uv = Oe.getUV(Et, T, S, E, Mt, Tt, St, new c)
                                }
                                n.face = D, n.faceIndex = O, t.push(n)
                            }
                        }
                    }
                },
                clone: function () {
                    return new this.constructor(this.geometry, this.material).copy(this)
                }
            });
            var Pt = 0,
                Ot = new A,
                Rt = new W,
                Dt = new _;

            function Nt() {
                Object.defineProperty(this, "id", {
                    value: Pt += 2
                }), this.uuid = s.generateUUID(), this.name = "", this.type = "Geometry", this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [
                    []
                ], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.elementsNeedUpdate = !1, this.verticesNeedUpdate = !1, this.uvsNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.lineDistancesNeedUpdate = !1, this.groupsNeedUpdate = !1
            }
            Nt.prototype = Object.assign(Object.create(r.prototype), {
                constructor: Nt,
                isGeometry: !0,
                applyMatrix4: function (e) {
                    for (var t = (new l).getNormalMatrix(e), n = 0, r = this.vertices.length; n < r; n++) {
                        this.vertices[n].applyMatrix4(e)
                    }
                    for (n = 0, r = this.faces.length; n < r; n++) {
                        var i = this.faces[n];
                        i.normal.applyMatrix3(t).normalize();
                        for (var o = 0, a = i.vertexNormals.length; o < a; o++) i.vertexNormals[o].applyMatrix3(t).normalize()
                    }
                    return null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this.verticesNeedUpdate = !0, this.normalsNeedUpdate = !0, this
                },
                rotateX: function (e) {
                    return Ot.makeRotationX(e), this.applyMatrix4(Ot), this
                },
                rotateY: function (e) {
                    return Ot.makeRotationY(e), this.applyMatrix4(Ot), this
                },
                rotateZ: function (e) {
                    return Ot.makeRotationZ(e), this.applyMatrix4(Ot), this
                },
                translate: function (e, t, n) {
                    return Ot.makeTranslation(e, t, n), this.applyMatrix4(Ot), this
                },
                scale: function (e, t, n) {
                    return Ot.makeScale(e, t, n), this.applyMatrix4(Ot), this
                },
                lookAt: function (e) {
                    return Rt.lookAt(e), Rt.updateMatrix(), this.applyMatrix4(Rt.matrix), this
                },
                fromBufferGeometry: function (e) {
                    var t = this,
                        n = null !== e.index ? e.index.array : void 0,
                        r = e.attributes;
                    if (void 0 === r.position) return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."), this;
                    var i = r.position.array,
                        o = void 0 !== r.normal ? r.normal.array : void 0,
                        a = void 0 !== r.color ? r.color.array : void 0,
                        s = void 0 !== r.uv ? r.uv.array : void 0,
                        l = void 0 !== r.uv2 ? r.uv2.array : void 0;
                    void 0 !== l && (this.faceVertexUvs[1] = []);
                    for (var u = 0; u < i.length; u += 3) t.vertices.push((new _).fromArray(i, u)), void 0 !== a && t.colors.push((new Ie).fromArray(a, u));

                    function h(e, n, r, i) {
                        var u = void 0 === a ? [] : [t.colors[e].clone(), t.colors[n].clone(), t.colors[r].clone()],
                            h = new Fe(e, n, r, void 0 === o ? [] : [(new _).fromArray(o, 3 * e), (new _).fromArray(o, 3 * n), (new _).fromArray(o, 3 * r)], u, i);
                        t.faces.push(h), void 0 !== s && t.faceVertexUvs[0].push([(new c).fromArray(s, 2 * e), (new c).fromArray(s, 2 * n), (new c).fromArray(s, 2 * r)]), void 0 !== l && t.faceVertexUvs[1].push([(new c).fromArray(l, 2 * e), (new c).fromArray(l, 2 * n), (new c).fromArray(l, 2 * r)])
                    }
                    var d = e.groups;
                    if (d.length > 0)
                        for (u = 0; u < d.length; u++)
                            for (var p = d[u], f = p.start, m = f, g = f + p.count; m < g; m += 3) void 0 !== n ? h(n[m], n[m + 1], n[m + 2], p.materialIndex) : h(m, m + 1, m + 2, p.materialIndex);
                    else if (void 0 !== n)
                        for (u = 0; u < n.length; u += 3) h(n[u], n[u + 1], n[u + 2]);
                    else
                        for (u = 0; u < i.length / 3; u += 3) h(u, u + 1, u + 2);
                    return this.computeFaceNormals(), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()), null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), this
                },
                center: function () {
                    return this.computeBoundingBox(), this.boundingBox.getCenter(Dt).negate(), this.translate(Dt.x, Dt.y, Dt.z), this
                },
                normalize: function () {
                    this.computeBoundingSphere();
                    var e = this.boundingSphere.center,
                        t = this.boundingSphere.radius,
                        n = 0 === t ? 1 : 1 / t,
                        r = new A;
                    return r.set(n, 0, 0, -n * e.x, 0, n, 0, -n * e.y, 0, 0, n, -n * e.z, 0, 0, 0, 1), this.applyMatrix4(r), this
                },
                computeFaceNormals: function () {
                    for (var e = new _, t = new _, n = 0, r = this.faces.length; n < r; n++) {
                        var i = this.faces[n],
                            o = this.vertices[i.a],
                            a = this.vertices[i.b],
                            s = this.vertices[i.c];
                        e.subVectors(s, a), t.subVectors(o, a), e.cross(t), e.normalize(), i.normal.copy(e)
                    }
                },
                computeVertexNormals: function (e) {
                    var t, n, r, i, o, a;
                    for (void 0 === e && (e = !0), a = new Array(this.vertices.length), t = 0, n = this.vertices.length; t < n; t++) a[t] = new _;
                    if (e) {
                        var s, c, l, u = new _,
                            h = new _;
                        for (r = 0, i = this.faces.length; r < i; r++) o = this.faces[r], s = this.vertices[o.a], c = this.vertices[o.b], l = this.vertices[o.c], u.subVectors(l, c), h.subVectors(s, c), u.cross(h), a[o.a].add(u), a[o.b].add(u), a[o.c].add(u)
                    } else
                        for (this.computeFaceNormals(), r = 0, i = this.faces.length; r < i; r++) a[(o = this.faces[r]).a].add(o.normal), a[o.b].add(o.normal), a[o.c].add(o.normal);
                    for (t = 0, n = this.vertices.length; t < n; t++) a[t].normalize();
                    for (r = 0, i = this.faces.length; r < i; r++) {
                        var d = (o = this.faces[r]).vertexNormals;
                        3 === d.length ? (d[0].copy(a[o.a]), d[1].copy(a[o.b]), d[2].copy(a[o.c])) : (d[0] = a[o.a].clone(), d[1] = a[o.b].clone(), d[2] = a[o.c].clone())
                    }
                    this.faces.length > 0 && (this.normalsNeedUpdate = !0)
                },
                computeFlatVertexNormals: function () {
                    var e, t, n;
                    for (this.computeFaceNormals(), e = 0, t = this.faces.length; e < t; e++) {
                        var r = (n = this.faces[e]).vertexNormals;
                        3 === r.length ? (r[0].copy(n.normal), r[1].copy(n.normal), r[2].copy(n.normal)) : (r[0] = n.normal.clone(), r[1] = n.normal.clone(), r[2] = n.normal.clone())
                    }
                    this.faces.length > 0 && (this.normalsNeedUpdate = !0)
                },
                computeMorphNormals: function () {
                    var e, t, n, r, i;
                    for (n = 0, r = this.faces.length; n < r; n++)
                        for ((i = this.faces[n]).__originalFaceNormal ? i.__originalFaceNormal.copy(i.normal) : i.__originalFaceNormal = i.normal.clone(), i.__originalVertexNormals || (i.__originalVertexNormals = []), e = 0, t = i.vertexNormals.length; e < t; e++) i.__originalVertexNormals[e] ? i.__originalVertexNormals[e].copy(i.vertexNormals[e]) : i.__originalVertexNormals[e] = i.vertexNormals[e].clone();
                    var o = new Nt;
                    for (o.faces = this.faces, e = 0, t = this.morphTargets.length; e < t; e++) {
                        if (!this.morphNormals[e]) {
                            this.morphNormals[e] = {}, this.morphNormals[e].faceNormals = [], this.morphNormals[e].vertexNormals = [];
                            var a = this.morphNormals[e].faceNormals,
                                s = this.morphNormals[e].vertexNormals;
                            for (n = 0, r = this.faces.length; n < r; n++) c = new _, l = {
                                a: new _,
                                b: new _,
                                c: new _
                            }, a.push(c), s.push(l)
                        }
                        var c, l, u = this.morphNormals[e];
                        for (o.vertices = this.morphTargets[e].vertices, o.computeFaceNormals(), o.computeVertexNormals(), n = 0, r = this.faces.length; n < r; n++) i = this.faces[n], c = u.faceNormals[n], l = u.vertexNormals[n], c.copy(i.normal), l.a.copy(i.vertexNormals[0]), l.b.copy(i.vertexNormals[1]), l.c.copy(i.vertexNormals[2])
                    }
                    for (n = 0, r = this.faces.length; n < r; n++)(i = this.faces[n]).normal = i.__originalFaceNormal, i.vertexNormals = i.__originalVertexNormals
                },
                computeBoundingBox: function () {
                    null === this.boundingBox && (this.boundingBox = new ae), this.boundingBox.setFromPoints(this.vertices)
                },
                computeBoundingSphere: function () {
                    null === this.boundingSphere && (this.boundingSphere = new le), this.boundingSphere.setFromPoints(this.vertices)
                },
                merge: function (e, t, n) {
                    if (e && e.isGeometry) {
                        var r, i = this.vertices.length,
                            o = this.vertices,
                            a = e.vertices,
                            s = this.faces,
                            c = e.faces,
                            u = this.colors,
                            h = e.colors;
                        void 0 === n && (n = 0), void 0 !== t && (r = (new l).getNormalMatrix(t));
                        for (var d = 0, p = a.length; d < p; d++) {
                            var f = a[d].clone();
                            void 0 !== t && f.applyMatrix4(t), o.push(f)
                        }
                        for (d = 0, p = h.length; d < p; d++) u.push(h[d].clone());
                        for (d = 0, p = c.length; d < p; d++) {
                            var m, g, v, y = c[d],
                                _ = y.vertexNormals,
                                x = y.vertexColors;
                            (m = new Fe(y.a + i, y.b + i, y.c + i)).normal.copy(y.normal), void 0 !== r && m.normal.applyMatrix3(r).normalize();
                            for (var b = 0, w = _.length; b < w; b++) g = _[b].clone(), void 0 !== r && g.applyMatrix3(r).normalize(), m.vertexNormals.push(g);
                            m.color.copy(y.color);
                            for (b = 0, w = x.length; b < w; b++) v = x[b], m.vertexColors.push(v.clone());
                            m.materialIndex = y.materialIndex + n, s.push(m)
                        }
                        for (d = 0, p = e.faceVertexUvs.length; d < p; d++) {
                            var M = e.faceVertexUvs[d];
                            void 0 === this.faceVertexUvs[d] && (this.faceVertexUvs[d] = []);
                            for (b = 0, w = M.length; b < w; b++) {
                                for (var T = M[b], S = [], E = 0, A = T.length; E < A; E++) S.push(T[E].clone());
                                this.faceVertexUvs[d].push(S)
                            }
                        }
                    } else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", e)
                },
                mergeMesh: function (e) {
                    e && e.isMesh ? (e.matrixAutoUpdate && e.updateMatrix(), this.merge(e.geometry, e.matrix)) : console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", e)
                },
                mergeVertices: function () {
                    var e, t, n, r, i, o, a, s, c = {},
                        l = [],
                        u = [],
                        h = Math.pow(10, 4);
                    for (n = 0, r = this.vertices.length; n < r; n++) e = this.vertices[n], void 0 === c[t = Math.round(e.x * h) + "_" + Math.round(e.y * h) + "_" + Math.round(e.z * h)] ? (c[t] = n, l.push(this.vertices[n]), u[n] = l.length - 1) : u[n] = u[c[t]];
                    var d = [];
                    for (n = 0, r = this.faces.length; n < r; n++) {
                        (i = this.faces[n]).a = u[i.a], i.b = u[i.b], i.c = u[i.c], o = [i.a, i.b, i.c];
                        for (var p = 0; p < 3; p++)
                            if (o[p] === o[(p + 1) % 3]) {
                                d.push(n);
                                break
                            }
                    }
                    for (n = d.length - 1; n >= 0; n--) {
                        var f = d[n];
                        for (this.faces.splice(f, 1), a = 0, s = this.faceVertexUvs.length; a < s; a++) this.faceVertexUvs[a].splice(f, 1)
                    }
                    var m = this.vertices.length - l.length;
                    return this.vertices = l, m
                },
                setFromPoints: function (e) {
                    this.vertices = [];
                    for (var t = 0, n = e.length; t < n; t++) {
                        var r = e[t];
                        this.vertices.push(new _(r.x, r.y, r.z || 0))
                    }
                    return this
                },
                sortFacesByMaterialIndex: function () {
                    for (var e = this.faces, t = e.length, n = 0; n < t; n++) e[n]._id = n;
                    e.sort((function (e, t) {
                        return e.materialIndex - t.materialIndex
                    }));
                    var r, i, o = this.faceVertexUvs[0],
                        a = this.faceVertexUvs[1];
                    o && o.length === t && (r = []), a && a.length === t && (i = []);
                    for (n = 0; n < t; n++) {
                        var s = e[n]._id;
                        r && r.push(o[s]), i && i.push(a[s])
                    }
                    r && (this.faceVertexUvs[0] = r), i && (this.faceVertexUvs[1] = i)
                },
                toJSON: function () {
                    var e = {
                        metadata: {
                            version: 4.5,
                            type: "Geometry",
                            generator: "Geometry.toJSON"
                        }
                    };
                    if (e.uuid = this.uuid, e.type = this.type, "" !== this.name && (e.name = this.name), void 0 !== this.parameters) {
                        var t = this.parameters;
                        for (var n in t) void 0 !== t[n] && (e[n] = t[n]);
                        return e
                    }
                    for (var r = [], i = 0; i < this.vertices.length; i++) {
                        var o = this.vertices[i];
                        r.push(o.x, o.y, o.z)
                    }
                    var a = [],
                        s = [],
                        c = {},
                        l = [],
                        u = {},
                        h = [],
                        d = {};
                    for (i = 0; i < this.faces.length; i++) {
                        var p = this.faces[i],
                            f = void 0 !== this.faceVertexUvs[0][i],
                            m = p.normal.length() > 0,
                            g = p.vertexNormals.length > 0,
                            v = 1 !== p.color.r || 1 !== p.color.g || 1 !== p.color.b,
                            y = p.vertexColors.length > 0,
                            _ = 0;
                        if (_ = M(_, 0, 0), _ = M(_, 1, !0), _ = M(_, 2, !1), _ = M(_, 3, f), _ = M(_, 4, m), _ = M(_, 5, g), _ = M(_, 6, v), _ = M(_, 7, y), a.push(_), a.push(p.a, p.b, p.c), a.push(p.materialIndex), f) {
                            var x = this.faceVertexUvs[0][i];
                            a.push(E(x[0]), E(x[1]), E(x[2]))
                        }
                        if (m && a.push(T(p.normal)), g) {
                            var b = p.vertexNormals;
                            a.push(T(b[0]), T(b[1]), T(b[2]))
                        }
                        if (v && a.push(S(p.color)), y) {
                            var w = p.vertexColors;
                            a.push(S(w[0]), S(w[1]), S(w[2]))
                        }
                    }

                    function M(e, t, n) {
                        return n ? e | 1 << t : e & ~(1 << t)
                    }

                    function T(e) {
                        var t = e.x.toString() + e.y.toString() + e.z.toString();
                        return void 0 !== c[t] || (c[t] = s.length / 3, s.push(e.x, e.y, e.z)), c[t]
                    }

                    function S(e) {
                        var t = e.r.toString() + e.g.toString() + e.b.toString();
                        return void 0 !== u[t] || (u[t] = l.length, l.push(e.getHex())), u[t]
                    }

                    function E(e) {
                        var t = e.x.toString() + e.y.toString();
                        return void 0 !== d[t] || (d[t] = h.length / 2, h.push(e.x, e.y)), d[t]
                    }
                    return e.data = {}, e.data.vertices = r, e.data.normals = s, l.length > 0 && (e.data.colors = l), h.length > 0 && (e.data.uvs = [h]), e.data.faces = a, e
                },
                clone: function () {
                    return (new Nt).copy(this)
                },
                copy: function (e) {
                    var t, n, r, i, o, a;
                    this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [
                        []
                    ], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.name = e.name;
                    var s = e.vertices;
                    for (t = 0, n = s.length; t < n; t++) this.vertices.push(s[t].clone());
                    var c = e.colors;
                    for (t = 0, n = c.length; t < n; t++) this.colors.push(c[t].clone());
                    var l = e.faces;
                    for (t = 0, n = l.length; t < n; t++) this.faces.push(l[t].clone());
                    for (t = 0, n = e.faceVertexUvs.length; t < n; t++) {
                        var u = e.faceVertexUvs[t];
                        for (void 0 === this.faceVertexUvs[t] && (this.faceVertexUvs[t] = []), r = 0, i = u.length; r < i; r++) {
                            var h = u[r],
                                d = [];
                            for (o = 0, a = h.length; o < a; o++) {
                                var p = h[o];
                                d.push(p.clone())
                            }
                            this.faceVertexUvs[t].push(d)
                        }
                    }
                    var f = e.morphTargets;
                    for (t = 0, n = f.length; t < n; t++) {
                        var m = {};
                        if (m.name = f[t].name, void 0 !== f[t].vertices)
                            for (m.vertices = [], r = 0, i = f[t].vertices.length; r < i; r++) m.vertices.push(f[t].vertices[r].clone());
                        if (void 0 !== f[t].normals)
                            for (m.normals = [], r = 0, i = f[t].normals.length; r < i; r++) m.normals.push(f[t].normals[r].clone());
                        this.morphTargets.push(m)
                    }
                    var g = e.morphNormals;
                    for (t = 0, n = g.length; t < n; t++) {
                        var v = {};
                        if (void 0 !== g[t].vertexNormals)
                            for (v.vertexNormals = [], r = 0, i = g[t].vertexNormals.length; r < i; r++) {
                                var y = g[t].vertexNormals[r],
                                    _ = {};
                                _.a = y.a.clone(), _.b = y.b.clone(), _.c = y.c.clone(), v.vertexNormals.push(_)
                            }
                        if (void 0 !== g[t].faceNormals)
                            for (v.faceNormals = [], r = 0, i = g[t].faceNormals.length; r < i; r++) v.faceNormals.push(g[t].faceNormals[r].clone());
                        this.morphNormals.push(v)
                    }
                    var x = e.skinWeights;
                    for (t = 0, n = x.length; t < n; t++) this.skinWeights.push(x[t].clone());
                    var b = e.skinIndices;
                    for (t = 0, n = b.length; t < n; t++) this.skinIndices.push(b[t].clone());
                    var w = e.lineDistances;
                    for (t = 0, n = w.length; t < n; t++) this.lineDistances.push(w[t]);
                    var M = e.boundingBox;
                    null !== M && (this.boundingBox = M.clone());
                    var T = e.boundingSphere;
                    return null !== T && (this.boundingSphere = T.clone()), this.elementsNeedUpdate = e.elementsNeedUpdate, this.verticesNeedUpdate = e.verticesNeedUpdate, this.uvsNeedUpdate = e.uvsNeedUpdate, this.normalsNeedUpdate = e.normalsNeedUpdate, this.colorsNeedUpdate = e.colorsNeedUpdate, this.lineDistancesNeedUpdate = e.lineDistancesNeedUpdate, this.groupsNeedUpdate = e.groupsNeedUpdate, this
                },
                dispose: function () {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            });
            class It extends ut {
                constructor(e, t, n, r, i, o) {
                    super(), this.type = "BoxBufferGeometry", this.parameters = {
                        width: e,
                        height: t,
                        depth: n,
                        widthSegments: r,
                        heightSegments: i,
                        depthSegments: o
                    };
                    const a = this;
                    e = e || 1, t = t || 1, n = n || 1, r = Math.floor(r) || 1, i = Math.floor(i) || 1, o = Math.floor(o) || 1;
                    const s = [],
                        c = [],
                        l = [],
                        u = [];
                    let h = 0,
                        d = 0;

                    function p(e, t, n, r, i, o, p, f, m, g, v) {
                        const y = o / m,
                            x = p / g,
                            b = o / 2,
                            w = p / 2,
                            M = f / 2,
                            T = m + 1,
                            S = g + 1;
                        let E = 0,
                            A = 0;
                        const j = new _;
                        for (let o = 0; o < S; o++) {
                            const a = o * x - w;
                            for (let s = 0; s < T; s++) {
                                const h = s * y - b;
                                j[e] = h * r, j[t] = a * i, j[n] = M, c.push(j.x, j.y, j.z), j[e] = 0, j[t] = 0, j[n] = f > 0 ? 1 : -1, l.push(j.x, j.y, j.z), u.push(s / m), u.push(1 - o / g), E += 1
                            }
                        }
                        for (let e = 0; e < g; e++)
                            for (let t = 0; t < m; t++) {
                                const n = h + t + T * e,
                                    r = h + t + T * (e + 1),
                                    i = h + (t + 1) + T * (e + 1),
                                    o = h + (t + 1) + T * e;
                                s.push(n, r, o), s.push(r, i, o), A += 6
                            }
                        a.addGroup(d, A, v), d += A, h += E
                    }
                    p("z", "y", "x", -1, -1, n, t, e, o, i, 0), p("z", "y", "x", 1, -1, n, t, -e, o, i, 1), p("x", "z", "y", 1, 1, e, n, t, r, o, 2), p("x", "z", "y", 1, -1, e, n, -t, r, o, 3), p("x", "y", "z", 1, -1, e, t, n, r, i, 4), p("x", "y", "z", -1, -1, e, t, -n, r, i, 5), this.setIndex(s), this.setAttribute("position", new Ke(c, 3)), this.setAttribute("normal", new Ke(l, 3)), this.setAttribute("uv", new Ke(u, 2))
                }
            }

            function kt(e) {
                var t = {};
                for (var n in e)
                    for (var r in t[n] = {}, e[n]) {
                        var i = e[n][r];
                        i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture) ? t[n][r] = i.clone() : Array.isArray(i) ? t[n][r] = i.slice() : t[n][r] = i
                    }
                return t
            }

            function zt(e) {
                for (var t = {}, n = 0; n < e.length; n++) {
                    var r = kt(e[n]);
                    for (var i in r) t[i] = r[i]
                }
                return t
            }
            var Bt = {
                clone: kt,
                merge: zt
            };

            function Ft(e) {
                He.call(this), this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}", this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}", this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.extensions = {
                    derivatives: !1,
                    fragDepth: !1,
                    drawBuffers: !1,
                    shaderTextureLOD: !1
                }, this.defaultAttributeValues = {
                    color: [1, 1, 1],
                    uv: [0, 0],
                    uv2: [0, 0]
                }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, void 0 !== e && (void 0 !== e.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(e))
            }

            function Ut() {
                W.call(this), this.type = "Camera", this.matrixWorldInverse = new A, this.projectionMatrix = new A, this.projectionMatrixInverse = new A
            }

            function Ht(e, t, n, r) {
                Ut.call(this), this.type = "PerspectiveCamera", this.fov = void 0 !== e ? e : 50, this.zoom = 1, this.near = void 0 !== n ? n : .1, this.far = void 0 !== r ? r : 2e3, this.focus = 10, this.aspect = void 0 !== t ? t : 1, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix()
            }
            Ft.prototype = Object.create(He.prototype), Ft.prototype.constructor = Ft, Ft.prototype.isShaderMaterial = !0, Ft.prototype.copy = function (e) {
                return He.prototype.copy.call(this, e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = kt(e.uniforms), this.defines = Object.assign({}, e.defines), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.lights = e.lights, this.clipping = e.clipping, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this.extensions = Object.assign({}, e.extensions), this
            }, Ft.prototype.toJSON = function (e) {
                var t = He.prototype.toJSON.call(this, e);
                for (var n in t.uniforms = {}, this.uniforms) {
                    var r = this.uniforms[n].value;
                    r && r.isTexture ? t.uniforms[n] = {
                        type: "t",
                        value: r.toJSON(e).uuid
                    } : r && r.isColor ? t.uniforms[n] = {
                        type: "c",
                        value: r.getHex()
                    } : r && r.isVector2 ? t.uniforms[n] = {
                        type: "v2",
                        value: r.toArray()
                    } : r && r.isVector3 ? t.uniforms[n] = {
                        type: "v3",
                        value: r.toArray()
                    } : r && r.isVector4 ? t.uniforms[n] = {
                        type: "v4",
                        value: r.toArray()
                    } : r && r.isMatrix3 ? t.uniforms[n] = {
                        type: "m3",
                        value: r.toArray()
                    } : r && r.isMatrix4 ? t.uniforms[n] = {
                        type: "m4",
                        value: r.toArray()
                    } : t.uniforms[n] = {
                        value: r
                    }
                }
                Object.keys(this.defines).length > 0 && (t.defines = this.defines), t.vertexShader = this.vertexShader, t.fragmentShader = this.fragmentShader;
                var i = {};
                for (var o in this.extensions) !0 === this.extensions[o] && (i[o] = !0);
                return Object.keys(i).length > 0 && (t.extensions = i), t
            }, Ut.prototype = Object.assign(Object.create(W.prototype), {
                constructor: Ut,
                isCamera: !0,
                copy: function (e, t) {
                    return W.prototype.copy.call(this, e, t), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this.projectionMatrixInverse.copy(e.projectionMatrixInverse), this
                },
                getWorldDirection: function (e) {
                    void 0 === e && (console.warn("THREE.Camera: .getWorldDirection() target is now required"), e = new _), this.updateMatrixWorld(!0);
                    var t = this.matrixWorld.elements;
                    return e.set(-t[8], -t[9], -t[10]).normalize()
                },
                updateMatrixWorld: function (e) {
                    W.prototype.updateMatrixWorld.call(this, e), this.matrixWorldInverse.getInverse(this.matrixWorld)
                },
                updateWorldMatrix: function (e, t) {
                    W.prototype.updateWorldMatrix.call(this, e, t), this.matrixWorldInverse.getInverse(this.matrixWorld)
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                }
            }), Ht.prototype = Object.assign(Object.create(Ut.prototype), {
                constructor: Ht,
                isPerspectiveCamera: !0,
                copy: function (e, t) {
                    return Ut.prototype.copy.call(this, e, t), this.fov = e.fov, this.zoom = e.zoom, this.near = e.near, this.far = e.far, this.focus = e.focus, this.aspect = e.aspect, this.view = null === e.view ? null : Object.assign({}, e.view), this.filmGauge = e.filmGauge, this.filmOffset = e.filmOffset, this
                },
                setFocalLength: function (e) {
                    var t = .5 * this.getFilmHeight() / e;
                    this.fov = 2 * s.RAD2DEG * Math.atan(t), this.updateProjectionMatrix()
                },
                getFocalLength: function () {
                    var e = Math.tan(.5 * s.DEG2RAD * this.fov);
                    return .5 * this.getFilmHeight() / e
                },
                getEffectiveFOV: function () {
                    return 2 * s.RAD2DEG * Math.atan(Math.tan(.5 * s.DEG2RAD * this.fov) / this.zoom)
                },
                getFilmWidth: function () {
                    return this.filmGauge * Math.min(this.aspect, 1)
                },
                getFilmHeight: function () {
                    return this.filmGauge / Math.max(this.aspect, 1)
                },
                setViewOffset: function (e, t, n, r, i, o) {
                    this.aspect = e / t, null === this.view && (this.view = {
                        enabled: !0,
                        fullWidth: 1,
                        fullHeight: 1,
                        offsetX: 0,
                        offsetY: 0,
                        width: 1,
                        height: 1
                    }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = r, this.view.width = i, this.view.height = o, this.updateProjectionMatrix()
                },
                clearViewOffset: function () {
                    null !== this.view && (this.view.enabled = !1), this.updateProjectionMatrix()
                },
                updateProjectionMatrix: function () {
                    var e = this.near,
                        t = e * Math.tan(.5 * s.DEG2RAD * this.fov) / this.zoom,
                        n = 2 * t,
                        r = this.aspect * n,
                        i = -.5 * r,
                        o = this.view;
                    if (null !== this.view && this.view.enabled) {
                        var a = o.fullWidth,
                            c = o.fullHeight;
                        i += o.offsetX * r / a, t -= o.offsetY * n / c, r *= o.width / a, n *= o.height / c
                    }
                    var l = this.filmOffset;
                    0 !== l && (i += e * l / this.getFilmWidth()), this.projectionMatrix.makePerspective(i, i + r, t, t - n, e, this.far), this.projectionMatrixInverse.getInverse(this.projectionMatrix)
                },
                toJSON: function (e) {
                    var t = W.prototype.toJSON.call(this, e);
                    return t.object.fov = this.fov, t.object.zoom = this.zoom, t.object.near = this.near, t.object.far = this.far, t.object.focus = this.focus, t.object.aspect = this.aspect, null !== this.view && (t.object.view = Object.assign({}, this.view)), t.object.filmGauge = this.filmGauge, t.object.filmOffset = this.filmOffset, t
                }
            });

            function Gt(e, t, n) {
                if (W.call(this), this.type = "CubeCamera", !0 === n.isWebGLCubeRenderTarget) {
                    this.renderTarget = n;
                    var r = new Ht(90, 1, e, t);
                    r.layers = this.layers, r.up.set(0, -1, 0), r.lookAt(new _(1, 0, 0)), this.add(r);
                    var i = new Ht(90, 1, e, t);
                    i.layers = this.layers, i.up.set(0, -1, 0), i.lookAt(new _(-1, 0, 0)), this.add(i);
                    var o = new Ht(90, 1, e, t);
                    o.layers = this.layers, o.up.set(0, 0, 1), o.lookAt(new _(0, 1, 0)), this.add(o);
                    var a = new Ht(90, 1, e, t);
                    a.layers = this.layers, a.up.set(0, 0, -1), a.lookAt(new _(0, -1, 0)), this.add(a);
                    var s = new Ht(90, 1, e, t);
                    s.layers = this.layers, s.up.set(0, -1, 0), s.lookAt(new _(0, 0, 1)), this.add(s);
                    var c = new Ht(90, 1, e, t);
                    c.layers = this.layers, c.up.set(0, -1, 0), c.lookAt(new _(0, 0, -1)), this.add(c), this.update = function (e, t) {
                        null === this.parent && this.updateMatrixWorld();
                        var l = e.xr.enabled,
                            u = e.getRenderTarget();
                        e.xr.enabled = !1;
                        var h = n.texture.generateMipmaps;
                        n.texture.generateMipmaps = !1, e.setRenderTarget(n, 0), e.render(t, r), e.setRenderTarget(n, 1), e.render(t, i), e.setRenderTarget(n, 2), e.render(t, o), e.setRenderTarget(n, 3), e.render(t, a), e.setRenderTarget(n, 4), e.render(t, s), n.texture.generateMipmaps = h, e.setRenderTarget(n, 5), e.render(t, c), e.setRenderTarget(u), e.xr.enabled = l
                    }, this.clear = function (e, t, r, i) {
                        for (var o = e.getRenderTarget(), a = 0; a < 6; a++) e.setRenderTarget(n, a), e.clear(t, r, i);
                        e.setRenderTarget(o)
                    }
                } else console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.")
            }

            function Vt(e, t, n) {
                Number.isInteger(t) && (console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"), t = n), f.call(this, e, e, t)
            }

            function Wt(e, t, n, r, i, o, a, s, c, l, u, h) {
                d.call(this, null, o, a, s, c, l, r, i, u, h), this.image = {
                    data: e || null,
                    width: t || 1,
                    height: n || 1
                }, this.magFilter = void 0 !== c ? c : 1003, this.minFilter = void 0 !== l ? l : 1003, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1, this.needsUpdate = !0
            }
            Gt.prototype = Object.create(W.prototype), Gt.prototype.constructor = Gt, Vt.prototype = Object.create(f.prototype), Vt.prototype.constructor = Vt, Vt.prototype.isWebGLCubeRenderTarget = !0, Vt.prototype.fromEquirectangularTexture = function (e, t) {
                this.texture.type = t.type, this.texture.format = t.format, this.texture.encoding = t.encoding;
                var n = new q,
                    r = {
                        uniforms: {
                            tEquirect: {
                                value: null
                            }
                        },
                        vertexShader: ["varying vec3 vWorldDirection;", "vec3 transformDirection( in vec3 dir, in mat4 matrix ) {", "\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );", "}", "void main() {", "\tvWorldDirection = transformDirection( position, modelMatrix );", "\t#include <begin_vertex>", "\t#include <project_vertex>", "}"].join("\n"),
                        fragmentShader: ["uniform sampler2D tEquirect;", "varying vec3 vWorldDirection;", "#include <common>", "void main() {", "\tvec3 direction = normalize( vWorldDirection );", "\tvec2 sampleUV = equirectUv( direction );", "\tgl_FragColor = texture2D( tEquirect, sampleUV );", "}"].join("\n")
                    },
                    i = new Ft({
                        type: "CubemapFromEquirect",
                        uniforms: kt(r.uniforms),
                        vertexShader: r.vertexShader,
                        fragmentShader: r.fragmentShader,
                        side: 1,
                        blending: 0
                    });
                i.uniforms.tEquirect.value = t;
                var o = new jt(new It(5, 5, 5), i);
                return n.add(o), new Gt(1, 10, this).update(e, n), o.geometry.dispose(), o.material.dispose(), this
            }, Wt.prototype = Object.create(d.prototype), Wt.prototype.constructor = Wt, Wt.prototype.isDataTexture = !0;
            var qt = new le,
                Xt = new _;

            function Yt(e, t, n, r, i, o) {
                this.planes = [void 0 !== e ? e : new be, void 0 !== t ? t : new be, void 0 !== n ? n : new be, void 0 !== r ? r : new be, void 0 !== i ? i : new be, void 0 !== o ? o : new be]
            }
            Object.assign(Yt.prototype, {
                set: function (e, t, n, r, i, o) {
                    var a = this.planes;
                    return a[0].copy(e), a[1].copy(t), a[2].copy(n), a[3].copy(r), a[4].copy(i), a[5].copy(o), this
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    for (var t = this.planes, n = 0; n < 6; n++) t[n].copy(e.planes[n]);
                    return this
                },
                setFromProjectionMatrix: function (e) {
                    var t = this.planes,
                        n = e.elements,
                        r = n[0],
                        i = n[1],
                        o = n[2],
                        a = n[3],
                        s = n[4],
                        c = n[5],
                        l = n[6],
                        u = n[7],
                        h = n[8],
                        d = n[9],
                        p = n[10],
                        f = n[11],
                        m = n[12],
                        g = n[13],
                        v = n[14],
                        y = n[15];
                    return t[0].setComponents(a - r, u - s, f - h, y - m).normalize(), t[1].setComponents(a + r, u + s, f + h, y + m).normalize(), t[2].setComponents(a + i, u + c, f + d, y + g).normalize(), t[3].setComponents(a - i, u - c, f - d, y - g).normalize(), t[4].setComponents(a - o, u - l, f - p, y - v).normalize(), t[5].setComponents(a + o, u + l, f + p, y + v).normalize(), this
                },
                intersectsObject: function (e) {
                    var t = e.geometry;
                    return null === t.boundingSphere && t.computeBoundingSphere(), qt.copy(t.boundingSphere).applyMatrix4(e.matrixWorld), this.intersectsSphere(qt)
                },
                intersectsSprite: function (e) {
                    return qt.center.set(0, 0, 0), qt.radius = .7071067811865476, qt.applyMatrix4(e.matrixWorld), this.intersectsSphere(qt)
                },
                intersectsSphere: function (e) {
                    for (var t = this.planes, n = e.center, r = -e.radius, i = 0; i < 6; i++) {
                        if (t[i].distanceToPoint(n) < r) return !1
                    }
                    return !0
                },
                intersectsBox: function (e) {
                    for (var t = this.planes, n = 0; n < 6; n++) {
                        var r = t[n];
                        if (Xt.x = r.normal.x > 0 ? e.max.x : e.min.x, Xt.y = r.normal.y > 0 ? e.max.y : e.min.y, Xt.z = r.normal.z > 0 ? e.max.z : e.min.z, r.distanceToPoint(Xt) < 0) return !1
                    }
                    return !0
                },
                containsPoint: function (e) {
                    for (var t = this.planes, n = 0; n < 6; n++)
                        if (t[n].distanceToPoint(e) < 0) return !1;
                    return !0
                }
            });
            var Jt = {
                common: {
                    diffuse: {
                        value: new Ie(15658734)
                    },
                    opacity: {
                        value: 1
                    },
                    map: {
                        value: null
                    },
                    uvTransform: {
                        value: new l
                    },
                    uv2Transform: {
                        value: new l
                    },
                    alphaMap: {
                        value: null
                    }
                },
                specularmap: {
                    specularMap: {
                        value: null
                    }
                },
                envmap: {
                    envMap: {
                        value: null
                    },
                    flipEnvMap: {
                        value: -1
                    },
                    reflectivity: {
                        value: 1
                    },
                    refractionRatio: {
                        value: .98
                    },
                    maxMipLevel: {
                        value: 0
                    }
                },
                aomap: {
                    aoMap: {
                        value: null
                    },
                    aoMapIntensity: {
                        value: 1
                    }
                },
                lightmap: {
                    lightMap: {
                        value: null
                    },
                    lightMapIntensity: {
                        value: 1
                    }
                },
                emissivemap: {
                    emissiveMap: {
                        value: null
                    }
                },
                bumpmap: {
                    bumpMap: {
                        value: null
                    },
                    bumpScale: {
                        value: 1
                    }
                },
                normalmap: {
                    normalMap: {
                        value: null
                    },
                    normalScale: {
                        value: new c(1, 1)
                    }
                },
                displacementmap: {
                    displacementMap: {
                        value: null
                    },
                    displacementScale: {
                        value: 1
                    },
                    displacementBias: {
                        value: 0
                    }
                },
                roughnessmap: {
                    roughnessMap: {
                        value: null
                    }
                },
                metalnessmap: {
                    metalnessMap: {
                        value: null
                    }
                },
                gradientmap: {
                    gradientMap: {
                        value: null
                    }
                },
                fog: {
                    fogDensity: {
                        value: 25e-5
                    },
                    fogNear: {
                        value: 1
                    },
                    fogFar: {
                        value: 2e3
                    },
                    fogColor: {
                        value: new Ie(16777215)
                    }
                },
                lights: {
                    ambientLightColor: {
                        value: []
                    },
                    lightProbe: {
                        value: []
                    },
                    directionalLights: {
                        value: [],
                        properties: {
                            direction: {},
                            color: {}
                        }
                    },
                    directionalLightShadows: {
                        value: [],
                        properties: {
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {}
                        }
                    },
                    directionalShadowMap: {
                        value: []
                    },
                    directionalShadowMatrix: {
                        value: []
                    },
                    spotLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            direction: {},
                            distance: {},
                            coneCos: {},
                            penumbraCos: {},
                            decay: {}
                        }
                    },
                    spotLightShadows: {
                        value: [],
                        properties: {
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {}
                        }
                    },
                    spotShadowMap: {
                        value: []
                    },
                    spotShadowMatrix: {
                        value: []
                    },
                    pointLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            decay: {},
                            distance: {}
                        }
                    },
                    pointLightShadows: {
                        value: [],
                        properties: {
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {},
                            shadowCameraNear: {},
                            shadowCameraFar: {}
                        }
                    },
                    pointShadowMap: {
                        value: []
                    },
                    pointShadowMatrix: {
                        value: []
                    },
                    hemisphereLights: {
                        value: [],
                        properties: {
                            direction: {},
                            skyColor: {},
                            groundColor: {}
                        }
                    },
                    rectAreaLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            width: {},
                            height: {}
                        }
                    }
                },
                points: {
                    diffuse: {
                        value: new Ie(15658734)
                    },
                    opacity: {
                        value: 1
                    },
                    size: {
                        value: 1
                    },
                    scale: {
                        value: 1
                    },
                    map: {
                        value: null
                    },
                    alphaMap: {
                        value: null
                    },
                    uvTransform: {
                        value: new l
                    }
                },
                sprite: {
                    diffuse: {
                        value: new Ie(15658734)
                    },
                    opacity: {
                        value: 1
                    },
                    center: {
                        value: new c(.5, .5)
                    },
                    rotation: {
                        value: 0
                    },
                    map: {
                        value: null
                    },
                    alphaMap: {
                        value: null
                    },
                    uvTransform: {
                        value: new l
                    }
                }
            };

            function Zt() {
                var e = null,
                    t = !1,
                    n = null;

                function r(i, o) {
                    !1 !== t && (n(i, o), e.requestAnimationFrame(r))
                }
                return {
                    start: function () {
                        !0 !== t && null !== n && (e.requestAnimationFrame(r), t = !0)
                    },
                    stop: function () {
                        t = !1
                    },
                    setAnimationLoop: function (e) {
                        n = e
                    },
                    setContext: function (t) {
                        e = t
                    }
                }
            }

            function Qt(e, t) {
                var n = t.isWebGL2,
                    r = new WeakMap;
                return {
                    get: function (e) {
                        return e.isInterleavedBufferAttribute && (e = e.data), r.get(e)
                    },
                    remove: function (t) {
                        t.isInterleavedBufferAttribute && (t = t.data);
                        var n = r.get(t);
                        n && (e.deleteBuffer(n.buffer), r.delete(t))
                    },
                    update: function (t, i) {
                        t.isInterleavedBufferAttribute && (t = t.data);
                        var o = r.get(t);
                        void 0 === o ? r.set(t, function (t, n) {
                            var r = t.array,
                                i = t.usage,
                                o = e.createBuffer();
                            e.bindBuffer(n, o), e.bufferData(n, r, i), t.onUploadCallback();
                            var a = 5126;
                            return r instanceof Float32Array ? a = 5126 : r instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : r instanceof Uint16Array ? a = 5123 : r instanceof Int16Array ? a = 5122 : r instanceof Uint32Array ? a = 5125 : r instanceof Int32Array ? a = 5124 : r instanceof Int8Array ? a = 5120 : r instanceof Uint8Array && (a = 5121), {
                                buffer: o,
                                type: a,
                                bytesPerElement: r.BYTES_PER_ELEMENT,
                                version: t.version
                            }
                        }(t, i)) : o.version < t.version && (! function (t, r, i) {
                            var o = r.array,
                                a = r.updateRange;
                            e.bindBuffer(i, t), -1 === a.count ? e.bufferSubData(i, 0, o) : (n ? e.bufferSubData(i, a.offset * o.BYTES_PER_ELEMENT, o, a.offset, a.count) : e.bufferSubData(i, a.offset * o.BYTES_PER_ELEMENT, o.subarray(a.offset, a.offset + a.count)), a.count = -1)
                        }(o.buffer, t, i), o.version = t.version)
                    }
                }
            }

            function $t(e, t, n, r) {
                Nt.call(this), this.type = "PlaneGeometry", this.parameters = {
                    width: e,
                    height: t,
                    widthSegments: n,
                    heightSegments: r
                }, this.fromBufferGeometry(new Kt(e, t, n, r)), this.mergeVertices()
            }

            function Kt(e, t, n, r) {
                ut.call(this), this.type = "PlaneBufferGeometry", this.parameters = {
                    width: e,
                    height: t,
                    widthSegments: n,
                    heightSegments: r
                };
                var i, o, a = (e = e || 1) / 2,
                    s = (t = t || 1) / 2,
                    c = Math.floor(n) || 1,
                    l = Math.floor(r) || 1,
                    u = c + 1,
                    h = l + 1,
                    d = e / c,
                    p = t / l,
                    f = [],
                    m = [],
                    g = [],
                    v = [];
                for (o = 0; o < h; o++) {
                    var y = o * p - s;
                    for (i = 0; i < u; i++) {
                        var _ = i * d - a;
                        m.push(_, -y, 0), g.push(0, 0, 1), v.push(i / c), v.push(1 - o / l)
                    }
                }
                for (o = 0; o < l; o++)
                    for (i = 0; i < c; i++) {
                        var x = i + u * o,
                            b = i + u * (o + 1),
                            w = i + 1 + u * (o + 1),
                            M = i + 1 + u * o;
                        f.push(x, b, M), f.push(b, w, M)
                    }
                this.setIndex(f), this.setAttribute("position", new Ke(m, 3)), this.setAttribute("normal", new Ke(g, 3)), this.setAttribute("uv", new Ke(v, 2))
            }
            $t.prototype = Object.create(Nt.prototype), $t.prototype.constructor = $t, Kt.prototype = Object.create(ut.prototype), Kt.prototype.constructor = Kt;
            var en = {
                    alphamap_fragment: "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",
                    alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
                    alphatest_fragment: "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",
                    aomap_fragment: "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",
                    aomap_pars_fragment: "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
                    begin_vertex: "vec3 transformed = vec3( position );",
                    beginnormal_vertex: "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",
                    bsdfs: "vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",
                    bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
                    clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",
                    clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",
                    clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",
                    clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",
                    color_fragment: "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",
                    color_pars_fragment: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
                    color_pars_vertex: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
                    color_vertex: "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",
                    common: "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",
                    cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);    } else if (face == 1.0) {\n      uv = vec2(-direction.x, -direction.z) / abs(direction.y);    } else if (face == 2.0) {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);    } else if (face == 3.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);    } else if (face == 4.0) {\n      uv = vec2(-direction.x, direction.z) / abs(direction.y);    } else {\n      uv = vec2(direction.x, direction.y) / abs(direction.z);    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif",
                    defaultnormal_vertex: "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",
                    displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",
                    displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",
                    emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",
                    emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",
                    encodings_fragment: "gl_FragColor = linearToOutputTexel( gl_FragColor );",
                    encodings_pars_fragment: "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",
                    envmap_fragment: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
                    envmap_common_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",
                    envmap_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
                    envmap_pars_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",
                    envmap_physical_pars_fragment: "#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",
                    envmap_vertex: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) { \n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
                    fog_vertex: "#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif",
                    fog_pars_vertex: "#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",
                    fog_fragment: "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",
                    fog_pars_fragment: "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
                    gradientmap_pars_fragment: "#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",
                    lightmap_fragment: "#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",
                    lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
                    lights_lambert_vertex: "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",
                    lights_pars_begin: "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",
                    lights_toon_fragment: "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
                    lights_toon_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",
                    lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
                    lights_phong_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",
                    lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",
                    lights_physical_pars_fragment: "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
                    lights_fragment_begin: "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",
                    lights_fragment_maps: "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",
                    lights_fragment_end: "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",
                    logdepthbuf_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
                    logdepthbuf_pars_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",
                    logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",
                    logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",
                    map_fragment: "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",
                    map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",
                    map_particle_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",
                    map_particle_pars_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
                    metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",
                    metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
                    morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",
                    morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
                    morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",
                    normal_fragment_begin: "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",
                    normal_fragment_maps: "#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",
                    normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",
                    clearcoat_normal_fragment_begin: "#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",
                    clearcoat_normal_fragment_maps: "#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",
                    clearcoat_pars_fragment: "#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",
                    packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",
                    premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",
                    project_vertex: "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",
                    dithering_fragment: "#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",
                    dithering_pars_fragment: "#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",
                    roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",
                    roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
                    shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",
                    shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",
                    shadowmap_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",
                    shadowmask_pars_fragment: "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",
                    skinbase_vertex: "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
                    skinning_pars_vertex: "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",
                    skinning_vertex: "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",
                    skinnormal_vertex: "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",
                    specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
                    specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
                    tonemapping_fragment: "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",
                    tonemapping_pars_fragment: "#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}",
                    uv_pars_fragment: "#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",
                    uv_pars_vertex: "#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",
                    uv_vertex: "#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",
                    uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
                    uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",
                    uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",
                    worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",
                    background_frag: "uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
                    background_vert: "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",
                    cube_frag: "#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
                    cube_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
                    depth_frag: "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",
                    depth_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",
                    distanceRGBA_frag: "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",
                    distanceRGBA_vert: "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",
                    equirect_frag: "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
                    equirect_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",
                    linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
                    linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
                    meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshbasic_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",
                    meshlambert_frag: "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshlambert_vert: "#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                    meshmatcap_frag: "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshmatcap_vert: "#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",
                    meshtoon_frag: "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshtoon_vert: "#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                    meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                    meshphysical_frag: "#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshphysical_vert: "#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                    normal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",
                    normal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",
                    points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
                    points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",
                    shadow_frag: "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
                    shadow_vert: "#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                    sprite_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
                    sprite_vert: "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"
                },
                tn = {
                    basic: {
                        uniforms: zt([Jt.common, Jt.specularmap, Jt.envmap, Jt.aomap, Jt.lightmap, Jt.fog]),
                        vertexShader: en.meshbasic_vert,
                        fragmentShader: en.meshbasic_frag
                    },
                    lambert: {
                        uniforms: zt([Jt.common, Jt.specularmap, Jt.envmap, Jt.aomap, Jt.lightmap, Jt.emissivemap, Jt.fog, Jt.lights, {
                            emissive: {
                                value: new Ie(0)
                            }
                        }]),
                        vertexShader: en.meshlambert_vert,
                        fragmentShader: en.meshlambert_frag
                    },
                    phong: {
                        uniforms: zt([Jt.common, Jt.specularmap, Jt.envmap, Jt.aomap, Jt.lightmap, Jt.emissivemap, Jt.bumpmap, Jt.normalmap, Jt.displacementmap, Jt.fog, Jt.lights, {
                            emissive: {
                                value: new Ie(0)
                            },
                            specular: {
                                value: new Ie(1118481)
                            },
                            shininess: {
                                value: 30
                            }
                        }]),
                        vertexShader: en.meshphong_vert,
                        fragmentShader: en.meshphong_frag
                    },
                    standard: {
                        uniforms: zt([Jt.common, Jt.envmap, Jt.aomap, Jt.lightmap, Jt.emissivemap, Jt.bumpmap, Jt.normalmap, Jt.displacementmap, Jt.roughnessmap, Jt.metalnessmap, Jt.fog, Jt.lights, {
                            emissive: {
                                value: new Ie(0)
                            },
                            roughness: {
                                value: 1
                            },
                            metalness: {
                                value: 0
                            },
                            envMapIntensity: {
                                value: 1
                            }
                        }]),
                        vertexShader: en.meshphysical_vert,
                        fragmentShader: en.meshphysical_frag
                    },
                    toon: {
                        uniforms: zt([Jt.common, Jt.specularmap, Jt.aomap, Jt.lightmap, Jt.emissivemap, Jt.bumpmap, Jt.normalmap, Jt.displacementmap, Jt.gradientmap, Jt.fog, Jt.lights, {
                            emissive: {
                                value: new Ie(0)
                            },
                            specular: {
                                value: new Ie(1118481)
                            },
                            shininess: {
                                value: 30
                            }
                        }]),
                        vertexShader: en.meshtoon_vert,
                        fragmentShader: en.meshtoon_frag
                    },
                    matcap: {
                        uniforms: zt([Jt.common, Jt.bumpmap, Jt.normalmap, Jt.displacementmap, Jt.fog, {
                            matcap: {
                                value: null
                            }
                        }]),
                        vertexShader: en.meshmatcap_vert,
                        fragmentShader: en.meshmatcap_frag
                    },
                    points: {
                        uniforms: zt([Jt.points, Jt.fog]),
                        vertexShader: en.points_vert,
                        fragmentShader: en.points_frag
                    },
                    dashed: {
                        uniforms: zt([Jt.common, Jt.fog, {
                            scale: {
                                value: 1
                            },
                            dashSize: {
                                value: 1
                            },
                            totalSize: {
                                value: 2
                            }
                        }]),
                        vertexShader: en.linedashed_vert,
                        fragmentShader: en.linedashed_frag
                    },
                    depth: {
                        uniforms: zt([Jt.common, Jt.displacementmap]),
                        vertexShader: en.depth_vert,
                        fragmentShader: en.depth_frag
                    },
                    normal: {
                        uniforms: zt([Jt.common, Jt.bumpmap, Jt.normalmap, Jt.displacementmap, {
                            opacity: {
                                value: 1
                            }
                        }]),
                        vertexShader: en.normal_vert,
                        fragmentShader: en.normal_frag
                    },
                    sprite: {
                        uniforms: zt([Jt.sprite, Jt.fog]),
                        vertexShader: en.sprite_vert,
                        fragmentShader: en.sprite_frag
                    },
                    background: {
                        uniforms: {
                            uvTransform: {
                                value: new l
                            },
                            t2D: {
                                value: null
                            }
                        },
                        vertexShader: en.background_vert,
                        fragmentShader: en.background_frag
                    },
                    cube: {
                        uniforms: zt([Jt.envmap, {
                            opacity: {
                                value: 1
                            }
                        }]),
                        vertexShader: en.cube_vert,
                        fragmentShader: en.cube_frag
                    },
                    equirect: {
                        uniforms: {
                            tEquirect: {
                                value: null
                            }
                        },
                        vertexShader: en.equirect_vert,
                        fragmentShader: en.equirect_frag
                    },
                    distanceRGBA: {
                        uniforms: zt([Jt.common, Jt.displacementmap, {
                            referencePosition: {
                                value: new _
                            },
                            nearDistance: {
                                value: 1
                            },
                            farDistance: {
                                value: 1e3
                            }
                        }]),
                        vertexShader: en.distanceRGBA_vert,
                        fragmentShader: en.distanceRGBA_frag
                    },
                    shadow: {
                        uniforms: zt([Jt.lights, Jt.fog, {
                            color: {
                                value: new Ie(0)
                            },
                            opacity: {
                                value: 1
                            }
                        }]),
                        vertexShader: en.shadow_vert,
                        fragmentShader: en.shadow_frag
                    }
                };

            function nn(e, t, n, r) {
                var i, o, a = new Ie(0),
                    s = 0,
                    c = null,
                    l = 0,
                    u = null;

                function h(e, n) {
                    t.buffers.color.setClear(e.r, e.g, e.b, n, r)
                }
                return {
                    getClearColor: function () {
                        return a
                    },
                    setClearColor: function (e, t) {
                        a.set(e), h(a, s = void 0 !== t ? t : 1)
                    },
                    getClearAlpha: function () {
                        return s
                    },
                    setClearAlpha: function (e) {
                        h(a, s = e)
                    },
                    render: function (t, r, d, p) {
                        var f = r.background,
                            m = e.xr,
                            g = m.getSession && m.getSession();
                        if (g && "additive" === g.environmentBlendMode && (f = null), null === f ? h(a, s) : f && f.isColor && (h(f, 1), p = !0), (e.autoClear || p) && e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil), f && (f.isCubeTexture || f.isWebGLCubeRenderTarget || 306 === f.mapping)) {
                            void 0 === o && ((o = new jt(new It(1, 1, 1), new Ft({
                                type: "BackgroundCubeMaterial",
                                uniforms: kt(tn.cube.uniforms),
                                vertexShader: tn.cube.vertexShader,
                                fragmentShader: tn.cube.fragmentShader,
                                side: 1,
                                depthTest: !1,
                                depthWrite: !1,
                                fog: !1
                            }))).geometry.deleteAttribute("normal"), o.geometry.deleteAttribute("uv"), o.onBeforeRender = function (e, t, n) {
                                this.matrixWorld.copyPosition(n.matrixWorld)
                            }, Object.defineProperty(o.material, "envMap", {
                                get: function () {
                                    return this.uniforms.envMap.value
                                }
                            }), n.update(o));
                            var v = f.isWebGLCubeRenderTarget ? f.texture : f;
                            o.material.uniforms.envMap.value = v, o.material.uniforms.flipEnvMap.value = v.isCubeTexture ? -1 : 1, c === f && l === v.version && u === e.toneMapping || (o.material.needsUpdate = !0, c = f, l = v.version, u = e.toneMapping), t.unshift(o, o.geometry, o.material, 0, 0, null)
                        } else f && f.isTexture && (void 0 === i && ((i = new jt(new Kt(2, 2), new Ft({
                            type: "BackgroundMaterial",
                            uniforms: kt(tn.background.uniforms),
                            vertexShader: tn.background.vertexShader,
                            fragmentShader: tn.background.fragmentShader,
                            side: 0,
                            depthTest: !1,
                            depthWrite: !1,
                            fog: !1
                        }))).geometry.deleteAttribute("normal"), Object.defineProperty(i.material, "map", {
                            get: function () {
                                return this.uniforms.t2D.value
                            }
                        }), n.update(i)), i.material.uniforms.t2D.value = f, !0 === f.matrixAutoUpdate && f.updateMatrix(), i.material.uniforms.uvTransform.value.copy(f.matrix), c === f && l === f.version && u === e.toneMapping || (i.material.needsUpdate = !0, c = f, l = f.version, u = e.toneMapping), t.unshift(i, i.geometry, i.material, 0, 0, null))
                    }
                }
            }

            function rn(e, t, n, r) {
                var i, o = r.isWebGL2;
                this.setMode = function (e) {
                    i = e
                }, this.render = function (t, r) {
                    e.drawArrays(i, t, r), n.update(r, i)
                }, this.renderInstances = function (r, a, s, c) {
                    if (0 !== c) {
                        var l, u;
                        if (o) l = e, u = "drawArraysInstanced";
                        else if (u = "drawArraysInstancedANGLE", null === (l = t.get("ANGLE_instanced_arrays"))) return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                        l[u](i, a, s, c), n.update(s, i, c)
                    }
                }
            }

            function on(e, t, n) {
                var r;

                function i(t) {
                    if ("highp" === t) {
                        if (e.getShaderPrecisionFormat(35633, 36338).precision > 0 && e.getShaderPrecisionFormat(35632, 36338).precision > 0) return "highp";
                        t = "mediump"
                    }
                    return "mediump" === t && e.getShaderPrecisionFormat(35633, 36337).precision > 0 && e.getShaderPrecisionFormat(35632, 36337).precision > 0 ? "mediump" : "lowp"
                }
                var o = "undefined" != typeof WebGL2RenderingContext && e instanceof WebGL2RenderingContext || "undefined" != typeof WebGL2ComputeRenderingContext && e instanceof WebGL2ComputeRenderingContext,
                    a = void 0 !== n.precision ? n.precision : "highp",
                    s = i(a);
                s !== a && (console.warn("THREE.WebGLRenderer:", a, "not supported, using", s, "instead."), a = s);
                var c = !0 === n.logarithmicDepthBuffer,
                    l = e.getParameter(34930),
                    u = e.getParameter(35660),
                    h = e.getParameter(3379),
                    d = e.getParameter(34076),
                    p = e.getParameter(34921),
                    f = e.getParameter(36347),
                    m = e.getParameter(36348),
                    g = e.getParameter(36349),
                    v = u > 0,
                    y = o || !!t.get("OES_texture_float");
                return {
                    isWebGL2: o,
                    getMaxAnisotropy: function () {
                        if (void 0 !== r) return r;
                        var n = t.get("EXT_texture_filter_anisotropic");
                        return r = null !== n ? e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
                    },
                    getMaxPrecision: i,
                    precision: a,
                    logarithmicDepthBuffer: c,
                    maxTextures: l,
                    maxVertexTextures: u,
                    maxTextureSize: h,
                    maxCubemapSize: d,
                    maxAttributes: p,
                    maxVertexUniforms: f,
                    maxVaryings: m,
                    maxFragmentUniforms: g,
                    vertexTextures: v,
                    floatFragmentTextures: y,
                    floatVertexTextures: v && y,
                    maxSamples: o ? e.getParameter(36183) : 0
                }
            }

            function an() {
                var e = this,
                    t = null,
                    n = 0,
                    r = !1,
                    i = !1,
                    o = new be,
                    a = new l,
                    s = {
                        value: null,
                        needsUpdate: !1
                    };

                function c() {
                    s.value !== t && (s.value = t, s.needsUpdate = n > 0), e.numPlanes = n, e.numIntersection = 0
                }

                function u(t, n, r, i) {
                    var c = null !== t ? t.length : 0,
                        l = null;
                    if (0 !== c) {
                        if (l = s.value, !0 !== i || null === l) {
                            var u = r + 4 * c,
                                h = n.matrixWorldInverse;
                            a.getNormalMatrix(h), (null === l || l.length < u) && (l = new Float32Array(u));
                            for (var d = 0, p = r; d !== c; ++d, p += 4) o.copy(t[d]).applyMatrix4(h, a), o.normal.toArray(l, p), l[p + 3] = o.constant
                        }
                        s.value = l, s.needsUpdate = !0
                    }
                    return e.numPlanes = c, e.numIntersection = 0, l
                }
                this.uniform = s, this.numPlanes = 0, this.numIntersection = 0, this.init = function (e, i, o) {
                    var a = 0 !== e.length || i || 0 !== n || r;
                    return r = i, t = u(e, o, 0), n = e.length, a
                }, this.beginShadows = function () {
                    i = !0, u(null)
                }, this.endShadows = function () {
                    i = !1, c()
                }, this.setState = function (e, o, a, l, h, d) {
                    if (!r || null === e || 0 === e.length || i && !a) i ? u(null) : c();
                    else {
                        var p = i ? 0 : n,
                            f = 4 * p,
                            m = h.clippingState || null;
                        s.value = m, m = u(e, l, f, d);
                        for (var g = 0; g !== f; ++g) m[g] = t[g];
                        h.clippingState = m, this.numIntersection = o ? this.numPlanes : 0, this.numPlanes += p
                    }
                }
            }

            function sn(e) {
                var t = {};
                return {
                    get: function (n) {
                        if (void 0 !== t[n]) return t[n];
                        var r;
                        switch (n) {
                            case "WEBGL_depth_texture":
                                r = e.getExtension("WEBGL_depth_texture") || e.getExtension("MOZ_WEBGL_depth_texture") || e.getExtension("WEBKIT_WEBGL_depth_texture");
                                break;
                            case "EXT_texture_filter_anisotropic":
                                r = e.getExtension("EXT_texture_filter_anisotropic") || e.getExtension("MOZ_EXT_texture_filter_anisotropic") || e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                                break;
                            case "WEBGL_compressed_texture_s3tc":
                                r = e.getExtension("WEBGL_compressed_texture_s3tc") || e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                                break;
                            case "WEBGL_compressed_texture_pvrtc":
                                r = e.getExtension("WEBGL_compressed_texture_pvrtc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                                break;
                            default:
                                r = e.getExtension(n)
                        }
                        return null === r && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."), t[n] = r, r
                    }
                }
            }

            function cn(e, t, n) {
                var r = new WeakMap,
                    i = new WeakMap;

                function o(e) {
                    var a = e.target,
                        s = r.get(a);
                    for (var c in null !== s.index && t.remove(s.index), s.attributes) t.remove(s.attributes[c]);
                    a.removeEventListener("dispose", o), r.delete(a);
                    var l = i.get(s);
                    l && (t.remove(l), i.delete(s)), n.memory.geometries--
                }

                function a(e) {
                    var n = [],
                        r = e.index,
                        o = e.attributes.position,
                        a = 0;
                    if (null !== r) {
                        var s = r.array;
                        a = r.version;
                        for (var c = 0, l = s.length; c < l; c += 3) {
                            var u = s[c + 0],
                                h = s[c + 1],
                                d = s[c + 2];
                            n.push(u, h, h, d, d, u)
                        }
                    } else {
                        s = o.array;
                        a = o.version;
                        for (c = 0, l = s.length / 3 - 1; c < l; c += 3) {
                            u = c + 0, h = c + 1, d = c + 2;
                            n.push(u, h, h, d, d, u)
                        }
                    }
                    var p = new(nt(n) > 65535 ? $e : Ze)(n, 1);
                    p.version = a, t.update(p, 34963);
                    var f = i.get(e);
                    f && t.remove(f), i.set(e, p)
                }
                return {
                    get: function (e, t) {
                        var i = r.get(t);
                        return i || (t.addEventListener("dispose", o), t.isBufferGeometry ? i = t : t.isGeometry && (void 0 === t._bufferGeometry && (t._bufferGeometry = (new ut).setFromObject(e)), i = t._bufferGeometry), r.set(t, i), n.memory.geometries++, i)
                    },
                    update: function (e) {
                        var n = e.index,
                            r = e.attributes;
                        for (var i in null !== n && t.update(n, 34963), r) t.update(r[i], 34962);
                        var o = e.morphAttributes;
                        for (var i in o)
                            for (var a = o[i], s = 0, c = a.length; s < c; s++) t.update(a[s], 34962)
                    },
                    getWireframeAttribute: function (e) {
                        var t = i.get(e);
                        if (t) {
                            var n = e.index;
                            null !== n && t.version < n.version && a(e)
                        } else a(e);
                        return i.get(e)
                    }
                }
            }

            function ln(e, t, n, r) {
                var i, o, a, s = r.isWebGL2;
                this.setMode = function (e) {
                    i = e
                }, this.setIndex = function (e) {
                    o = e.type, a = e.bytesPerElement
                }, this.render = function (t, r) {
                    e.drawElements(i, r, o, t * a), n.update(r, i)
                }, this.renderInstances = function (r, c, l, u) {
                    if (0 !== u) {
                        var h, d;
                        if (s) h = e, d = "drawElementsInstanced";
                        else if (d = "drawElementsInstancedANGLE", null === (h = t.get("ANGLE_instanced_arrays"))) return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                        h[d](i, l, o, c * a, u), n.update(l, i, u)
                    }
                }
            }

            function un(e) {
                var t = {
                    frame: 0,
                    calls: 0,
                    triangles: 0,
                    points: 0,
                    lines: 0
                };
                return {
                    memory: {
                        geometries: 0,
                        textures: 0
                    },
                    render: t,
                    programs: null,
                    autoReset: !0,
                    reset: function () {
                        t.frame++, t.calls = 0, t.triangles = 0, t.points = 0, t.lines = 0
                    },
                    update: function (e, n, r) {
                        switch (r = r || 1, t.calls++, n) {
                            case 4:
                                t.triangles += r * (e / 3);
                                break;
                            case 1:
                                t.lines += r * (e / 2);
                                break;
                            case 3:
                                t.lines += r * (e - 1);
                                break;
                            case 2:
                                t.lines += r * e;
                                break;
                            case 0:
                                t.points += r * e;
                                break;
                            default:
                                console.error("THREE.WebGLInfo: Unknown draw mode:", n)
                        }
                    }
                }
            }

            function hn(e, t) {
                return Math.abs(t[1]) - Math.abs(e[1])
            }

            function dn(e) {
                var t = {},
                    n = new Float32Array(8);
                return {
                    update: function (r, i, o, a) {
                        var s = r.morphTargetInfluences,
                            c = void 0 === s ? 0 : s.length,
                            l = t[i.id];
                        if (void 0 === l) {
                            l = [];
                            for (var u = 0; u < c; u++) l[u] = [u, 0];
                            t[i.id] = l
                        }
                        var h = o.morphTargets && i.morphAttributes.position,
                            d = o.morphNormals && i.morphAttributes.normal;
                        for (u = 0; u < c; u++) {
                            0 !== (f = l[u])[1] && (h && i.deleteAttribute("morphTarget" + u), d && i.deleteAttribute("morphNormal" + u))
                        }
                        for (u = 0; u < c; u++) {
                            (f = l[u])[0] = u, f[1] = s[u]
                        }
                        l.sort(hn);
                        var p = 0;
                        for (u = 0; u < 8; u++) {
                            var f;
                            if (f = l[u]) {
                                var m = f[0],
                                    g = f[1];
                                if (g) {
                                    h && i.setAttribute("morphTarget" + u, h[m]), d && i.setAttribute("morphNormal" + u, d[m]), n[u] = g, p += g;
                                    continue
                                }
                            }
                            n[u] = 0
                        }
                        var v = i.morphTargetsRelative ? 1 : 1 - p;
                        a.getUniforms().setValue(e, "morphTargetBaseInfluence", v), a.getUniforms().setValue(e, "morphTargetInfluences", n)
                    }
                }
            }

            function pn(e, t, n, r) {
                var i = new WeakMap;
                return {
                    update: function (e) {
                        var o = r.render.frame,
                            a = e.geometry,
                            s = t.get(e, a);
                        return i.get(s) !== o && (a.isGeometry && s.updateFromObject(e), t.update(s), i.set(s, o)), e.isInstancedMesh && n.update(e.instanceMatrix, 34962), s
                    },
                    dispose: function () {
                        i = new WeakMap
                    }
                }
            }

            function fn(e, t, n, r, i, o, a, s, c, l) {
                e = void 0 !== e ? e : [], t = void 0 !== t ? t : 301, a = void 0 !== a ? a : 1022, d.call(this, e, t, n, r, i, o, a, s, c, l), this.flipY = !1
            }

            function mn(e, t, n, r) {
                d.call(this, null), this.image = {
                    data: e || null,
                    width: t || 1,
                    height: n || 1,
                    depth: r || 1
                }, this.magFilter = 1003, this.minFilter = 1003, this.wrapR = 1001, this.generateMipmaps = !1, this.flipY = !1, this.needsUpdate = !0
            }

            function gn(e, t, n, r) {
                d.call(this, null), this.image = {
                    data: e || null,
                    width: t || 1,
                    height: n || 1,
                    depth: r || 1
                }, this.magFilter = 1003, this.minFilter = 1003, this.wrapR = 1001, this.generateMipmaps = !1, this.flipY = !1, this.needsUpdate = !0
            }
            tn.physical = {
                uniforms: zt([tn.standard.uniforms, {
                    clearcoat: {
                        value: 0
                    },
                    clearcoatMap: {
                        value: null
                    },
                    clearcoatRoughness: {
                        value: 0
                    },
                    clearcoatRoughnessMap: {
                        value: null
                    },
                    clearcoatNormalScale: {
                        value: new c(1, 1)
                    },
                    clearcoatNormalMap: {
                        value: null
                    },
                    sheen: {
                        value: new Ie(0)
                    },
                    transparency: {
                        value: 0
                    }
                }]),
                vertexShader: en.meshphysical_vert,
                fragmentShader: en.meshphysical_frag
            }, fn.prototype = Object.create(d.prototype), fn.prototype.constructor = fn, fn.prototype.isCubeTexture = !0, Object.defineProperty(fn.prototype, "images", {
                get: function () {
                    return this.image
                },
                set: function (e) {
                    this.image = e
                }
            }), mn.prototype = Object.create(d.prototype), mn.prototype.constructor = mn, mn.prototype.isDataTexture2DArray = !0, gn.prototype = Object.create(d.prototype), gn.prototype.constructor = gn, gn.prototype.isDataTexture3D = !0;
            var vn = new d,
                yn = new mn,
                _n = new gn,
                xn = new fn,
                bn = [],
                wn = [],
                Mn = new Float32Array(16),
                Tn = new Float32Array(9),
                Sn = new Float32Array(4);

            function En(e, t, n) {
                var r = e[0];
                if (r <= 0 || r > 0) return e;
                var i = t * n,
                    o = bn[i];
                if (void 0 === o && (o = new Float32Array(i), bn[i] = o), 0 !== t) {
                    r.toArray(o, 0);
                    for (var a = 1, s = 0; a !== t; ++a) s += n, e[a].toArray(o, s)
                }
                return o
            }

            function An(e, t) {
                if (e.length !== t.length) return !1;
                for (var n = 0, r = e.length; n < r; n++)
                    if (e[n] !== t[n]) return !1;
                return !0
            }

            function jn(e, t) {
                for (var n = 0, r = t.length; n < r; n++) e[n] = t[n]
            }

            function Ln(e, t) {
                var n = wn[t];
                void 0 === n && (n = new Int32Array(t), wn[t] = n);
                for (var r = 0; r !== t; ++r) n[r] = e.allocateTextureUnit();
                return n
            }

            function Cn(e, t) {
                var n = this.cache;
                n[0] !== t && (e.uniform1f(this.addr, t), n[0] = t)
            }

            function Pn(e, t) {
                var n = this.cache;
                if (void 0 !== t.x) n[0] === t.x && n[1] === t.y || (e.uniform2f(this.addr, t.x, t.y), n[0] = t.x, n[1] = t.y);
                else {
                    if (An(n, t)) return;
                    e.uniform2fv(this.addr, t), jn(n, t)
                }
            }

            function On(e, t) {
                var n = this.cache;
                if (void 0 !== t.x) n[0] === t.x && n[1] === t.y && n[2] === t.z || (e.uniform3f(this.addr, t.x, t.y, t.z), n[0] = t.x, n[1] = t.y, n[2] = t.z);
                else if (void 0 !== t.r) n[0] === t.r && n[1] === t.g && n[2] === t.b || (e.uniform3f(this.addr, t.r, t.g, t.b), n[0] = t.r, n[1] = t.g, n[2] = t.b);
                else {
                    if (An(n, t)) return;
                    e.uniform3fv(this.addr, t), jn(n, t)
                }
            }

            function Rn(e, t) {
                var n = this.cache;
                if (void 0 !== t.x) n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w || (e.uniform4f(this.addr, t.x, t.y, t.z, t.w), n[0] = t.x, n[1] = t.y, n[2] = t.z, n[3] = t.w);
                else {
                    if (An(n, t)) return;
                    e.uniform4fv(this.addr, t), jn(n, t)
                }
            }

            function Dn(e, t) {
                var n = this.cache,
                    r = t.elements;
                if (void 0 === r) {
                    if (An(n, t)) return;
                    e.uniformMatrix2fv(this.addr, !1, t), jn(n, t)
                } else {
                    if (An(n, r)) return;
                    Sn.set(r), e.uniformMatrix2fv(this.addr, !1, Sn), jn(n, r)
                }
            }

            function Nn(e, t) {
                var n = this.cache,
                    r = t.elements;
                if (void 0 === r) {
                    if (An(n, t)) return;
                    e.uniformMatrix3fv(this.addr, !1, t), jn(n, t)
                } else {
                    if (An(n, r)) return;
                    Tn.set(r), e.uniformMatrix3fv(this.addr, !1, Tn), jn(n, r)
                }
            }

            function In(e, t) {
                var n = this.cache,
                    r = t.elements;
                if (void 0 === r) {
                    if (An(n, t)) return;
                    e.uniformMatrix4fv(this.addr, !1, t), jn(n, t)
                } else {
                    if (An(n, r)) return;
                    Mn.set(r), e.uniformMatrix4fv(this.addr, !1, Mn), jn(n, r)
                }
            }

            function kn(e, t, n) {
                var r = this.cache,
                    i = n.allocateTextureUnit();
                r[0] !== i && (e.uniform1i(this.addr, i), r[0] = i), n.safeSetTexture2D(t || vn, i)
            }

            function zn(e, t, n) {
                var r = this.cache,
                    i = n.allocateTextureUnit();
                r[0] !== i && (e.uniform1i(this.addr, i), r[0] = i), n.setTexture2DArray(t || yn, i)
            }

            function Bn(e, t, n) {
                var r = this.cache,
                    i = n.allocateTextureUnit();
                r[0] !== i && (e.uniform1i(this.addr, i), r[0] = i), n.setTexture3D(t || _n, i)
            }

            function Fn(e, t, n) {
                var r = this.cache,
                    i = n.allocateTextureUnit();
                r[0] !== i && (e.uniform1i(this.addr, i), r[0] = i), n.safeSetTextureCube(t || xn, i)
            }

            function Un(e, t) {
                var n = this.cache;
                n[0] !== t && (e.uniform1i(this.addr, t), n[0] = t)
            }

            function Hn(e, t) {
                var n = this.cache;
                An(n, t) || (e.uniform2iv(this.addr, t), jn(n, t))
            }

            function Gn(e, t) {
                var n = this.cache;
                An(n, t) || (e.uniform3iv(this.addr, t), jn(n, t))
            }

            function Vn(e, t) {
                var n = this.cache;
                An(n, t) || (e.uniform4iv(this.addr, t), jn(n, t))
            }

            function Wn(e, t) {
                var n = this.cache;
                n[0] !== t && (e.uniform1ui(this.addr, t), n[0] = t)
            }

            function qn(e, t) {
                e.uniform1fv(this.addr, t)
            }

            function Xn(e, t) {
                e.uniform1iv(this.addr, t)
            }

            function Yn(e, t) {
                e.uniform2iv(this.addr, t)
            }

            function Jn(e, t) {
                e.uniform3iv(this.addr, t)
            }

            function Zn(e, t) {
                e.uniform4iv(this.addr, t)
            }

            function Qn(e, t) {
                var n = En(t, this.size, 2);
                e.uniform2fv(this.addr, n)
            }

            function $n(e, t) {
                var n = En(t, this.size, 3);
                e.uniform3fv(this.addr, n)
            }

            function Kn(e, t) {
                var n = En(t, this.size, 4);
                e.uniform4fv(this.addr, n)
            }

            function er(e, t) {
                var n = En(t, this.size, 4);
                e.uniformMatrix2fv(this.addr, !1, n)
            }

            function tr(e, t) {
                var n = En(t, this.size, 9);
                e.uniformMatrix3fv(this.addr, !1, n)
            }

            function nr(e, t) {
                var n = En(t, this.size, 16);
                e.uniformMatrix4fv(this.addr, !1, n)
            }

            function rr(e, t, n) {
                var r = t.length,
                    i = Ln(n, r);
                e.uniform1iv(this.addr, i);
                for (var o = 0; o !== r; ++o) n.safeSetTexture2D(t[o] || vn, i[o])
            }

            function ir(e, t, n) {
                var r = t.length,
                    i = Ln(n, r);
                e.uniform1iv(this.addr, i);
                for (var o = 0; o !== r; ++o) n.safeSetTextureCube(t[o] || xn, i[o])
            }

            function or(e, t, n) {
                this.id = e, this.addr = n, this.cache = [], this.setValue = function (e) {
                    switch (e) {
                        case 5126:
                            return Cn;
                        case 35664:
                            return Pn;
                        case 35665:
                            return On;
                        case 35666:
                            return Rn;
                        case 35674:
                            return Dn;
                        case 35675:
                            return Nn;
                        case 35676:
                            return In;
                        case 5124:
                        case 35670:
                            return Un;
                        case 35667:
                        case 35671:
                            return Hn;
                        case 35668:
                        case 35672:
                            return Gn;
                        case 35669:
                        case 35673:
                            return Vn;
                        case 5125:
                            return Wn;
                        case 35678:
                        case 36198:
                        case 36298:
                        case 36306:
                        case 35682:
                            return kn;
                        case 35679:
                        case 36299:
                        case 36307:
                            return Bn;
                        case 35680:
                        case 36300:
                        case 36308:
                        case 36293:
                            return Fn;
                        case 36289:
                        case 36303:
                        case 36311:
                        case 36292:
                            return zn
                    }
                }(t.type)
            }

            function ar(e, t, n) {
                this.id = e, this.addr = n, this.cache = [], this.size = t.size, this.setValue = function (e) {
                    switch (e) {
                        case 5126:
                            return qn;
                        case 35664:
                            return Qn;
                        case 35665:
                            return $n;
                        case 35666:
                            return Kn;
                        case 35674:
                            return er;
                        case 35675:
                            return tr;
                        case 35676:
                            return nr;
                        case 5124:
                        case 35670:
                            return Xn;
                        case 35667:
                        case 35671:
                            return Yn;
                        case 35668:
                        case 35672:
                            return Jn;
                        case 35669:
                        case 35673:
                            return Zn;
                        case 35678:
                        case 36198:
                        case 36298:
                        case 36306:
                        case 35682:
                            return rr;
                        case 35680:
                        case 36300:
                        case 36308:
                        case 36293:
                            return ir
                    }
                }(t.type)
            }

            function sr(e) {
                this.id = e, this.seq = [], this.map = {}
            }
            ar.prototype.updateCache = function (e) {
                var t = this.cache;
                e instanceof Float32Array && t.length !== e.length && (this.cache = new Float32Array(e.length)), jn(t, e)
            }, sr.prototype.setValue = function (e, t, n) {
                for (var r = this.seq, i = 0, o = r.length; i !== o; ++i) {
                    var a = r[i];
                    a.setValue(e, t[a.id], n)
                }
            };
            var cr = /([\w\d_]+)(\])?(\[|\.)?/g;

            function lr(e, t) {
                e.seq.push(t), e.map[t.id] = t
            }

            function ur(e, t, n) {
                var r = e.name,
                    i = r.length;
                for (cr.lastIndex = 0;;) {
                    var o = cr.exec(r),
                        a = cr.lastIndex,
                        s = o[1],
                        c = "]" === o[2],
                        l = o[3];
                    if (c && (s |= 0), void 0 === l || "[" === l && a + 2 === i) {
                        lr(n, void 0 === l ? new or(s, e, t) : new ar(s, e, t));
                        break
                    }
                    var u = n.map[s];
                    void 0 === u && lr(n, u = new sr(s)), n = u
                }
            }

            function hr(e, t) {
                this.seq = [], this.map = {};
                for (var n = e.getProgramParameter(t, 35718), r = 0; r < n; ++r) {
                    var i = e.getActiveUniform(t, r);
                    ur(i, e.getUniformLocation(t, i.name), this)
                }
            }

            function dr(e, t, n) {
                var r = e.createShader(t);
                return e.shaderSource(r, n), e.compileShader(r), r
            }
            hr.prototype.setValue = function (e, t, n, r) {
                var i = this.map[t];
                void 0 !== i && i.setValue(e, n, r)
            }, hr.prototype.setOptional = function (e, t, n) {
                var r = t[n];
                void 0 !== r && this.setValue(e, n, r)
            }, hr.upload = function (e, t, n, r) {
                for (var i = 0, o = t.length; i !== o; ++i) {
                    var a = t[i],
                        s = n[a.id];
                    !1 !== s.needsUpdate && a.setValue(e, s.value, r)
                }
            }, hr.seqWithValue = function (e, t) {
                for (var n = [], r = 0, i = e.length; r !== i; ++r) {
                    var o = e[r];
                    o.id in t && n.push(o)
                }
                return n
            };
            var pr = 0;

            function fr(e) {
                switch (e) {
                    case 3e3:
                        return ["Linear", "( value )"];
                    case 3001:
                        return ["sRGB", "( value )"];
                    case 3002:
                        return ["RGBE", "( value )"];
                    case 3004:
                        return ["RGBM", "( value, 7.0 )"];
                    case 3005:
                        return ["RGBM", "( value, 16.0 )"];
                    case 3006:
                        return ["RGBD", "( value, 256.0 )"];
                    case 3007:
                        return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
                    case 3003:
                        return ["LogLuv", "( value )"];
                    default:
                        throw new Error("unsupported encoding: " + e)
                }
            }

            function mr(e, t, n) {
                var r = e.getShaderParameter(t, 35713),
                    i = e.getShaderInfoLog(t).trim();
                return r && "" === i ? "" : "THREE.WebGLShader: gl.getShaderInfoLog() " + n + "\n" + i + function (e) {
                    for (var t = e.split("\n"), n = 0; n < t.length; n++) t[n] = n + 1 + ": " + t[n];
                    return t.join("\n")
                }(e.getShaderSource(t))
            }

            function gr(e, t) {
                var n = fr(t);
                return "vec4 " + e + "( vec4 value ) { return " + n[0] + "ToLinear" + n[1] + "; }"
            }

            function vr(e, t) {
                var n;
                switch (t) {
                    case 1:
                        n = "Linear";
                        break;
                    case 2:
                        n = "Reinhard";
                        break;
                    case 3:
                        n = "Uncharted2";
                        break;
                    case 4:
                        n = "OptimizedCineon";
                        break;
                    case 5:
                        n = "ACESFilmic";
                        break;
                    default:
                        throw new Error("unsupported toneMapping: " + t)
                }
                return "vec3 " + e + "( vec3 color ) { return " + n + "ToneMapping( color ); }"
            }

            function yr(e) {
                return "" !== e
            }

            function _r(e, t) {
                return e.replace(/NUM_DIR_LIGHTS/g, t.numDirLights).replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, t.numPointLights).replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows)
            }

            function xr(e, t) {
                return e.replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, t.numClippingPlanes - t.numClipIntersection)
            }
            var br = /^[ \t]*#include +<([\w\d./]+)>/gm;

            function wr(e) {
                return e.replace(br, Mr)
            }

            function Mr(e, t) {
                var n = en[t];
                if (void 0 === n) throw new Error("Can not resolve #include <" + t + ">");
                return wr(n)
            }
            var Tr = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,
                Sr = /#pragma unroll_loop_start[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g;

            function Er(e) {
                return e.replace(Sr, jr).replace(Tr, Ar)
            }

            function Ar(e, t, n, r) {
                return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."), jr(e, t, n, r)
            }

            function jr(e, t, n, r) {
                for (var i = "", o = parseInt(t); o < parseInt(n); o++) i += r.replace(/\[ i \]/g, "[ " + o + " ]").replace(/UNROLLED_LOOP_INDEX/g, o);
                return i
            }

            function Lr(e) {
                var t = "precision " + e.precision + " float;\nprecision " + e.precision + " int;";
                return "highp" === e.precision ? t += "\n#define HIGH_PRECISION" : "mediump" === e.precision ? t += "\n#define MEDIUM_PRECISION" : "lowp" === e.precision && (t += "\n#define LOW_PRECISION"), t
            }

            function Cr(e, t, n) {
                var r, i, o, a, s, c = e.getContext(),
                    l = n.defines,
                    u = n.vertexShader,
                    h = n.fragmentShader,
                    d = function (e) {
                        var t = "SHADOWMAP_TYPE_BASIC";
                        return 1 === e.shadowMapType ? t = "SHADOWMAP_TYPE_PCF" : 2 === e.shadowMapType ? t = "SHADOWMAP_TYPE_PCF_SOFT" : 3 === e.shadowMapType && (t = "SHADOWMAP_TYPE_VSM"), t
                    }(n),
                    p = function (e) {
                        var t = "ENVMAP_TYPE_CUBE";
                        if (e.envMap) switch (e.envMapMode) {
                            case 301:
                            case 302:
                                t = "ENVMAP_TYPE_CUBE";
                                break;
                            case 306:
                            case 307:
                                t = "ENVMAP_TYPE_CUBE_UV";
                                break;
                            case 303:
                            case 304:
                                t = "ENVMAP_TYPE_EQUIREC";
                                break;
                            case 305:
                                t = "ENVMAP_TYPE_SPHERE"
                        }
                        return t
                    }(n),
                    f = function (e) {
                        var t = "ENVMAP_MODE_REFLECTION";
                        if (e.envMap) switch (e.envMapMode) {
                            case 302:
                            case 304:
                                t = "ENVMAP_MODE_REFRACTION"
                        }
                        return t
                    }(n),
                    m = function (e) {
                        var t = "ENVMAP_BLENDING_NONE";
                        if (e.envMap) switch (e.combine) {
                            case 0:
                                t = "ENVMAP_BLENDING_MULTIPLY";
                                break;
                            case 1:
                                t = "ENVMAP_BLENDING_MIX";
                                break;
                            case 2:
                                t = "ENVMAP_BLENDING_ADD"
                        }
                        return t
                    }(n),
                    g = e.gammaFactor > 0 ? e.gammaFactor : 1,
                    v = n.isWebGL2 ? "" : function (e) {
                        return [e.extensionDerivatives || e.envMapCubeUV || e.bumpMap || e.tangentSpaceNormalMap || e.clearcoatNormalMap || e.flatShading || "physical" === e.shaderID ? "#extension GL_OES_standard_derivatives : enable" : "", (e.extensionFragDepth || e.logarithmicDepthBuffer) && e.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "", e.extensionDrawBuffers && e.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "", (e.extensionShaderTextureLOD || e.envMap) && e.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(yr).join("\n")
                    }(n),
                    y = function (e) {
                        var t = [];
                        for (var n in e) {
                            var r = e[n];
                            !1 !== r && t.push("#define " + n + " " + r)
                        }
                        return t.join("\n")
                    }(l),
                    _ = c.createProgram();
                if (n.isRawShaderMaterial ? ((r = [y].filter(yr).join("\n")).length > 0 && (r += "\n"), (i = [v, y].filter(yr).join("\n")).length > 0 && (i += "\n")) : (r = [Lr(n), "#define SHADER_NAME " + n.shaderName, y, n.instancing ? "#define USE_INSTANCING" : "", n.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + g, "#define MAX_BONES " + n.maxBones, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + f : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMap && n.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n.normalMap && n.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.displacementMap && n.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.vertexTangents ? "#define USE_TANGENT" : "", n.vertexColors ? "#define USE_COLOR" : "", n.vertexUvs ? "#define USE_UV" : "", n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.skinning ? "#define USE_SKINNING" : "", n.useVertexTexture ? "#define BONE_TEXTURE" : "", n.morphTargets ? "#define USE_MORPHTARGETS" : "", n.morphNormals && !1 === n.flatShading ? "#define USE_MORPHNORMALS" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + d : "", n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", "#ifdef USE_INSTANCING", " attribute mat4 instanceMatrix;", "#endif", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_TANGENT", "\tattribute vec4 tangent;", "#endif", "#ifdef USE_COLOR", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(yr).join("\n"), i = [v, Lr(n), "#define SHADER_NAME " + n.shaderName, y, n.alphaTest ? "#define ALPHATEST " + n.alphaTest + (n.alphaTest % 1 ? "" : ".0") : "", "#define GAMMA_FACTOR " + g, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.matcap ? "#define USE_MATCAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + p : "", n.envMap ? "#define " + f : "", n.envMap ? "#define " + m : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMap && n.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n.normalMap && n.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.sheen ? "#define USE_SHEEN" : "", n.vertexTangents ? "#define USE_TANGENT" : "", n.vertexColors ? "#define USE_COLOR" : "", n.vertexUvs ? "#define USE_UV" : "", n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n.gradientMap ? "#define USE_GRADIENTMAP" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + d : "", n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", n.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", (n.extensionShaderTextureLOD || n.envMap) && n.rendererExtensionShaderTextureLod ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", 0 !== n.toneMapping ? "#define TONE_MAPPING" : "", 0 !== n.toneMapping ? en.tonemapping_pars_fragment : "", 0 !== n.toneMapping ? vr("toneMapping", n.toneMapping) : "", n.dithering ? "#define DITHERING" : "", n.outputEncoding || n.mapEncoding || n.matcapEncoding || n.envMapEncoding || n.emissiveMapEncoding || n.lightMapEncoding ? en.encodings_pars_fragment : "", n.mapEncoding ? gr("mapTexelToLinear", n.mapEncoding) : "", n.matcapEncoding ? gr("matcapTexelToLinear", n.matcapEncoding) : "", n.envMapEncoding ? gr("envMapTexelToLinear", n.envMapEncoding) : "", n.emissiveMapEncoding ? gr("emissiveMapTexelToLinear", n.emissiveMapEncoding) : "", n.lightMapEncoding ? gr("lightMapTexelToLinear", n.lightMapEncoding) : "", n.outputEncoding ? (o = "linearToOutputTexel", a = n.outputEncoding, s = fr(a), "vec4 " + o + "( vec4 value ) { return LinearTo" + s[0] + s[1] + "; }") : "", n.depthPacking ? "#define DEPTH_PACKING " + n.depthPacking : "", "\n"].filter(yr).join("\n")), u = xr(u = _r(u = wr(u), n), n), h = xr(h = _r(h = wr(h), n), n), u = Er(u), h = Er(h), n.isWebGL2 && !n.isRawShaderMaterial) {
                    var x = !1,
                        b = /^\s*#version\s+300\s+es\s*\n/;
                    n.isShaderMaterial && null !== u.match(b) && null !== h.match(b) && (x = !0, u = u.replace(b, ""), h = h.replace(b, "")), r = ["#version 300 es\n", "#define attribute in", "#define varying out", "#define texture2D texture"].join("\n") + "\n" + r, i = ["#version 300 es\n", "#define varying in", x ? "" : "out highp vec4 pc_fragColor;", x ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join("\n") + "\n" + i
                }
                var w, M, T = i + h,
                    S = dr(c, 35633, r + u),
                    E = dr(c, 35632, T);
                if (c.attachShader(_, S), c.attachShader(_, E), void 0 !== n.index0AttributeName ? c.bindAttribLocation(_, 0, n.index0AttributeName) : !0 === n.morphTargets && c.bindAttribLocation(_, 0, "position"), c.linkProgram(_), e.debug.checkShaderErrors) {
                    var A = c.getProgramInfoLog(_).trim(),
                        j = c.getShaderInfoLog(S).trim(),
                        L = c.getShaderInfoLog(E).trim(),
                        C = !0,
                        P = !0;
                    if (!1 === c.getProgramParameter(_, 35714)) {
                        C = !1;
                        var O = mr(c, S, "vertex"),
                            R = mr(c, E, "fragment");
                        console.error("THREE.WebGLProgram: shader error: ", c.getError(), "35715", c.getProgramParameter(_, 35715), "gl.getProgramInfoLog", A, O, R)
                    } else "" !== A ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", A) : "" !== j && "" !== L || (P = !1);
                    P && (this.diagnostics = {
                        runnable: C,
                        programLog: A,
                        vertexShader: {
                            log: j,
                            prefix: r
                        },
                        fragmentShader: {
                            log: L,
                            prefix: i
                        }
                    })
                }
                return c.deleteShader(S), c.deleteShader(E), this.getUniforms = function () {
                    return void 0 === w && (w = new hr(c, _)), w
                }, this.getAttributes = function () {
                    return void 0 === M && (M = function (e, t) {
                        for (var n = {}, r = e.getProgramParameter(t, 35721), i = 0; i < r; i++) {
                            var o = e.getActiveAttrib(t, i).name;
                            n[o] = e.getAttribLocation(t, o)
                        }
                        return n
                    }(c, _)), M
                }, this.destroy = function () {
                    c.deleteProgram(_), this.program = void 0
                }, this.name = n.shaderName, this.id = pr++, this.cacheKey = t, this.usedTimes = 1, this.program = _, this.vertexShader = S, this.fragmentShader = E, this
            }

            function Pr(e, t, n) {
                var r = [],
                    i = n.isWebGL2,
                    o = n.logarithmicDepthBuffer,
                    a = n.floatVertexTextures,
                    s = n.precision,
                    c = n.maxVertexUniforms,
                    l = n.vertexTextures,
                    u = {
                        MeshDepthMaterial: "depth",
                        MeshDistanceMaterial: "distanceRGBA",
                        MeshNormalMaterial: "normal",
                        MeshBasicMaterial: "basic",
                        MeshLambertMaterial: "lambert",
                        MeshPhongMaterial: "phong",
                        MeshToonMaterial: "toon",
                        MeshStandardMaterial: "physical",
                        MeshPhysicalMaterial: "physical",
                        MeshMatcapMaterial: "matcap",
                        LineBasicMaterial: "basic",
                        LineDashedMaterial: "dashed",
                        PointsMaterial: "points",
                        ShadowMaterial: "shadow",
                        SpriteMaterial: "sprite"
                    },
                    h = ["precision", "isWebGL2", "supportsVertexTextures", "outputEncoding", "instancing", "map", "mapEncoding", "matcap", "matcapEncoding", "envMap", "envMapMode", "envMapEncoding", "envMapCubeUV", "lightMap", "lightMapEncoding", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "tangentSpaceNormalMap", "clearcoatMap", "clearcoatRoughnessMap", "clearcoatNormalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "vertexTangents", "vertexUvs", "uvsVertexOnly", "fog", "useFog", "fogExp2", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "numDirLightShadows", "numPointLightShadows", "numSpotLightShadows", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering", "sheen"];

                function d(e) {
                    var t;
                    return e ? e.isTexture ? t = e.encoding : e.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), t = e.texture.encoding) : t = 3e3, t
                }
                this.getParameters = function (r, h, p, f, m, g, v) {
                    var y = f.fog,
                        _ = r.isMeshStandardMaterial ? f.environment : null,
                        x = r.envMap || _,
                        b = u[r.type],
                        w = v.isSkinnedMesh ? function (e) {
                            var t = e.skeleton.bones;
                            if (a) return 1024;
                            var n = c,
                                r = Math.floor((n - 20) / 4),
                                i = Math.min(r, t.length);
                            return i < t.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + t.length + " bones. This GPU supports " + i + "."), 0) : i
                        }(v) : 0;
                    null !== r.precision && (s = n.getMaxPrecision(r.precision)) !== r.precision && console.warn("THREE.WebGLProgram.getParameters:", r.precision, "not supported, using", s, "instead.");
                    var M = function (e, t) {
                        var n;
                        if (t) {
                            var r = tn[t];
                            n = {
                                name: e.type,
                                uniforms: Bt.clone(r.uniforms),
                                vertexShader: r.vertexShader,
                                fragmentShader: r.fragmentShader
                            }
                        } else n = {
                            name: e.type,
                            uniforms: e.uniforms,
                            vertexShader: e.vertexShader,
                            fragmentShader: e.fragmentShader
                        };
                        return n
                    }(r, b);
                    r.onBeforeCompile(M, e);
                    var T = e.getRenderTarget();
                    return {
                        isWebGL2: i,
                        shaderID: b,
                        shaderName: M.name,
                        uniforms: M.uniforms,
                        vertexShader: M.vertexShader,
                        fragmentShader: M.fragmentShader,
                        defines: r.defines,
                        isRawShaderMaterial: r.isRawShaderMaterial,
                        isShaderMaterial: r.isShaderMaterial,
                        precision: s,
                        instancing: !0 === v.isInstancedMesh,
                        supportsVertexTextures: l,
                        outputEncoding: null !== T ? d(T.texture) : e.outputEncoding,
                        map: !!r.map,
                        mapEncoding: d(r.map),
                        matcap: !!r.matcap,
                        matcapEncoding: d(r.matcap),
                        envMap: !!x,
                        envMapMode: x && x.mapping,
                        envMapEncoding: d(x),
                        envMapCubeUV: !!x && (306 === x.mapping || 307 === x.mapping),
                        lightMap: !!r.lightMap,
                        lightMapEncoding: d(r.lightMap),
                        aoMap: !!r.aoMap,
                        emissiveMap: !!r.emissiveMap,
                        emissiveMapEncoding: d(r.emissiveMap),
                        bumpMap: !!r.bumpMap,
                        normalMap: !!r.normalMap,
                        objectSpaceNormalMap: 1 === r.normalMapType,
                        tangentSpaceNormalMap: 0 === r.normalMapType,
                        clearcoatMap: !!r.clearcoatMap,
                        clearcoatRoughnessMap: !!r.clearcoatRoughnessMap,
                        clearcoatNormalMap: !!r.clearcoatNormalMap,
                        displacementMap: !!r.displacementMap,
                        roughnessMap: !!r.roughnessMap,
                        metalnessMap: !!r.metalnessMap,
                        specularMap: !!r.specularMap,
                        alphaMap: !!r.alphaMap,
                        gradientMap: !!r.gradientMap,
                        sheen: !!r.sheen,
                        combine: r.combine,
                        vertexTangents: r.normalMap && r.vertexTangents,
                        vertexColors: r.vertexColors,
                        vertexUvs: !!(r.map || r.bumpMap || r.normalMap || r.specularMap || r.alphaMap || r.emissiveMap || r.roughnessMap || r.metalnessMap || r.clearcoatMap || r.clearcoatRoughnessMap || r.clearcoatNormalMap || r.displacementMap),
                        uvsVertexOnly: !(r.map || r.bumpMap || r.normalMap || r.specularMap || r.alphaMap || r.emissiveMap || r.roughnessMap || r.metalnessMap || r.clearcoatNormalMap || !r.displacementMap),
                        fog: !!y,
                        useFog: r.fog,
                        fogExp2: y && y.isFogExp2,
                        flatShading: r.flatShading,
                        sizeAttenuation: r.sizeAttenuation,
                        logarithmicDepthBuffer: o,
                        skinning: r.skinning && w > 0,
                        maxBones: w,
                        useVertexTexture: a,
                        morphTargets: r.morphTargets,
                        morphNormals: r.morphNormals,
                        maxMorphTargets: e.maxMorphTargets,
                        maxMorphNormals: e.maxMorphNormals,
                        numDirLights: h.directional.length,
                        numPointLights: h.point.length,
                        numSpotLights: h.spot.length,
                        numRectAreaLights: h.rectArea.length,
                        numHemiLights: h.hemi.length,
                        numDirLightShadows: h.directionalShadowMap.length,
                        numPointLightShadows: h.pointShadowMap.length,
                        numSpotLightShadows: h.spotShadowMap.length,
                        numClippingPlanes: m,
                        numClipIntersection: g,
                        dithering: r.dithering,
                        shadowMapEnabled: e.shadowMap.enabled && p.length > 0,
                        shadowMapType: e.shadowMap.type,
                        toneMapping: r.toneMapped ? e.toneMapping : 0,
                        physicallyCorrectLights: e.physicallyCorrectLights,
                        premultipliedAlpha: r.premultipliedAlpha,
                        alphaTest: r.alphaTest,
                        doubleSided: 2 === r.side,
                        flipSided: 1 === r.side,
                        depthPacking: void 0 !== r.depthPacking && r.depthPacking,
                        index0AttributeName: r.index0AttributeName,
                        extensionDerivatives: r.extensions && r.extensions.derivatives,
                        extensionFragDepth: r.extensions && r.extensions.fragDepth,
                        extensionDrawBuffers: r.extensions && r.extensions.drawBuffers,
                        extensionShaderTextureLOD: r.extensions && r.extensions.shaderTextureLOD,
                        rendererExtensionFragDepth: i || null !== t.get("EXT_frag_depth"),
                        rendererExtensionDrawBuffers: i || null !== t.get("WEBGL_draw_buffers"),
                        rendererExtensionShaderTextureLod: i || null !== t.get("EXT_shader_texture_lod"),
                        onBeforeCompile: r.onBeforeCompile
                    }
                }, this.getProgramCacheKey = function (t) {
                    var n = [];
                    if (t.shaderID ? n.push(t.shaderID) : (n.push(t.fragmentShader), n.push(t.vertexShader)), void 0 !== t.defines)
                        for (var r in t.defines) n.push(r), n.push(t.defines[r]);
                    if (void 0 === t.isRawShaderMaterial) {
                        for (var i = 0; i < h.length; i++) n.push(t[h[i]]);
                        n.push(e.outputEncoding), n.push(e.gammaFactor)
                    }
                    return n.push(t.onBeforeCompile.toString()), n.join()
                }, this.acquireProgram = function (t, n) {
                    for (var i, o = 0, a = r.length; o < a; o++) {
                        var s = r[o];
                        if (s.cacheKey === n) {
                            ++(i = s).usedTimes;
                            break
                        }
                    }
                    return void 0 === i && (i = new Cr(e, n, t), r.push(i)), i
                }, this.releaseProgram = function (e) {
                    if (0 == --e.usedTimes) {
                        var t = r.indexOf(e);
                        r[t] = r[r.length - 1], r.pop(), e.destroy()
                    }
                }, this.programs = r
            }

            function Or() {
                var e = new WeakMap;
                return {
                    get: function (t) {
                        var n = e.get(t);
                        return void 0 === n && (n = {}, e.set(t, n)), n
                    },
                    remove: function (t) {
                        e.delete(t)
                    },
                    update: function (t, n, r) {
                        e.get(t)[n] = r
                    },
                    dispose: function () {
                        e = new WeakMap
                    }
                }
            }

            function Rr(e, t) {
                return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.program !== t.program ? e.program.id - t.program.id : e.material.id !== t.material.id ? e.material.id - t.material.id : e.z !== t.z ? e.z - t.z : e.id - t.id
            }

            function Dr(e, t) {
                return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.z !== t.z ? t.z - e.z : e.id - t.id
            }

            function Nr() {
                var e = [],
                    t = 0,
                    n = [],
                    r = [],
                    i = {
                        id: -1
                    };

                function o(n, r, o, a, s, c) {
                    var l = e[t];
                    return void 0 === l ? (l = {
                        id: n.id,
                        object: n,
                        geometry: r,
                        material: o,
                        program: o.program || i,
                        groupOrder: a,
                        renderOrder: n.renderOrder,
                        z: s,
                        group: c
                    }, e[t] = l) : (l.id = n.id, l.object = n, l.geometry = r, l.material = o, l.program = o.program || i, l.groupOrder = a, l.renderOrder = n.renderOrder, l.z = s, l.group = c), t++, l
                }
                return {
                    opaque: n,
                    transparent: r,
                    init: function () {
                        t = 0, n.length = 0, r.length = 0
                    },
                    push: function (e, t, i, a, s, c) {
                        var l = o(e, t, i, a, s, c);
                        (!0 === i.transparent ? r : n).push(l)
                    },
                    unshift: function (e, t, i, a, s, c) {
                        var l = o(e, t, i, a, s, c);
                        (!0 === i.transparent ? r : n).unshift(l)
                    },
                    finish: function () {
                        for (var n = t, r = e.length; n < r; n++) {
                            var i = e[n];
                            if (null === i.id) break;
                            i.id = null, i.object = null, i.geometry = null, i.material = null, i.program = null, i.group = null
                        }
                    },
                    sort: function (e, t) {
                        n.length > 1 && n.sort(e || Rr), r.length > 1 && r.sort(t || Dr)
                    }
                }
            }

            function Ir() {
                var e = new WeakMap;

                function t(n) {
                    var r = n.target;
                    r.removeEventListener("dispose", t), e.delete(r)
                }
                return {
                    get: function (n, r) {
                        var i, o = e.get(n);
                        return void 0 === o ? (i = new Nr, e.set(n, new WeakMap), e.get(n).set(r, i), n.addEventListener("dispose", t)) : void 0 === (i = o.get(r)) && (i = new Nr, o.set(r, i)), i
                    },
                    dispose: function () {
                        e = new WeakMap
                    }
                }
            }

            function kr() {
                var e = {};
                return {
                    get: function (t) {
                        if (void 0 !== e[t.id]) return e[t.id];
                        var n;
                        switch (t.type) {
                            case "DirectionalLight":
                                n = {
                                    direction: new _,
                                    color: new Ie
                                };
                                break;
                            case "SpotLight":
                                n = {
                                    position: new _,
                                    direction: new _,
                                    color: new Ie,
                                    distance: 0,
                                    coneCos: 0,
                                    penumbraCos: 0,
                                    decay: 0
                                };
                                break;
                            case "PointLight":
                                n = {
                                    position: new _,
                                    color: new Ie,
                                    distance: 0,
                                    decay: 0
                                };
                                break;
                            case "HemisphereLight":
                                n = {
                                    direction: new _,
                                    skyColor: new Ie,
                                    groundColor: new Ie
                                };
                                break;
                            case "RectAreaLight":
                                n = {
                                    color: new Ie,
                                    position: new _,
                                    halfWidth: new _,
                                    halfHeight: new _
                                }
                        }
                        return e[t.id] = n, n
                    }
                }
            }
            var zr = 0;

            function Br(e, t) {
                return (t.castShadow ? 1 : 0) - (e.castShadow ? 1 : 0)
            }

            function Fr() {
                for (var e, t = new kr, n = (e = {}, {
                        get: function (t) {
                            if (void 0 !== e[t.id]) return e[t.id];
                            var n;
                            switch (t.type) {
                                case "DirectionalLight":
                                case "SpotLight":
                                    n = {
                                        shadowBias: 0,
                                        shadowRadius: 1,
                                        shadowMapSize: new c
                                    };
                                    break;
                                case "PointLight":
                                    n = {
                                        shadowBias: 0,
                                        shadowRadius: 1,
                                        shadowMapSize: new c,
                                        shadowCameraNear: 1,
                                        shadowCameraFar: 1e3
                                    }
                            }
                            return e[t.id] = n, n
                        }
                    }), r = {
                        version: 0,
                        hash: {
                            directionalLength: -1,
                            pointLength: -1,
                            spotLength: -1,
                            rectAreaLength: -1,
                            hemiLength: -1,
                            numDirectionalShadows: -1,
                            numPointShadows: -1,
                            numSpotShadows: -1
                        },
                        ambient: [0, 0, 0],
                        probe: [],
                        directional: [],
                        directionalShadow: [],
                        directionalShadowMap: [],
                        directionalShadowMatrix: [],
                        spot: [],
                        spotShadow: [],
                        spotShadowMap: [],
                        spotShadowMatrix: [],
                        rectArea: [],
                        point: [],
                        pointShadow: [],
                        pointShadowMap: [],
                        pointShadowMatrix: [],
                        hemi: []
                    }, i = 0; i < 9; i++) r.probe.push(new _);
                var o = new _,
                    a = new A,
                    s = new A;
                return {
                    setup: function (e, i, c) {
                        for (var l = 0, u = 0, h = 0, d = 0; d < 9; d++) r.probe[d].set(0, 0, 0);
                        var p = 0,
                            f = 0,
                            m = 0,
                            g = 0,
                            v = 0,
                            y = 0,
                            _ = 0,
                            x = 0,
                            b = c.matrixWorldInverse;
                        e.sort(Br), d = 0;
                        for (var w = e.length; d < w; d++) {
                            var M = e[d],
                                T = M.color,
                                S = M.intensity,
                                E = M.distance,
                                A = M.shadow && M.shadow.map ? M.shadow.map.texture : null;
                            if (M.isAmbientLight) l += T.r * S, u += T.g * S, h += T.b * S;
                            else if (M.isLightProbe)
                                for (var j = 0; j < 9; j++) r.probe[j].addScaledVector(M.sh.coefficients[j], S);
                            else if (M.isDirectionalLight) {
                                if ((P = t.get(M)).color.copy(M.color).multiplyScalar(M.intensity), P.direction.setFromMatrixPosition(M.matrixWorld), o.setFromMatrixPosition(M.target.matrixWorld), P.direction.sub(o), P.direction.transformDirection(b), M.castShadow) {
                                    var L = M.shadow;
                                    (C = n.get(M)).shadowBias = L.bias, C.shadowRadius = L.radius, C.shadowMapSize = L.mapSize, r.directionalShadow[p] = C, r.directionalShadowMap[p] = A, r.directionalShadowMatrix[p] = M.shadow.matrix, y++
                                }
                                r.directional[p] = P, p++
                            } else if (M.isSpotLight) {
                                if ((P = t.get(M)).position.setFromMatrixPosition(M.matrixWorld), P.position.applyMatrix4(b), P.color.copy(T).multiplyScalar(S), P.distance = E, P.direction.setFromMatrixPosition(M.matrixWorld), o.setFromMatrixPosition(M.target.matrixWorld), P.direction.sub(o), P.direction.transformDirection(b), P.coneCos = Math.cos(M.angle), P.penumbraCos = Math.cos(M.angle * (1 - M.penumbra)), P.decay = M.decay, M.castShadow) {
                                    L = M.shadow;
                                    (C = n.get(M)).shadowBias = L.bias, C.shadowRadius = L.radius, C.shadowMapSize = L.mapSize, r.spotShadow[m] = C, r.spotShadowMap[m] = A, r.spotShadowMatrix[m] = M.shadow.matrix, x++
                                }
                                r.spot[m] = P, m++
                            } else if (M.isRectAreaLight) {
                                (P = t.get(M)).color.copy(T).multiplyScalar(S), P.position.setFromMatrixPosition(M.matrixWorld), P.position.applyMatrix4(b), s.identity(), a.copy(M.matrixWorld), a.premultiply(b), s.extractRotation(a), P.halfWidth.set(.5 * M.width, 0, 0), P.halfHeight.set(0, .5 * M.height, 0), P.halfWidth.applyMatrix4(s), P.halfHeight.applyMatrix4(s), r.rectArea[g] = P, g++
                            } else if (M.isPointLight) {
                                if ((P = t.get(M)).position.setFromMatrixPosition(M.matrixWorld), P.position.applyMatrix4(b), P.color.copy(M.color).multiplyScalar(M.intensity), P.distance = M.distance, P.decay = M.decay, M.castShadow) {
                                    var C;
                                    L = M.shadow;
                                    (C = n.get(M)).shadowBias = L.bias, C.shadowRadius = L.radius, C.shadowMapSize = L.mapSize, C.shadowCameraNear = L.camera.near, C.shadowCameraFar = L.camera.far, r.pointShadow[f] = C, r.pointShadowMap[f] = A, r.pointShadowMatrix[f] = M.shadow.matrix, _++
                                }
                                r.point[f] = P, f++
                            } else if (M.isHemisphereLight) {
                                var P;
                                (P = t.get(M)).direction.setFromMatrixPosition(M.matrixWorld), P.direction.transformDirection(b), P.direction.normalize(), P.skyColor.copy(M.color).multiplyScalar(S), P.groundColor.copy(M.groundColor).multiplyScalar(S), r.hemi[v] = P, v++
                            }
                        }
                        r.ambient[0] = l, r.ambient[1] = u, r.ambient[2] = h;
                        var O = r.hash;
                        O.directionalLength === p && O.pointLength === f && O.spotLength === m && O.rectAreaLength === g && O.hemiLength === v && O.numDirectionalShadows === y && O.numPointShadows === _ && O.numSpotShadows === x || (r.directional.length = p, r.spot.length = m, r.rectArea.length = g, r.point.length = f, r.hemi.length = v, r.directionalShadow.length = y, r.directionalShadowMap.length = y, r.pointShadow.length = _, r.pointShadowMap.length = _, r.spotShadow.length = x, r.spotShadowMap.length = x, r.directionalShadowMatrix.length = y, r.pointShadowMatrix.length = _, r.spotShadowMatrix.length = x, O.directionalLength = p, O.pointLength = f, O.spotLength = m, O.rectAreaLength = g, O.hemiLength = v, O.numDirectionalShadows = y, O.numPointShadows = _, O.numSpotShadows = x, r.version = zr++)
                    },
                    state: r
                }
            }

            function Ur() {
                var e = new Fr,
                    t = [],
                    n = [];
                return {
                    init: function () {
                        t.length = 0, n.length = 0
                    },
                    state: {
                        lightsArray: t,
                        shadowsArray: n,
                        lights: e
                    },
                    setupLights: function (r) {
                        e.setup(t, n, r)
                    },
                    pushLight: function (e) {
                        t.push(e)
                    },
                    pushShadow: function (e) {
                        n.push(e)
                    }
                }
            }

            function Hr() {
                var e = new WeakMap;

                function t(n) {
                    var r = n.target;
                    r.removeEventListener("dispose", t), e.delete(r)
                }
                return {
                    get: function (n, r) {
                        var i;
                        return !1 === e.has(n) ? (i = new Ur, e.set(n, new WeakMap), e.get(n).set(r, i), n.addEventListener("dispose", t)) : !1 === e.get(n).has(r) ? (i = new Ur, e.get(n).set(r, i)) : i = e.get(n).get(r), i
                    },
                    dispose: function () {
                        e = new WeakMap
                    }
                }
            }

            function Gr(e) {
                He.call(this), this.type = "MeshDepthMaterial", this.depthPacking = 3200, this.skinning = !1, this.morphTargets = !1, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.setValues(e)
            }

            function Vr(e) {
                He.call(this), this.type = "MeshDistanceMaterial", this.referencePosition = new _, this.nearDistance = 1, this.farDistance = 1e3, this.skinning = !1, this.morphTargets = !1, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.fog = !1, this.setValues(e)
            }
            Gr.prototype = Object.create(He.prototype), Gr.prototype.constructor = Gr, Gr.prototype.isMeshDepthMaterial = !0, Gr.prototype.copy = function (e) {
                return He.prototype.copy.call(this, e), this.depthPacking = e.depthPacking, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this
            }, Vr.prototype = Object.create(He.prototype), Vr.prototype.constructor = Vr, Vr.prototype.isMeshDistanceMaterial = !0, Vr.prototype.copy = function (e) {
                return He.prototype.copy.call(this, e), this.referencePosition.copy(e.referencePosition), this.nearDistance = e.nearDistance, this.farDistance = e.farDistance, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this
            };

            function Wr(e, t, n) {
                var r = new Yt,
                    i = new c,
                    o = new c,
                    a = new p,
                    s = [],
                    l = [],
                    u = {},
                    h = {
                        0: 1,
                        1: 0,
                        2: 2
                    },
                    d = new Ft({
                        defines: {
                            SAMPLE_RATE: 2 / 8,
                            HALF_SAMPLE_RATE: 1 / 8
                        },
                        uniforms: {
                            shadow_pass: {
                                value: null
                            },
                            resolution: {
                                value: new c
                            },
                            radius: {
                                value: 4
                            }
                        },
                        vertexShader: "void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",
                        fragmentShader: "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = sqrt( squared_mean - mean * mean );\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"
                    }),
                    m = d.clone();
                m.defines.HORIZONAL_PASS = 1;
                var g = new ut;
                g.setAttribute("position", new We(new Float32Array([-1, -1, .5, 3, -1, .5, -1, 3, .5]), 3));
                var v = new jt(g, d),
                    y = this;

                function _(n, r) {
                    var i = t.update(v);
                    d.uniforms.shadow_pass.value = n.map.texture, d.uniforms.resolution.value = n.mapSize, d.uniforms.radius.value = n.radius, e.setRenderTarget(n.mapPass), e.clear(), e.renderBufferDirect(r, null, i, d, v, null), m.uniforms.shadow_pass.value = n.mapPass.texture, m.uniforms.resolution.value = n.mapSize, m.uniforms.radius.value = n.radius, e.setRenderTarget(n.map), e.clear(), e.renderBufferDirect(r, null, i, m, v, null)
                }

                function x(e, t, n) {
                    var r = e << 0 | t << 1 | n << 2,
                        i = s[r];
                    return void 0 === i && (i = new Gr({
                        depthPacking: 3201,
                        morphTargets: e,
                        skinning: t
                    }), s[r] = i), i
                }

                function b(e, t, n) {
                    var r = e << 0 | t << 1 | n << 2,
                        i = l[r];
                    return void 0 === i && (i = new Vr({
                        morphTargets: e,
                        skinning: t
                    }), l[r] = i), i
                }

                function w(t, n, r, i, o, a, s) {
                    var c = null,
                        l = x,
                        d = t.customDepthMaterial;
                    if (!0 === i.isPointLight && (l = b, d = t.customDistanceMaterial), void 0 === d) {
                        var p = !1;
                        !0 === r.morphTargets && (p = n.morphAttributes && n.morphAttributes.position && n.morphAttributes.position.length > 0);
                        var f = !1;
                        !0 === t.isSkinnedMesh && (!0 === r.skinning ? f = !0 : console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", t)), c = l(p, f, !0 === t.isInstancedMesh)
                    } else c = d;
                    if (e.localClippingEnabled && !0 === r.clipShadows && 0 !== r.clippingPlanes.length) {
                        var m = c.uuid,
                            g = r.uuid,
                            v = u[m];
                        void 0 === v && (v = {}, u[m] = v);
                        var y = v[g];
                        void 0 === y && (y = c.clone(), v[g] = y), c = y
                    }
                    return c.visible = r.visible, c.wireframe = r.wireframe, c.side = 3 === s ? null !== r.shadowSide ? r.shadowSide : r.side : null !== r.shadowSide ? r.shadowSide : h[r.side], c.clipShadows = r.clipShadows, c.clippingPlanes = r.clippingPlanes, c.clipIntersection = r.clipIntersection, c.wireframeLinewidth = r.wireframeLinewidth, c.linewidth = r.linewidth, !0 === i.isPointLight && !0 === c.isMeshDistanceMaterial && (c.referencePosition.setFromMatrixPosition(i.matrixWorld), c.nearDistance = o, c.farDistance = a), c
                }

                function M(n, i, o, a, s) {
                    if (!1 !== n.visible) {
                        if (n.layers.test(i.layers) && (n.isMesh || n.isLine || n.isPoints) && (n.castShadow || n.receiveShadow && 3 === s) && (!n.frustumCulled || r.intersectsObject(n))) {
                            n.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse, n.matrixWorld);
                            var c = t.update(n),
                                l = n.material;
                            if (Array.isArray(l))
                                for (var u = c.groups, h = 0, d = u.length; h < d; h++) {
                                    var p = u[h],
                                        f = l[p.materialIndex];
                                    if (f && f.visible) {
                                        var m = w(n, c, f, a, o.near, o.far, s);
                                        e.renderBufferDirect(o, null, c, m, n, p)
                                    }
                                } else if (l.visible) {
                                    m = w(n, c, l, a, o.near, o.far, s);
                                    e.renderBufferDirect(o, null, c, m, n, null)
                                }
                        }
                        for (var g = n.children, v = 0, y = g.length; v < y; v++) M(g[v], i, o, a, s)
                    }
                }
                this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = 1, this.render = function (t, s, c) {
                    if (!1 !== y.enabled && (!1 !== y.autoUpdate || !1 !== y.needsUpdate) && 0 !== t.length) {
                        var l = e.getRenderTarget(),
                            u = e.getActiveCubeFace(),
                            h = e.getActiveMipmapLevel(),
                            d = e.state;
                        d.setBlending(0), d.buffers.color.setClear(1, 1, 1, 1), d.buffers.depth.setTest(!0), d.setScissorTest(!1);
                        for (var p = 0, m = t.length; p < m; p++) {
                            var g = t[p],
                                v = g.shadow;
                            if (void 0 !== v) {
                                i.copy(v.mapSize);
                                var x = v.getFrameExtents();
                                if (i.multiply(x), o.copy(v.mapSize), (i.x > n || i.y > n) && (i.x > n && (o.x = Math.floor(n / x.x), i.x = o.x * x.x, v.mapSize.x = o.x), i.y > n && (o.y = Math.floor(n / x.y), i.y = o.y * x.y, v.mapSize.y = o.y)), null === v.map && !v.isPointLightShadow && 3 === this.type) {
                                    var b = {
                                        minFilter: 1006,
                                        magFilter: 1006,
                                        format: 1023
                                    };
                                    v.map = new f(i.x, i.y, b), v.map.texture.name = g.name + ".shadowMap", v.mapPass = new f(i.x, i.y, b), v.camera.updateProjectionMatrix()
                                }
                                if (null === v.map) {
                                    b = {
                                        minFilter: 1003,
                                        magFilter: 1003,
                                        format: 1023
                                    };
                                    v.map = new f(i.x, i.y, b), v.map.texture.name = g.name + ".shadowMap", v.camera.updateProjectionMatrix()
                                }
                                e.setRenderTarget(v.map), e.clear();
                                for (var w = v.getViewportCount(), T = 0; T < w; T++) {
                                    var S = v.getViewport(T);
                                    a.set(o.x * S.x, o.y * S.y, o.x * S.z, o.y * S.w), d.viewport(a), v.updateMatrices(g, T), r = v.getFrustum(), M(s, c, v.camera, g, this.type)
                                }
                                v.isPointLightShadow || 3 !== this.type || _(v, c)
                            } else console.warn("THREE.WebGLShadowMap:", g, "has no shadow.")
                        }
                        y.needsUpdate = !1, e.setRenderTarget(l, u, h)
                    }
                }
            }

            function qr(e, t, n) {
                var r = n.isWebGL2;
                var i = new function () {
                        var t = !1,
                            n = new p,
                            r = null,
                            i = new p(0, 0, 0, 0);
                        return {
                            setMask: function (n) {
                                r === n || t || (e.colorMask(n, n, n, n), r = n)
                            },
                            setLocked: function (e) {
                                t = e
                            },
                            setClear: function (t, r, o, a, s) {
                                !0 === s && (t *= a, r *= a, o *= a), n.set(t, r, o, a), !1 === i.equals(n) && (e.clearColor(t, r, o, a), i.copy(n))
                            },
                            reset: function () {
                                t = !1, r = null, i.set(-1, 0, 0, 0)
                            }
                        }
                    },
                    o = new function () {
                        var t = !1,
                            n = null,
                            r = null,
                            i = null;
                        return {
                            setTest: function (e) {
                                e ? B(2929) : F(2929)
                            },
                            setMask: function (r) {
                                n === r || t || (e.depthMask(r), n = r)
                            },
                            setFunc: function (t) {
                                if (r !== t) {
                                    if (t) switch (t) {
                                        case 0:
                                            e.depthFunc(512);
                                            break;
                                        case 1:
                                            e.depthFunc(519);
                                            break;
                                        case 2:
                                            e.depthFunc(513);
                                            break;
                                        case 3:
                                            e.depthFunc(515);
                                            break;
                                        case 4:
                                            e.depthFunc(514);
                                            break;
                                        case 5:
                                            e.depthFunc(518);
                                            break;
                                        case 6:
                                            e.depthFunc(516);
                                            break;
                                        case 7:
                                            e.depthFunc(517);
                                            break;
                                        default:
                                            e.depthFunc(515)
                                    } else e.depthFunc(515);
                                    r = t
                                }
                            },
                            setLocked: function (e) {
                                t = e
                            },
                            setClear: function (t) {
                                i !== t && (e.clearDepth(t), i = t)
                            },
                            reset: function () {
                                t = !1, n = null, r = null, i = null
                            }
                        }
                    },
                    a = new function () {
                        var t = !1,
                            n = null,
                            r = null,
                            i = null,
                            o = null,
                            a = null,
                            s = null,
                            c = null,
                            l = null;
                        return {
                            setTest: function (e) {
                                t || (e ? B(2960) : F(2960))
                            },
                            setMask: function (r) {
                                n === r || t || (e.stencilMask(r), n = r)
                            },
                            setFunc: function (t, n, a) {
                                r === t && i === n && o === a || (e.stencilFunc(t, n, a), r = t, i = n, o = a)
                            },
                            setOp: function (t, n, r) {
                                a === t && s === n && c === r || (e.stencilOp(t, n, r), a = t, s = n, c = r)
                            },
                            setLocked: function (e) {
                                t = e
                            },
                            setClear: function (t) {
                                l !== t && (e.clearStencil(t), l = t)
                            },
                            reset: function () {
                                t = !1, n = null, r = null, i = null, o = null, a = null, s = null, c = null, l = null
                            }
                        }
                    },
                    s = e.getParameter(34921),
                    c = new Uint8Array(s),
                    l = new Uint8Array(s),
                    u = new Uint8Array(s),
                    h = {},
                    d = null,
                    f = null,
                    m = null,
                    g = null,
                    v = null,
                    y = null,
                    _ = null,
                    x = null,
                    b = null,
                    w = !1,
                    M = null,
                    T = null,
                    S = null,
                    E = null,
                    A = null,
                    j = e.getParameter(35661),
                    L = !1,
                    C = 0,
                    P = e.getParameter(7938); - 1 !== P.indexOf("WebGL") ? (C = parseFloat(/^WebGL\ ([0-9])/.exec(P)[1]), L = C >= 1) : -1 !== P.indexOf("OpenGL ES") && (C = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(P)[1]), L = C >= 2);
                var O = null,
                    R = {},
                    D = new p,
                    N = new p;

                function I(t, n, r) {
                    var i = new Uint8Array(4),
                        o = e.createTexture();
                    e.bindTexture(t, o), e.texParameteri(t, 10241, 9728), e.texParameteri(t, 10240, 9728);
                    for (var a = 0; a < r; a++) e.texImage2D(n + a, 0, 6408, 1, 1, 0, 6408, 5121, i);
                    return o
                }
                var k = {};

                function z(n, i) {
                    (c[n] = 1, 0 === l[n] && (e.enableVertexAttribArray(n), l[n] = 1), u[n] !== i) && ((r ? e : t.get("ANGLE_instanced_arrays"))[r ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](n, i), u[n] = i)
                }

                function B(t) {
                    !0 !== h[t] && (e.enable(t), h[t] = !0)
                }

                function F(t) {
                    !1 !== h[t] && (e.disable(t), h[t] = !1)
                }
                k[3553] = I(3553, 3553, 1), k[34067] = I(34067, 34069, 6), i.setClear(0, 0, 0, 1), o.setClear(1), a.setClear(0), B(2929), o.setFunc(3), W(!1), q(1), B(2884), V(0);
                var U = {
                    100: 32774,
                    101: 32778,
                    102: 32779
                };
                if (r) U[103] = 32775, U[104] = 32776;
                else {
                    var H = t.get("EXT_blend_minmax");
                    null !== H && (U[103] = H.MIN_EXT, U[104] = H.MAX_EXT)
                }
                var G = {
                    200: 0,
                    201: 1,
                    202: 768,
                    204: 770,
                    210: 776,
                    208: 774,
                    206: 772,
                    203: 769,
                    205: 771,
                    209: 775,
                    207: 773
                };

                function V(t, n, r, i, o, a, s, c) {
                    if (0 !== t) {
                        if (f || (B(3042), f = !0), 5 === t) o = o || n, a = a || r, s = s || i, n === g && o === _ || (e.blendEquationSeparate(U[n], U[o]), g = n, _ = o), r === v && i === y && a === x && s === b || (e.blendFuncSeparate(G[r], G[i], G[a], G[s]), v = r, y = i, x = a, b = s), m = t, w = null;
                        else if (t !== m || c !== w) {
                            if (100 === g && 100 === _ || (e.blendEquation(32774), g = 100, _ = 100), c) switch (t) {
                                case 1:
                                    e.blendFuncSeparate(1, 771, 1, 771);
                                    break;
                                case 2:
                                    e.blendFunc(1, 1);
                                    break;
                                case 3:
                                    e.blendFuncSeparate(0, 0, 769, 771);
                                    break;
                                case 4:
                                    e.blendFuncSeparate(0, 768, 0, 770);
                                    break;
                                default:
                                    console.error("THREE.WebGLState: Invalid blending: ", t)
                            } else switch (t) {
                                case 1:
                                    e.blendFuncSeparate(770, 771, 1, 771);
                                    break;
                                case 2:
                                    e.blendFunc(770, 1);
                                    break;
                                case 3:
                                    e.blendFunc(0, 769);
                                    break;
                                case 4:
                                    e.blendFunc(0, 768);
                                    break;
                                default:
                                    console.error("THREE.WebGLState: Invalid blending: ", t)
                            }
                            v = null, y = null, x = null, b = null, m = t, w = c
                        }
                    } else f && (F(3042), f = !1)
                }

                function W(t) {
                    M !== t && (t ? e.frontFace(2304) : e.frontFace(2305), M = t)
                }

                function q(t) {
                    0 !== t ? (B(2884), t !== T && (1 === t ? e.cullFace(1029) : 2 === t ? e.cullFace(1028) : e.cullFace(1032))) : F(2884), T = t
                }

                function X(t, n, r) {
                    t ? (B(32823), E === n && A === r || (e.polygonOffset(n, r), E = n, A = r)) : F(32823)
                }

                function Y(t) {
                    void 0 === t && (t = 33984 + j - 1), O !== t && (e.activeTexture(t), O = t)
                }
                return {
                    buffers: {
                        color: i,
                        depth: o,
                        stencil: a
                    },
                    initAttributes: function () {
                        for (var e = 0, t = c.length; e < t; e++) c[e] = 0
                    },
                    enableAttribute: function (e) {
                        z(e, 0)
                    },
                    enableAttributeAndDivisor: z,
                    disableUnusedAttributes: function () {
                        for (var t = 0, n = l.length; t !== n; ++t) l[t] !== c[t] && (e.disableVertexAttribArray(t), l[t] = 0)
                    },
                    vertexAttribPointer: function (t, n, i, o, a, s) {
                        !0 !== r || 5124 !== i && 5125 !== i ? e.vertexAttribPointer(t, n, i, o, a, s) : e.vertexAttribIPointer(t, n, i, o, a, s)
                    },
                    enable: B,
                    disable: F,
                    useProgram: function (t) {
                        return d !== t && (e.useProgram(t), d = t, !0)
                    },
                    setBlending: V,
                    setMaterial: function (e, t) {
                        2 === e.side ? F(2884) : B(2884);
                        var n = 1 === e.side;
                        t && (n = !n), W(n), 1 === e.blending && !1 === e.transparent ? V(0) : V(e.blending, e.blendEquation, e.blendSrc, e.blendDst, e.blendEquationAlpha, e.blendSrcAlpha, e.blendDstAlpha, e.premultipliedAlpha), o.setFunc(e.depthFunc), o.setTest(e.depthTest), o.setMask(e.depthWrite), i.setMask(e.colorWrite);
                        var r = e.stencilWrite;
                        a.setTest(r), r && (a.setMask(e.stencilWriteMask), a.setFunc(e.stencilFunc, e.stencilRef, e.stencilFuncMask), a.setOp(e.stencilFail, e.stencilZFail, e.stencilZPass)), X(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits)
                    },
                    setFlipSided: W,
                    setCullFace: q,
                    setLineWidth: function (t) {
                        t !== S && (L && e.lineWidth(t), S = t)
                    },
                    setPolygonOffset: X,
                    setScissorTest: function (e) {
                        e ? B(3089) : F(3089)
                    },
                    activeTexture: Y,
                    bindTexture: function (t, n) {
                        null === O && Y();
                        var r = R[O];
                        void 0 === r && (r = {
                            type: void 0,
                            texture: void 0
                        }, R[O] = r), r.type === t && r.texture === n || (e.bindTexture(t, n || k[t]), r.type = t, r.texture = n)
                    },
                    unbindTexture: function () {
                        var t = R[O];
                        void 0 !== t && void 0 !== t.type && (e.bindTexture(t.type, null), t.type = void 0, t.texture = void 0)
                    },
                    compressedTexImage2D: function () {
                        try {
                            e.compressedTexImage2D.apply(e, arguments)
                        } catch (e) {
                            console.error("THREE.WebGLState:", e)
                        }
                    },
                    texImage2D: function () {
                        try {
                            e.texImage2D.apply(e, arguments)
                        } catch (e) {
                            console.error("THREE.WebGLState:", e)
                        }
                    },
                    texImage3D: function () {
                        try {
                            e.texImage3D.apply(e, arguments)
                        } catch (e) {
                            console.error("THREE.WebGLState:", e)
                        }
                    },
                    scissor: function (t) {
                        !1 === D.equals(t) && (e.scissor(t.x, t.y, t.z, t.w), D.copy(t))
                    },
                    viewport: function (t) {
                        !1 === N.equals(t) && (e.viewport(t.x, t.y, t.z, t.w), N.copy(t))
                    },
                    reset: function () {
                        for (var t = 0; t < l.length; t++) 1 === l[t] && (e.disableVertexAttribArray(t), l[t] = 0);
                        h = {}, O = null, R = {}, d = null, m = null, M = null, T = null, i.reset(), o.reset(), a.reset()
                    }
                }
            }

            function Xr(e, t, n, r, i, o, a) {
                var c, l = i.isWebGL2,
                    u = i.maxTextures,
                    h = i.maxCubemapSize,
                    d = i.maxTextureSize,
                    p = i.maxSamples,
                    f = new WeakMap,
                    m = !1;
                try {
                    m = "undefined" != typeof OffscreenCanvas && null !== new OffscreenCanvas(1, 1).getContext("2d")
                } catch (e) {}

                function g(e, t) {
                    return m ? new OffscreenCanvas(e, t) : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
                }

                function v(e, t, n, r) {
                    var i = 1;
                    if ((e.width > r || e.height > r) && (i = r / Math.max(e.width, e.height)), i < 1 || !0 === t) {
                        if ("undefined" != typeof HTMLImageElement && e instanceof HTMLImageElement || "undefined" != typeof HTMLCanvasElement && e instanceof HTMLCanvasElement || "undefined" != typeof ImageBitmap && e instanceof ImageBitmap) {
                            var o = t ? s.floorPowerOfTwo : Math.floor,
                                a = o(i * e.width),
                                l = o(i * e.height);
                            void 0 === c && (c = g(a, l));
                            var u = n ? g(a, l) : c;
                            return u.width = a, u.height = l, u.getContext("2d").drawImage(e, 0, 0, a, l), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + e.width + "x" + e.height + ") to (" + a + "x" + l + ")."), u
                        }
                        return "data" in e && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + e.width + "x" + e.height + ")."), e
                    }
                    return e
                }

                function y(e) {
                    return s.isPowerOfTwo(e.width) && s.isPowerOfTwo(e.height)
                }

                function _(e, t) {
                    return e.generateMipmaps && t && 1003 !== e.minFilter && 1006 !== e.minFilter
                }

                function x(t, n, i, o) {
                    e.generateMipmap(t), r.get(n).__maxMipLevel = Math.log(Math.max(i, o)) * Math.LOG2E
                }

                function b(n, r, i) {
                    if (!1 === l) return r;
                    if (null !== n) {
                        if (void 0 !== e[n]) return e[n];
                        console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + n + "'")
                    }
                    var o = r;
                    return 6403 === r && (5126 === i && (o = 33326), 5131 === i && (o = 33325), 5121 === i && (o = 33321)), 6407 === r && (5126 === i && (o = 34837), 5131 === i && (o = 34843), 5121 === i && (o = 32849)), 6408 === r && (5126 === i && (o = 34836), 5131 === i && (o = 34842), 5121 === i && (o = 32856)), 33325 !== o && 33326 !== o && 34842 !== o && 34836 !== o || t.get("EXT_color_buffer_float"), o
                }

                function w(e) {
                    return 1003 === e || 1004 === e || 1005 === e ? 9728 : 9729
                }

                function M(t) {
                    var n = t.target;
                    n.removeEventListener("dispose", M),
                        function (t) {
                            var n = r.get(t);
                            if (void 0 === n.__webglInit) return;
                            e.deleteTexture(n.__webglTexture), r.remove(t)
                        }(n), n.isVideoTexture && f.delete(n), a.memory.textures--
                }

                function T(t) {
                    var n = t.target;
                    n.removeEventListener("dispose", T),
                        function (t) {
                            var n = r.get(t),
                                i = r.get(t.texture);
                            if (!t) return;
                            void 0 !== i.__webglTexture && e.deleteTexture(i.__webglTexture);
                            t.depthTexture && t.depthTexture.dispose();
                            if (t.isWebGLCubeRenderTarget)
                                for (var o = 0; o < 6; o++) e.deleteFramebuffer(n.__webglFramebuffer[o]), n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer[o]);
                            else e.deleteFramebuffer(n.__webglFramebuffer), n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer), n.__webglMultisampledFramebuffer && e.deleteFramebuffer(n.__webglMultisampledFramebuffer), n.__webglColorRenderbuffer && e.deleteRenderbuffer(n.__webglColorRenderbuffer), n.__webglDepthRenderbuffer && e.deleteRenderbuffer(n.__webglDepthRenderbuffer);
                            r.remove(t.texture), r.remove(t)
                        }(n), a.memory.textures--
                }
                var S = 0;

                function E(e, t) {
                    var i = r.get(e);
                    if (e.isVideoTexture && function (e) {
                            var t = a.render.frame;
                            f.get(e) !== t && (f.set(e, t), e.update())
                        }(e), e.version > 0 && i.__version !== e.version) {
                        var o = e.image;
                        if (void 0 === o) console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
                        else {
                            if (!1 !== o.complete) return void R(i, e, t);
                            console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")
                        }
                    }
                    n.activeTexture(33984 + t), n.bindTexture(3553, i.__webglTexture)
                }

                function A(t, i) {
                    if (6 === t.image.length) {
                        var a = r.get(t);
                        if (t.version > 0 && a.__version !== t.version) {
                            O(a, t), n.activeTexture(33984 + i), n.bindTexture(34067, a.__webglTexture), e.pixelStorei(37440, t.flipY);
                            for (var s = t && (t.isCompressedTexture || t.image[0].isCompressedTexture), c = t.image[0] && t.image[0].isDataTexture, u = [], d = 0; d < 6; d++) u[d] = s || c ? c ? t.image[d].image : t.image[d] : v(t.image[d], !1, !0, h);
                            var p, f = u[0],
                                m = y(f) || l,
                                g = o.convert(t.format),
                                w = o.convert(t.type),
                                M = b(t.internalFormat, g, w);
                            if (P(34067, t, m), s) {
                                for (d = 0; d < 6; d++) {
                                    p = u[d].mipmaps;
                                    for (var T = 0; T < p.length; T++) {
                                        var S = p[T];
                                        1023 !== t.format && 1022 !== t.format ? null !== g ? n.compressedTexImage2D(34069 + d, T, M, S.width, S.height, 0, S.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : n.texImage2D(34069 + d, T, M, S.width, S.height, 0, g, w, S.data)
                                    }
                                }
                                a.__maxMipLevel = p.length - 1
                            } else {
                                p = t.mipmaps;
                                for (d = 0; d < 6; d++)
                                    if (c) {
                                        n.texImage2D(34069 + d, 0, M, u[d].width, u[d].height, 0, g, w, u[d].data);
                                        for (T = 0; T < p.length; T++) {
                                            var E = (S = p[T]).image[d].image;
                                            n.texImage2D(34069 + d, T + 1, M, E.width, E.height, 0, g, w, E.data)
                                        }
                                    } else {
                                        n.texImage2D(34069 + d, 0, M, g, w, u[d]);
                                        for (T = 0; T < p.length; T++) {
                                            S = p[T];
                                            n.texImage2D(34069 + d, T + 1, M, g, w, S.image[d])
                                        }
                                    } a.__maxMipLevel = p.length
                            }
                            _(t, m) && x(34067, t, f.width, f.height), a.__version = t.version, t.onUpdate && t.onUpdate(t)
                        } else n.activeTexture(33984 + i), n.bindTexture(34067, a.__webglTexture)
                    }
                }

                function j(e, t) {
                    n.activeTexture(33984 + t), n.bindTexture(34067, r.get(e).__webglTexture)
                }
                var L = {
                        1e3: 10497,
                        1001: 33071,
                        1002: 33648
                    },
                    C = {
                        1003: 9728,
                        1004: 9984,
                        1005: 9986,
                        1006: 9729,
                        1007: 9985,
                        1008: 9987
                    };

                function P(n, o, a) {
                    a ? (e.texParameteri(n, 10242, L[o.wrapS]), e.texParameteri(n, 10243, L[o.wrapT]), 32879 !== n && 35866 !== n || e.texParameteri(n, 32882, L[o.wrapR]), e.texParameteri(n, 10240, C[o.magFilter]), e.texParameteri(n, 10241, C[o.minFilter])) : (e.texParameteri(n, 10242, 33071), e.texParameteri(n, 10243, 33071), 32879 !== n && 35866 !== n || e.texParameteri(n, 32882, 33071), 1001 === o.wrapS && 1001 === o.wrapT || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), e.texParameteri(n, 10240, w(o.magFilter)), e.texParameteri(n, 10241, w(o.minFilter)), 1003 !== o.minFilter && 1006 !== o.minFilter && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));
                    var s = t.get("EXT_texture_filter_anisotropic");
                    if (s) {
                        if (1015 === o.type && null === t.get("OES_texture_float_linear")) return;
                        if (1016 === o.type && null === (l || t.get("OES_texture_half_float_linear"))) return;
                        (o.anisotropy > 1 || r.get(o).__currentAnisotropy) && (e.texParameterf(n, s.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(o.anisotropy, i.getMaxAnisotropy())), r.get(o).__currentAnisotropy = o.anisotropy)
                    }
                }

                function O(t, n) {
                    void 0 === t.__webglInit && (t.__webglInit = !0, n.addEventListener("dispose", M), t.__webglTexture = e.createTexture(), a.memory.textures++)
                }

                function R(t, r, i) {
                    var a = 3553;
                    r.isDataTexture2DArray && (a = 35866), r.isDataTexture3D && (a = 32879), O(t, r), n.activeTexture(33984 + i), n.bindTexture(a, t.__webglTexture), e.pixelStorei(37440, r.flipY), e.pixelStorei(37441, r.premultiplyAlpha), e.pixelStorei(3317, r.unpackAlignment);
                    var s = function (e) {
                            return !l && (1001 !== e.wrapS || 1001 !== e.wrapT || 1003 !== e.minFilter && 1006 !== e.minFilter)
                        }(r) && !1 === y(r.image),
                        c = v(r.image, s, !1, d),
                        u = y(c) || l,
                        h = o.convert(r.format),
                        p = o.convert(r.type),
                        f = b(r.internalFormat, h, p);
                    P(a, r, u);
                    var m, g = r.mipmaps;
                    if (r.isDepthTexture) f = 6402, l ? f = 1015 === r.type ? 36012 : 1014 === r.type ? 33190 : 1020 === r.type ? 35056 : 33189 : 1015 === r.type && console.error("WebGLRenderer: Floating point depth texture requires WebGL2."), 1026 === r.format && 6402 === f && 1012 !== r.type && 1014 !== r.type && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), r.type = 1012, p = o.convert(r.type)), 1027 === r.format && 6402 === f && (f = 34041, 1020 !== r.type && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), r.type = 1020, p = o.convert(r.type))), n.texImage2D(3553, 0, f, c.width, c.height, 0, h, p, null);
                    else if (r.isDataTexture)
                        if (g.length > 0 && u) {
                            for (var w = 0, M = g.length; w < M; w++) m = g[w], n.texImage2D(3553, w, f, m.width, m.height, 0, h, p, m.data);
                            r.generateMipmaps = !1, t.__maxMipLevel = g.length - 1
                        } else n.texImage2D(3553, 0, f, c.width, c.height, 0, h, p, c.data), t.__maxMipLevel = 0;
                    else if (r.isCompressedTexture) {
                        for (w = 0, M = g.length; w < M; w++) m = g[w], 1023 !== r.format && 1022 !== r.format ? null !== h ? n.compressedTexImage2D(3553, w, f, m.width, m.height, 0, m.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : n.texImage2D(3553, w, f, m.width, m.height, 0, h, p, m.data);
                        t.__maxMipLevel = g.length - 1
                    } else if (r.isDataTexture2DArray) n.texImage3D(35866, 0, f, c.width, c.height, c.depth, 0, h, p, c.data), t.__maxMipLevel = 0;
                    else if (r.isDataTexture3D) n.texImage3D(32879, 0, f, c.width, c.height, c.depth, 0, h, p, c.data), t.__maxMipLevel = 0;
                    else if (g.length > 0 && u) {
                        for (w = 0, M = g.length; w < M; w++) m = g[w], n.texImage2D(3553, w, f, h, p, m);
                        r.generateMipmaps = !1, t.__maxMipLevel = g.length - 1
                    } else n.texImage2D(3553, 0, f, h, p, c), t.__maxMipLevel = 0;
                    _(r, u) && x(a, r, c.width, c.height), t.__version = r.version, r.onUpdate && r.onUpdate(r)
                }

                function D(t, i, a, s) {
                    var c = o.convert(i.texture.format),
                        l = o.convert(i.texture.type),
                        u = b(i.texture.internalFormat, c, l);
                    n.texImage2D(s, 0, u, i.width, i.height, 0, c, l, null), e.bindFramebuffer(36160, t), e.framebufferTexture2D(36160, a, s, r.get(i.texture).__webglTexture, 0), e.bindFramebuffer(36160, null)
                }

                function N(t, n, r) {
                    if (e.bindRenderbuffer(36161, t), n.depthBuffer && !n.stencilBuffer) {
                        var i = 33189;
                        if (r) {
                            var a = n.depthTexture;
                            a && a.isDepthTexture && (1015 === a.type ? i = 36012 : 1014 === a.type && (i = 33190));
                            var s = k(n);
                            e.renderbufferStorageMultisample(36161, s, i, n.width, n.height)
                        } else e.renderbufferStorage(36161, i, n.width, n.height);
                        e.framebufferRenderbuffer(36160, 36096, 36161, t)
                    } else if (n.depthBuffer && n.stencilBuffer) {
                        if (r) {
                            s = k(n);
                            e.renderbufferStorageMultisample(36161, s, 35056, n.width, n.height)
                        } else e.renderbufferStorage(36161, 34041, n.width, n.height);
                        e.framebufferRenderbuffer(36160, 33306, 36161, t)
                    } else {
                        var c = o.convert(n.texture.format),
                            l = o.convert(n.texture.type);
                        i = b(n.texture.internalFormat, c, l);
                        if (r) {
                            s = k(n);
                            e.renderbufferStorageMultisample(36161, s, i, n.width, n.height)
                        } else e.renderbufferStorage(36161, i, n.width, n.height)
                    }
                    e.bindRenderbuffer(36161, null)
                }

                function I(t) {
                    var n = r.get(t),
                        i = !0 === t.isWebGLCubeRenderTarget;
                    if (t.depthTexture) {
                        if (i) throw new Error("target.depthTexture not supported in Cube render targets");
                        ! function (t, n) {
                            if (n && n.isWebGLCubeRenderTarget) throw new Error("Depth Texture with cube render targets is not supported");
                            if (e.bindFramebuffer(36160, t), !n.depthTexture || !n.depthTexture.isDepthTexture) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                            r.get(n.depthTexture).__webglTexture && n.depthTexture.image.width === n.width && n.depthTexture.image.height === n.height || (n.depthTexture.image.width = n.width, n.depthTexture.image.height = n.height, n.depthTexture.needsUpdate = !0), E(n.depthTexture, 0);
                            var i = r.get(n.depthTexture).__webglTexture;
                            if (1026 === n.depthTexture.format) e.framebufferTexture2D(36160, 36096, 3553, i, 0);
                            else {
                                if (1027 !== n.depthTexture.format) throw new Error("Unknown depthTexture format");
                                e.framebufferTexture2D(36160, 33306, 3553, i, 0)
                            }
                        }(n.__webglFramebuffer, t)
                    } else if (i) {
                        n.__webglDepthbuffer = [];
                        for (var o = 0; o < 6; o++) e.bindFramebuffer(36160, n.__webglFramebuffer[o]), n.__webglDepthbuffer[o] = e.createRenderbuffer(), N(n.__webglDepthbuffer[o], t, !1)
                    } else e.bindFramebuffer(36160, n.__webglFramebuffer), n.__webglDepthbuffer = e.createRenderbuffer(), N(n.__webglDepthbuffer, t, !1);
                    e.bindFramebuffer(36160, null)
                }

                function k(e) {
                    return l && e.isWebGLMultisampleRenderTarget ? Math.min(p, e.samples) : 0
                }
                var z = !1,
                    B = !1;
                this.allocateTextureUnit = function () {
                    var e = S;
                    return e >= u && console.warn("THREE.WebGLTextures: Trying to use " + e + " texture units while this GPU supports only " + u), S += 1, e
                }, this.resetTextureUnits = function () {
                    S = 0
                }, this.setTexture2D = E, this.setTexture2DArray = function (e, t) {
                    var i = r.get(e);
                    e.version > 0 && i.__version !== e.version ? R(i, e, t) : (n.activeTexture(33984 + t), n.bindTexture(35866, i.__webglTexture))
                }, this.setTexture3D = function (e, t) {
                    var i = r.get(e);
                    e.version > 0 && i.__version !== e.version ? R(i, e, t) : (n.activeTexture(33984 + t), n.bindTexture(32879, i.__webglTexture))
                }, this.setTextureCube = A, this.setTextureCubeDynamic = j, this.setupRenderTarget = function (t) {
                    var i = r.get(t),
                        s = r.get(t.texture);
                    t.addEventListener("dispose", T), s.__webglTexture = e.createTexture(), a.memory.textures++;
                    var c = !0 === t.isWebGLCubeRenderTarget,
                        u = !0 === t.isWebGLMultisampleRenderTarget,
                        h = y(t) || l;
                    if (!l || 1022 !== t.texture.format || 1015 !== t.texture.type && 1016 !== t.texture.type || (t.texture.format = 1023, console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")), c) {
                        i.__webglFramebuffer = [];
                        for (var d = 0; d < 6; d++) i.__webglFramebuffer[d] = e.createFramebuffer()
                    } else if (i.__webglFramebuffer = e.createFramebuffer(), u)
                        if (l) {
                            i.__webglMultisampledFramebuffer = e.createFramebuffer(), i.__webglColorRenderbuffer = e.createRenderbuffer(), e.bindRenderbuffer(36161, i.__webglColorRenderbuffer);
                            var p = o.convert(t.texture.format),
                                f = o.convert(t.texture.type),
                                m = b(t.texture.internalFormat, p, f),
                                g = k(t);
                            e.renderbufferStorageMultisample(36161, g, m, t.width, t.height), e.bindFramebuffer(36160, i.__webglMultisampledFramebuffer), e.framebufferRenderbuffer(36160, 36064, 36161, i.__webglColorRenderbuffer), e.bindRenderbuffer(36161, null), t.depthBuffer && (i.__webglDepthRenderbuffer = e.createRenderbuffer(), N(i.__webglDepthRenderbuffer, t, !0)), e.bindFramebuffer(36160, null)
                        } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
                    if (c) {
                        n.bindTexture(34067, s.__webglTexture), P(34067, t.texture, h);
                        for (d = 0; d < 6; d++) D(i.__webglFramebuffer[d], t, 36064, 34069 + d);
                        _(t.texture, h) && x(34067, t.texture, t.width, t.height), n.bindTexture(34067, null)
                    } else n.bindTexture(3553, s.__webglTexture), P(3553, t.texture, h), D(i.__webglFramebuffer, t, 36064, 3553), _(t.texture, h) && x(3553, t.texture, t.width, t.height), n.bindTexture(3553, null);
                    t.depthBuffer && I(t)
                }, this.updateRenderTargetMipmap = function (e) {
                    var t = e.texture;
                    if (_(t, y(e) || l)) {
                        var i = e.isWebGLCubeRenderTarget ? 34067 : 3553,
                            o = r.get(t).__webglTexture;
                        n.bindTexture(i, o), x(i, t, e.width, e.height), n.bindTexture(i, null)
                    }
                }, this.updateMultisampleRenderTarget = function (t) {
                    if (t.isWebGLMultisampleRenderTarget)
                        if (l) {
                            var n = r.get(t);
                            e.bindFramebuffer(36008, n.__webglMultisampledFramebuffer), e.bindFramebuffer(36009, n.__webglFramebuffer);
                            var i = t.width,
                                o = t.height,
                                a = 16384;
                            t.depthBuffer && (a |= 256), t.stencilBuffer && (a |= 1024), e.blitFramebuffer(0, 0, i, o, 0, 0, i, o, a, 9728), e.bindFramebuffer(36160, n.__webglMultisampledFramebuffer)
                        } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")
                }, this.safeSetTexture2D = function (e, t) {
                    e && e.isWebGLRenderTarget && (!1 === z && (console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."), z = !0), e = e.texture), E(e, t)
                }, this.safeSetTextureCube = function (e, t) {
                    e && e.isWebGLCubeRenderTarget && (!1 === B && (console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."), B = !0), e = e.texture), e && e.isCubeTexture || Array.isArray(e.image) && 6 === e.image.length ? A(e, t) : j(e, t)
                }
            }

            function Yr(e, t, n) {
                var r = n.isWebGL2;
                return {
                    convert: function (e) {
                        var n;
                        if (1009 === e) return 5121;
                        if (1017 === e) return 32819;
                        if (1018 === e) return 32820;
                        if (1019 === e) return 33635;
                        if (1010 === e) return 5120;
                        if (1011 === e) return 5122;
                        if (1012 === e) return 5123;
                        if (1013 === e) return 5124;
                        if (1014 === e) return 5125;
                        if (1015 === e) return 5126;
                        if (1016 === e) return r ? 5131 : null !== (n = t.get("OES_texture_half_float")) ? n.HALF_FLOAT_OES : null;
                        if (1021 === e) return 6406;
                        if (1022 === e) return 6407;
                        if (1023 === e) return 6408;
                        if (1024 === e) return 6409;
                        if (1025 === e) return 6410;
                        if (1026 === e) return 6402;
                        if (1027 === e) return 34041;
                        if (1028 === e) return 6403;
                        if (1029 === e) return 36244;
                        if (1030 === e) return 33319;
                        if (1031 === e) return 33320;
                        if (1032 === e) return 36248;
                        if (1033 === e) return 36249;
                        if (33776 === e || 33777 === e || 33778 === e || 33779 === e) {
                            if (null === (n = t.get("WEBGL_compressed_texture_s3tc"))) return null;
                            if (33776 === e) return n.COMPRESSED_RGB_S3TC_DXT1_EXT;
                            if (33777 === e) return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                            if (33778 === e) return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                            if (33779 === e) return n.COMPRESSED_RGBA_S3TC_DXT5_EXT
                        }
                        if (35840 === e || 35841 === e || 35842 === e || 35843 === e) {
                            if (null === (n = t.get("WEBGL_compressed_texture_pvrtc"))) return null;
                            if (35840 === e) return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                            if (35841 === e) return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                            if (35842 === e) return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                            if (35843 === e) return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
                        }
                        if (36196 === e) return null !== (n = t.get("WEBGL_compressed_texture_etc1")) ? n.COMPRESSED_RGB_ETC1_WEBGL : null;
                        if ((37492 === e || 37496 === e) && null !== (n = t.get("WEBGL_compressed_texture_etc"))) {
                            if (37492 === e) return n.COMPRESSED_RGB8_ETC2;
                            if (37496 === e) return n.COMPRESSED_RGBA8_ETC2_EAC
                        }
                        return 37808 === e || 37809 === e || 37810 === e || 37811 === e || 37812 === e || 37813 === e || 37814 === e || 37815 === e || 37816 === e || 37817 === e || 37818 === e || 37819 === e || 37820 === e || 37821 === e || 37840 === e || 37841 === e || 37842 === e || 37843 === e || 37844 === e || 37845 === e || 37846 === e || 37847 === e || 37848 === e || 37849 === e || 37850 === e || 37851 === e || 37852 === e || 37853 === e ? null !== (n = t.get("WEBGL_compressed_texture_astc")) ? e : null : 36492 === e ? null !== (n = t.get("EXT_texture_compression_bptc")) ? e : null : 1020 === e ? r ? 34042 : null !== (n = t.get("WEBGL_depth_texture")) ? n.UNSIGNED_INT_24_8_WEBGL : null : void 0
                    }
                }
            }

            function Jr(e) {
                Ht.call(this), this.cameras = e || []
            }

            function Zr() {
                W.call(this), this.type = "Group"
            }

            function Qr() {
                this._targetRay = null, this._grip = null
            }

            function $r(e, t) {
                var n = this,
                    r = null,
                    i = 1,
                    o = null,
                    a = "local-floor",
                    s = null,
                    c = [],
                    l = new Map,
                    u = new Ht;
                u.layers.enable(1), u.viewport = new p;
                var h = new Ht;
                h.layers.enable(2), h.viewport = new p;
                var d = [u, h],
                    f = new Jr;
                f.layers.enable(1), f.layers.enable(2);
                var m = null,
                    g = null;

                function v(e) {
                    var t = l.get(e.inputSource);
                    t && t.dispatchEvent({
                        type: e.type
                    })
                }

                function y() {
                    l.forEach((function (e, t) {
                        e.disconnect(t)
                    })), l.clear(), e.setFramebuffer(null), e.setRenderTarget(e.getRenderTarget()), E.stop(), n.isPresenting = !1, n.dispatchEvent({
                        type: "sessionend"
                    })
                }

                function x(e) {
                    o = e, E.setContext(r), E.start(), n.isPresenting = !0, n.dispatchEvent({
                        type: "sessionstart"
                    })
                }

                function b(e) {
                    for (var t = r.inputSources, n = 0; n < c.length; n++) l.set(t[n], c[n]);
                    for (n = 0; n < e.removed.length; n++) {
                        var i = e.removed[n];
                        (o = l.get(i)) && (o.dispatchEvent({
                            type: "disconnected",
                            data: i
                        }), l.delete(i))
                    }
                    for (n = 0; n < e.added.length; n++) {
                        var o;
                        i = e.added[n];
                        (o = l.get(i)) && o.dispatchEvent({
                            type: "connected",
                            data: i
                        })
                    }
                }
                this.enabled = !1, this.isPresenting = !1, this.getController = function (e) {
                    var t = c[e];
                    return void 0 === t && (t = new Qr, c[e] = t), t.getTargetRaySpace()
                }, this.getControllerGrip = function (e) {
                    var t = c[e];
                    return void 0 === t && (t = new Qr, c[e] = t), t.getGripSpace()
                }, this.setFramebufferScaleFactor = function (e) {
                    i = e, !0 === n.isPresenting && console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")
                }, this.setReferenceSpaceType = function (e) {
                    a = e, !0 === n.isPresenting && console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")
                }, this.getReferenceSpace = function () {
                    return o
                }, this.getSession = function () {
                    return r
                }, this.setSession = function (e) {
                    if (null !== (r = e)) {
                        r.addEventListener("select", v), r.addEventListener("selectstart", v), r.addEventListener("selectend", v), r.addEventListener("squeeze", v), r.addEventListener("squeezestart", v), r.addEventListener("squeezeend", v), r.addEventListener("end", y);
                        var n = t.getContextAttributes();
                        !0 !== n.xrCompatible && t.makeXRCompatible();
                        var o = {
                                antialias: n.antialias,
                                alpha: n.alpha,
                                depth: n.depth,
                                stencil: n.stencil,
                                framebufferScaleFactor: i
                            },
                            s = new XRWebGLLayer(r, t, o);
                        r.updateRenderState({
                            baseLayer: s
                        }), r.requestReferenceSpace(a).then(x), r.addEventListener("inputsourceschange", b)
                    }
                };
                var w = new _,
                    M = new _;

                function T(e, t) {
                    null === t ? e.matrixWorld.copy(e.matrix) : e.matrixWorld.multiplyMatrices(t.matrixWorld, e.matrix), e.matrixWorldInverse.getInverse(e.matrixWorld)
                }
                this.getCamera = function (e) {
                    f.near = h.near = u.near = e.near, f.far = h.far = u.far = e.far, m === f.near && g === f.far || (r.updateRenderState({
                        depthNear: f.near,
                        depthFar: f.far
                    }), m = f.near, g = f.far);
                    var t = e.parent,
                        n = f.cameras;
                    T(f, t);
                    for (var i = 0; i < n.length; i++) T(n[i], t);
                    e.matrixWorld.copy(f.matrixWorld);
                    for (var o = e.children, a = (i = 0, o.length); i < a; i++) o[i].updateMatrixWorld(!0);
                    return 2 === n.length ? function (e, t, n) {
                        w.setFromMatrixPosition(t.matrixWorld), M.setFromMatrixPosition(n.matrixWorld);
                        var r = w.distanceTo(M),
                            i = t.projectionMatrix.elements,
                            o = n.projectionMatrix.elements,
                            a = i[14] / (i[10] - 1),
                            s = i[14] / (i[10] + 1),
                            c = (i[9] + 1) / i[5],
                            l = (i[9] - 1) / i[5],
                            u = (i[8] - 1) / i[0],
                            h = (o[8] + 1) / o[0],
                            d = a * u,
                            p = a * h,
                            f = r / (-u + h),
                            m = f * -u;
                        t.matrixWorld.decompose(e.position, e.quaternion, e.scale), e.translateX(m), e.translateZ(f), e.matrixWorld.compose(e.position, e.quaternion, e.scale), e.matrixWorldInverse.getInverse(e.matrixWorld);
                        var g = a + f,
                            v = s + f,
                            y = d - m,
                            _ = p + (r - m),
                            x = c * s / v * g,
                            b = l * s / v * g;
                        e.projectionMatrix.makePerspective(y, _, x, b, g, v)
                    }(f, u, h) : f.projectionMatrix.copy(u.projectionMatrix), f
                };
                var S = null;
                var E = new Zt;
                E.setAnimationLoop((function (t, n) {
                    if (null !== (s = n.getViewerPose(o))) {
                        var i = s.views,
                            a = r.renderState.baseLayer;
                        e.setFramebuffer(a.framebuffer);
                        var l = !1;
                        i.length !== f.cameras.length && (f.cameras.length = 0, l = !0);
                        for (var u = 0; u < i.length; u++) {
                            var h = i[u],
                                p = a.getViewport(h),
                                m = d[u];
                            m.matrix.fromArray(h.transform.matrix), m.projectionMatrix.fromArray(h.projectionMatrix), m.viewport.set(p.x, p.y, p.width, p.height), 0 === u && f.matrix.copy(m.matrix), !0 === l && f.cameras.push(m)
                        }
                    }
                    var g = r.inputSources;
                    for (u = 0; u < c.length; u++) {
                        var v = c[u],
                            y = g[u];
                        v.update(y, n, o)
                    }
                    S && S(t, n)
                })), this.setAnimationLoop = function (e) {
                    S = e
                }, this.dispose = function () {}
            }

            function Kr(e) {
                function t(t, n, r) {
                    t.opacity.value = n.opacity, n.color && t.diffuse.value.copy(n.color), n.emissive && t.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity), n.map && (t.map.value = n.map), n.alphaMap && (t.alphaMap.value = n.alphaMap), n.specularMap && (t.specularMap.value = n.specularMap);
                    var i, o, a = n.envMap || r;
                    a && (t.envMap.value = a, t.flipEnvMap.value = a.isCubeTexture ? -1 : 1, t.reflectivity.value = n.reflectivity, t.refractionRatio.value = n.refractionRatio, t.maxMipLevel.value = e.get(a).__maxMipLevel), n.lightMap && (t.lightMap.value = n.lightMap, t.lightMapIntensity.value = n.lightMapIntensity), n.aoMap && (t.aoMap.value = n.aoMap, t.aoMapIntensity.value = n.aoMapIntensity), n.map ? i = n.map : n.specularMap ? i = n.specularMap : n.displacementMap ? i = n.displacementMap : n.normalMap ? i = n.normalMap : n.bumpMap ? i = n.bumpMap : n.roughnessMap ? i = n.roughnessMap : n.metalnessMap ? i = n.metalnessMap : n.alphaMap ? i = n.alphaMap : n.emissiveMap && (i = n.emissiveMap), void 0 !== i && (i.isWebGLRenderTarget && (i = i.texture), !0 === i.matrixAutoUpdate && i.updateMatrix(), t.uvTransform.value.copy(i.matrix)), n.aoMap ? o = n.aoMap : n.lightMap && (o = n.lightMap), void 0 !== o && (o.isWebGLRenderTarget && (o = o.texture), !0 === o.matrixAutoUpdate && o.updateMatrix(), t.uv2Transform.value.copy(o.matrix))
                }

                function n(e, t, n) {
                    e.roughness.value = t.roughness, e.metalness.value = t.metalness, t.roughnessMap && (e.roughnessMap.value = t.roughnessMap), t.metalnessMap && (e.metalnessMap.value = t.metalnessMap), t.emissiveMap && (e.emissiveMap.value = t.emissiveMap), t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, 1 === t.side && (e.bumpScale.value *= -1)), t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), 1 === t.side && e.normalScale.value.negate()), t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias), (t.envMap || n) && (e.envMapIntensity.value = t.envMapIntensity)
                }
                return {
                    refreshFogUniforms: function (e, t) {
                        e.fogColor.value.copy(t.color), t.isFog ? (e.fogNear.value = t.near, e.fogFar.value = t.far) : t.isFogExp2 && (e.fogDensity.value = t.density)
                    },
                    refreshMaterialUniforms: function (e, r, i, o, a) {
                        r.isMeshBasicMaterial ? t(e, r) : r.isMeshLambertMaterial ? (t(e, r), function (e, t) {
                            t.emissiveMap && (e.emissiveMap.value = t.emissiveMap)
                        }(e, r)) : r.isMeshToonMaterial ? (t(e, r), function (e, t) {
                            e.specular.value.copy(t.specular), e.shininess.value = Math.max(t.shininess, 1e-4), t.gradientMap && (e.gradientMap.value = t.gradientMap);
                            t.emissiveMap && (e.emissiveMap.value = t.emissiveMap);
                            t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, 1 === t.side && (e.bumpScale.value *= -1));
                            t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), 1 === t.side && e.normalScale.value.negate());
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }(e, r)) : r.isMeshPhongMaterial ? (t(e, r), function (e, t) {
                            e.specular.value.copy(t.specular), e.shininess.value = Math.max(t.shininess, 1e-4), t.emissiveMap && (e.emissiveMap.value = t.emissiveMap);
                            t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, 1 === t.side && (e.bumpScale.value *= -1));
                            t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), 1 === t.side && e.normalScale.value.negate());
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }(e, r)) : r.isMeshStandardMaterial ? (t(e, r, i), r.isMeshPhysicalMaterial ? function (e, t, r) {
                            n(e, t, r), e.reflectivity.value = t.reflectivity, e.clearcoat.value = t.clearcoat, e.clearcoatRoughness.value = t.clearcoatRoughness, t.sheen && e.sheen.value.copy(t.sheen);
                            t.clearcoatMap && (e.clearcoatMap.value = t.clearcoatMap);
                            t.clearcoatRoughnessMap && (e.clearcoatRoughnessMap.value = t.clearcoatRoughnessMap);
                            t.clearcoatNormalMap && (e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale), e.clearcoatNormalMap.value = t.clearcoatNormalMap, 1 === t.side && e.clearcoatNormalScale.value.negate());
                            e.transparency.value = t.transparency
                        }(e, r, i) : n(e, r, i)) : r.isMeshMatcapMaterial ? (t(e, r), function (e, t) {
                            t.matcap && (e.matcap.value = t.matcap);
                            t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, 1 === t.side && (e.bumpScale.value *= -1));
                            t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), 1 === t.side && e.normalScale.value.negate());
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }(e, r)) : r.isMeshDepthMaterial ? (t(e, r), function (e, t) {
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }(e, r)) : r.isMeshDistanceMaterial ? (t(e, r), function (e, t) {
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias);
                            e.referencePosition.value.copy(t.referencePosition), e.nearDistance.value = t.nearDistance, e.farDistance.value = t.farDistance
                        }(e, r)) : r.isMeshNormalMaterial ? (t(e, r), function (e, t) {
                            t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, 1 === t.side && (e.bumpScale.value *= -1));
                            t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), 1 === t.side && e.normalScale.value.negate());
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }(e, r)) : r.isLineBasicMaterial ? (function (e, t) {
                            e.diffuse.value.copy(t.color), e.opacity.value = t.opacity
                        }(e, r), r.isLineDashedMaterial && function (e, t) {
                            e.dashSize.value = t.dashSize, e.totalSize.value = t.dashSize + t.gapSize, e.scale.value = t.scale
                        }(e, r)) : r.isPointsMaterial ? function (e, t, n, r) {
                            e.diffuse.value.copy(t.color), e.opacity.value = t.opacity, e.size.value = t.size * n, e.scale.value = .5 * r, t.map && (e.map.value = t.map);
                            t.alphaMap && (e.alphaMap.value = t.alphaMap);
                            var i;
                            t.map ? i = t.map : t.alphaMap && (i = t.alphaMap);
                            void 0 !== i && (!0 === i.matrixAutoUpdate && i.updateMatrix(), e.uvTransform.value.copy(i.matrix))
                        }(e, r, o, a) : r.isSpriteMaterial ? function (e, t) {
                            e.diffuse.value.copy(t.color), e.opacity.value = t.opacity, e.rotation.value = t.rotation, t.map && (e.map.value = t.map);
                            t.alphaMap && (e.alphaMap.value = t.alphaMap);
                            var n;
                            t.map ? n = t.map : t.alphaMap && (n = t.alphaMap);
                            void 0 !== n && (!0 === n.matrixAutoUpdate && n.updateMatrix(), e.uvTransform.value.copy(n.matrix))
                        }(e, r) : r.isShadowMaterial ? (e.color.value.copy(r.color), e.opacity.value = r.opacity) : r.isShaderMaterial && (r.uniformsNeedUpdate = !1)
                    }
                }
            }

            function ei(e) {
                var t = void 0 !== (e = e || {}).canvas ? e.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
                    n = void 0 !== e.context ? e.context : null,
                    r = void 0 !== e.alpha && e.alpha,
                    i = void 0 === e.depth || e.depth,
                    o = void 0 === e.stencil || e.stencil,
                    a = void 0 !== e.antialias && e.antialias,
                    l = void 0 === e.premultipliedAlpha || e.premultipliedAlpha,
                    u = void 0 !== e.preserveDrawingBuffer && e.preserveDrawingBuffer,
                    h = void 0 !== e.powerPreference ? e.powerPreference : "default",
                    d = void 0 !== e.failIfMajorPerformanceCaveat && e.failIfMajorPerformanceCaveat,
                    f = null,
                    m = null;
                this.domElement = t, this.debug = {
                    checkShaderErrors: !0
                }, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.gammaFactor = 2, this.outputEncoding = 3e3, this.physicallyCorrectLights = !1, this.toneMapping = 0, this.toneMappingExposure = 1, this.toneMappingWhitePoint = 1, this.maxMorphTargets = 8, this.maxMorphNormals = 4;
                var g, v, y, x, b, w, M, T, S, E, j, L, C, P, O, R, D, N, I, k = this,
                    z = !1,
                    B = null,
                    F = 0,
                    U = 0,
                    H = null,
                    G = null,
                    V = -1,
                    W = {
                        geometry: null,
                        program: null,
                        wireframe: !1
                    },
                    X = null,
                    Y = null,
                    J = new p,
                    Z = new p,
                    Q = null,
                    $ = t.width,
                    K = t.height,
                    ee = 1,
                    te = null,
                    ne = null,
                    re = new p(0, 0, $, K),
                    ie = new p(0, 0, $, K),
                    oe = !1,
                    ae = new Yt,
                    se = new an,
                    ce = !1,
                    le = !1,
                    ue = new A,
                    he = new _;

                function de() {
                    return null === H ? ee : 1
                }
                try {
                    var pe = {
                        alpha: r,
                        depth: i,
                        stencil: o,
                        antialias: a,
                        premultipliedAlpha: l,
                        preserveDrawingBuffer: u,
                        powerPreference: h,
                        failIfMajorPerformanceCaveat: d
                    };
                    if (t.addEventListener("webglcontextlost", ve, !1), t.addEventListener("webglcontextrestored", ye, !1), null === (g = n || t.getContext("webgl", pe) || t.getContext("experimental-webgl", pe))) throw null !== t.getContext("webgl") ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
                    void 0 === g.getShaderPrecisionFormat && (g.getShaderPrecisionFormat = function () {
                        return {
                            rangeMin: 1,
                            rangeMax: 1,
                            precision: 1
                        }
                    })
                } catch (e) {
                    throw console.error("THREE.WebGLRenderer: " + e.message), e
                }

                function fe() {
                    v = new sn(g), !1 === (y = new on(g, v, e)).isWebGL2 && (v.get("WEBGL_depth_texture"), v.get("OES_texture_float"), v.get("OES_texture_half_float"), v.get("OES_texture_half_float_linear"), v.get("OES_standard_derivatives"), v.get("OES_element_index_uint"), v.get("ANGLE_instanced_arrays")), v.get("OES_texture_float_linear"), I = new Yr(g, v, y), (x = new qr(g, v, y)).scissor(Z.copy(ie).multiplyScalar(ee).floor()), x.viewport(J.copy(re).multiplyScalar(ee).floor()), b = new un(g), w = new Or, M = new Xr(g, v, x, w, y, I, b), T = new Qt(g, y), S = new cn(g, T, b), E = new pn(g, S, T, b), R = new dn(g), j = new Pr(k, v, y), L = new Kr(w), C = new Ir, P = new Hr, O = new nn(k, x, E, l), D = new rn(g, v, b, y), N = new ln(g, v, b, y), b.programs = j.programs, k.capabilities = y, k.extensions = v, k.properties = w, k.renderLists = C, k.state = x, k.info = b
                }
                fe();
                var me = new $r(k, g);
                this.xr = me;
                var ge = new Wr(k, E, y.maxTextureSize);

                function ve(e) {
                    e.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), z = !0
                }

                function ye() {
                    console.log("THREE.WebGLRenderer: Context Restored."), z = !1, fe()
                }

                function _e(e) {
                    var t = e.target;
                    t.removeEventListener("dispose", _e),
                        function (e) {
                            xe(e), w.remove(e)
                        }(t)
                }

                function xe(e) {
                    var t = w.get(e).program;
                    e.program = void 0, void 0 !== t && j.releaseProgram(t)
                }
                this.shadowMap = ge, this.getContext = function () {
                    return g
                }, this.getContextAttributes = function () {
                    return g.getContextAttributes()
                }, this.forceContextLoss = function () {
                    var e = v.get("WEBGL_lose_context");
                    e && e.loseContext()
                }, this.forceContextRestore = function () {
                    var e = v.get("WEBGL_lose_context");
                    e && e.restoreContext()
                }, this.getPixelRatio = function () {
                    return ee
                }, this.setPixelRatio = function (e) {
                    void 0 !== e && (ee = e, this.setSize($, K, !1))
                }, this.getSize = function (e) {
                    return void 0 === e && (console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"), e = new c), e.set($, K)
                }, this.setSize = function (e, n, r) {
                    me.isPresenting ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : ($ = e, K = n, t.width = Math.floor(e * ee), t.height = Math.floor(n * ee), !1 !== r && (t.style.width = e + "px", t.style.height = n + "px"), this.setViewport(0, 0, e, n))
                }, this.getDrawingBufferSize = function (e) {
                    return void 0 === e && (console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"), e = new c), e.set($ * ee, K * ee).floor()
                }, this.setDrawingBufferSize = function (e, n, r) {
                    $ = e, K = n, ee = r, t.width = Math.floor(e * r), t.height = Math.floor(n * r), this.setViewport(0, 0, e, n)
                }, this.getCurrentViewport = function (e) {
                    return void 0 === e && (console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"), e = new p), e.copy(J)
                }, this.getViewport = function (e) {
                    return e.copy(re)
                }, this.setViewport = function (e, t, n, r) {
                    e.isVector4 ? re.set(e.x, e.y, e.z, e.w) : re.set(e, t, n, r), x.viewport(J.copy(re).multiplyScalar(ee).floor())
                }, this.getScissor = function (e) {
                    return e.copy(ie)
                }, this.setScissor = function (e, t, n, r) {
                    e.isVector4 ? ie.set(e.x, e.y, e.z, e.w) : ie.set(e, t, n, r), x.scissor(Z.copy(ie).multiplyScalar(ee).floor())
                }, this.getScissorTest = function () {
                    return oe
                }, this.setScissorTest = function (e) {
                    x.setScissorTest(oe = e)
                }, this.setOpaqueSort = function (e) {
                    te = e
                }, this.setTransparentSort = function (e) {
                    ne = e
                }, this.getClearColor = function () {
                    return O.getClearColor()
                }, this.setClearColor = function () {
                    O.setClearColor.apply(O, arguments)
                }, this.getClearAlpha = function () {
                    return O.getClearAlpha()
                }, this.setClearAlpha = function () {
                    O.setClearAlpha.apply(O, arguments)
                }, this.clear = function (e, t, n) {
                    var r = 0;
                    (void 0 === e || e) && (r |= 16384), (void 0 === t || t) && (r |= 256), (void 0 === n || n) && (r |= 1024), g.clear(r)
                }, this.clearColor = function () {
                    this.clear(!0, !1, !1)
                }, this.clearDepth = function () {
                    this.clear(!1, !0, !1)
                }, this.clearStencil = function () {
                    this.clear(!1, !1, !0)
                }, this.dispose = function () {
                    t.removeEventListener("webglcontextlost", ve, !1), t.removeEventListener("webglcontextrestored", ye, !1), C.dispose(), P.dispose(), w.dispose(), E.dispose(), me.dispose(), Me.stop()
                }, this.renderBufferImmediate = function (e, t) {
                    x.initAttributes();
                    var n = w.get(e);
                    e.hasPositions && !n.position && (n.position = g.createBuffer()), e.hasNormals && !n.normal && (n.normal = g.createBuffer()), e.hasUvs && !n.uv && (n.uv = g.createBuffer()), e.hasColors && !n.color && (n.color = g.createBuffer());
                    var r = t.getAttributes();
                    e.hasPositions && (g.bindBuffer(34962, n.position), g.bufferData(34962, e.positionArray, 35048), x.enableAttribute(r.position), g.vertexAttribPointer(r.position, 3, 5126, !1, 0, 0)), e.hasNormals && (g.bindBuffer(34962, n.normal), g.bufferData(34962, e.normalArray, 35048), x.enableAttribute(r.normal), g.vertexAttribPointer(r.normal, 3, 5126, !1, 0, 0)), e.hasUvs && (g.bindBuffer(34962, n.uv), g.bufferData(34962, e.uvArray, 35048), x.enableAttribute(r.uv), g.vertexAttribPointer(r.uv, 2, 5126, !1, 0, 0)), e.hasColors && (g.bindBuffer(34962, n.color), g.bufferData(34962, e.colorArray, 35048), x.enableAttribute(r.color), g.vertexAttribPointer(r.color, 3, 5126, !1, 0, 0)), x.disableUnusedAttributes(), g.drawArrays(4, 0, e.count), e.count = 0
                };
                var be = new q;
                this.renderBufferDirect = function (e, t, n, r, i, o) {
                    null === t && (t = be);
                    var a = i.isMesh && i.matrixWorld.determinant() < 0,
                        s = je(e, t, r, i);
                    x.setMaterial(r, a);
                    var c = !1;
                    W.geometry === n.id && W.program === s.id && W.wireframe === (!0 === r.wireframe) || (W.geometry = n.id, W.program = s.id, W.wireframe = !0 === r.wireframe, c = !0), (r.morphTargets || r.morphNormals) && (R.update(i, n, r, s), c = !0), !0 === i.isInstancedMesh && (c = !0);
                    var l = n.index,
                        u = n.attributes.position;
                    if (null === l) {
                        if (void 0 === u || 0 === u.count) return
                    } else if (0 === l.count) return;
                    var h, d = 1;
                    !0 === r.wireframe && (l = S.getWireframeAttribute(n), d = 2);
                    var p = D;
                    null !== l && (h = T.get(l), (p = N).setIndex(h)), c && (! function (e, t, n, r) {
                        if (!1 === y.isWebGL2 && (e.isInstancedMesh || t.isInstancedBufferGeometry) && null === v.get("ANGLE_instanced_arrays")) return;
                        x.initAttributes();
                        var i = t.attributes,
                            o = r.getAttributes(),
                            a = n.defaultAttributeValues;
                        for (var s in o) {
                            var c = o[s];
                            if (c >= 0) {
                                var l = i[s];
                                if (void 0 !== l) {
                                    var u = l.normalized,
                                        h = l.itemSize;
                                    if (void 0 === (w = T.get(l))) continue;
                                    var d = w.buffer,
                                        p = w.type,
                                        f = w.bytesPerElement;
                                    if (l.isInterleavedBufferAttribute) {
                                        var m = l.data,
                                            _ = m.stride,
                                            b = l.offset;
                                        m && m.isInstancedInterleavedBuffer ? (x.enableAttributeAndDivisor(c, m.meshPerAttribute), void 0 === t._maxInstanceCount && (t._maxInstanceCount = m.meshPerAttribute * m.count)) : x.enableAttribute(c), g.bindBuffer(34962, d), x.vertexAttribPointer(c, h, p, u, _ * f, b * f)
                                    } else l.isInstancedBufferAttribute ? (x.enableAttributeAndDivisor(c, l.meshPerAttribute), void 0 === t._maxInstanceCount && (t._maxInstanceCount = l.meshPerAttribute * l.count)) : x.enableAttribute(c), g.bindBuffer(34962, d), x.vertexAttribPointer(c, h, p, u, 0, 0)
                                } else if ("instanceMatrix" === s) {
                                    var w;
                                    if (void 0 === (w = T.get(e.instanceMatrix))) continue;
                                    d = w.buffer, p = w.type;
                                    x.enableAttributeAndDivisor(c + 0, 1), x.enableAttributeAndDivisor(c + 1, 1), x.enableAttributeAndDivisor(c + 2, 1), x.enableAttributeAndDivisor(c + 3, 1), g.bindBuffer(34962, d), g.vertexAttribPointer(c + 0, 4, p, !1, 64, 0), g.vertexAttribPointer(c + 1, 4, p, !1, 64, 16), g.vertexAttribPointer(c + 2, 4, p, !1, 64, 32), g.vertexAttribPointer(c + 3, 4, p, !1, 64, 48)
                                } else if (void 0 !== a) {
                                    var M = a[s];
                                    if (void 0 !== M) switch (M.length) {
                                        case 2:
                                            g.vertexAttrib2fv(c, M);
                                            break;
                                        case 3:
                                            g.vertexAttrib3fv(c, M);
                                            break;
                                        case 4:
                                            g.vertexAttrib4fv(c, M);
                                            break;
                                        default:
                                            g.vertexAttrib1fv(c, M)
                                    }
                                }
                            }
                        }
                        x.disableUnusedAttributes()
                    }(i, n, r, s), null !== l && g.bindBuffer(34963, h.buffer));
                    var f = null !== l ? l.count : u.count,
                        m = n.drawRange.start * d,
                        _ = n.drawRange.count * d,
                        b = null !== o ? o.start * d : 0,
                        w = null !== o ? o.count * d : 1 / 0,
                        M = Math.max(m, b),
                        E = Math.min(f, m + _, b + w) - 1,
                        A = Math.max(0, E - M + 1);
                    if (0 !== A) {
                        if (i.isMesh) !0 === r.wireframe ? (x.setLineWidth(r.wireframeLinewidth * de()), p.setMode(1)) : p.setMode(4);
                        else if (i.isLine) {
                            var j = r.linewidth;
                            void 0 === j && (j = 1), x.setLineWidth(j * de()), i.isLineSegments ? p.setMode(1) : i.isLineLoop ? p.setMode(2) : p.setMode(3)
                        } else i.isPoints ? p.setMode(0) : i.isSprite && p.setMode(4);
                        if (i.isInstancedMesh) p.renderInstances(n, M, A, i.count);
                        else if (n.isInstancedBufferGeometry) {
                            var L = Math.min(n.instanceCount, n._maxInstanceCount);
                            p.renderInstances(n, M, A, L)
                        } else p.render(M, A)
                    }
                }, this.compile = function (e, t) {
                    (m = P.get(e, t)).init(), e.traverse((function (e) {
                        e.isLight && (m.pushLight(e), e.castShadow && m.pushShadow(e))
                    })), m.setupLights(t);
                    const n = {};
                    e.traverse((function (t) {
                        let r = t.material;
                        if (r)
                            if (Array.isArray(r))
                                for (let i = 0; i < r.length; i++) {
                                    let o = r[i];
                                    o.uuid in n == !1 && (Ae(o, e, t), n[o.uuid] = !0)
                                } else r.uuid in n == !1 && (Ae(r, e, t), n[r.uuid] = !0)
                    }))
                };
                var we = null;
                var Me = new Zt;

                function Te(e, t, n, r) {
                    if (!1 !== e.visible) {
                        if (e.layers.test(t.layers))
                            if (e.isGroup) n = e.renderOrder;
                            else if (e.isLOD) !0 === e.autoUpdate && e.update(t);
                        else if (e.isLight) m.pushLight(e), e.castShadow && m.pushShadow(e);
                        else if (e.isSprite) {
                            if (!e.frustumCulled || ae.intersectsSprite(e)) {
                                r && he.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ue);
                                var i = E.update(e);
                                (o = e.material).visible && f.push(e, i, o, n, he.z, null)
                            }
                        } else if (e.isImmediateRenderObject) r && he.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ue), f.push(e, null, e.material, n, he.z, null);
                        else if ((e.isMesh || e.isLine || e.isPoints) && (e.isSkinnedMesh && e.skeleton.frame !== b.render.frame && (e.skeleton.update(), e.skeleton.frame = b.render.frame), !e.frustumCulled || ae.intersectsObject(e))) {
                            r && he.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ue);
                            i = E.update(e);
                            var o = e.material;
                            if (Array.isArray(o))
                                for (var a = i.groups, s = 0, c = a.length; s < c; s++) {
                                    var l = a[s],
                                        u = o[l.materialIndex];
                                    u && u.visible && f.push(e, i, u, n, he.z, l)
                                } else o.visible && f.push(e, i, o, n, he.z, null)
                        }
                        var h = e.children;
                        for (s = 0, c = h.length; s < c; s++) Te(h[s], t, n, r)
                    }
                }

                function Se(e, t, n, r) {
                    for (var i = 0, o = e.length; i < o; i++) {
                        var a = e[i],
                            s = a.object,
                            c = a.geometry,
                            l = void 0 === r ? a.material : r,
                            u = a.group;
                        if (n.isArrayCamera) {
                            Y = n;
                            for (var h = n.cameras, d = 0, p = h.length; d < p; d++) {
                                var f = h[d];
                                s.layers.test(f.layers) && (x.viewport(J.copy(f.viewport)), m.setupLights(f), Ee(s, t, f, c, l, u))
                            }
                        } else Y = null, Ee(s, t, n, c, l, u)
                    }
                }

                function Ee(e, t, n, r, i, o) {
                    if (e.onBeforeRender(k, t, n, r, i, o), m = P.get(t, Y || n), e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, e.matrixWorld), e.normalMatrix.getNormalMatrix(e.modelViewMatrix), e.isImmediateRenderObject) {
                        var a = je(n, t, i, e);
                        x.setMaterial(i), W.geometry = null, W.program = null, W.wireframe = !1,
                            function (e, t) {
                                e.render((function (e) {
                                    k.renderBufferImmediate(e, t)
                                }))
                            }(e, a)
                    } else k.renderBufferDirect(n, t, r, i, e, o);
                    e.onAfterRender(k, t, n, r, i, o), m = P.get(t, Y || n)
                }

                function Ae(e, t, n) {
                    var r = w.get(e),
                        i = m.state.lights,
                        o = m.state.shadowsArray,
                        a = i.state.version,
                        s = j.getParameters(e, i.state, o, t, se.numPlanes, se.numIntersection, n),
                        c = j.getProgramCacheKey(s),
                        l = r.program,
                        u = !0;
                    if (void 0 === l) e.addEventListener("dispose", _e);
                    else if (l.cacheKey !== c) xe(e);
                    else if (r.lightsStateVersion !== a) r.lightsStateVersion = a, u = !1;
                    else {
                        if (void 0 !== s.shaderID) return;
                        u = !1
                    }
                    u && (l = j.acquireProgram(s, c), r.program = l, r.uniforms = s.uniforms, r.outputEncoding = s.outputEncoding, e.program = l);
                    var h = l.getAttributes();
                    if (e.morphTargets) {
                        e.numSupportedMorphTargets = 0;
                        for (var d = 0; d < k.maxMorphTargets; d++) h["morphTarget" + d] >= 0 && e.numSupportedMorphTargets++
                    }
                    if (e.morphNormals) {
                        e.numSupportedMorphNormals = 0;
                        for (d = 0; d < k.maxMorphNormals; d++) h["morphNormal" + d] >= 0 && e.numSupportedMorphNormals++
                    }
                    var p = r.uniforms;
                    (e.isShaderMaterial || e.isRawShaderMaterial) && !0 !== e.clipping || (r.numClippingPlanes = se.numPlanes, r.numIntersection = se.numIntersection, p.clippingPlanes = se.uniform), r.environment = e.isMeshStandardMaterial ? t.environment : null, r.fog = t.fog, r.needsLights = function (e) {
                        return e.isMeshLambertMaterial || e.isMeshToonMaterial || e.isMeshPhongMaterial || e.isMeshStandardMaterial || e.isShadowMaterial || e.isShaderMaterial && !0 === e.lights
                    }(e), r.lightsStateVersion = a, r.needsLights && (p.ambientLightColor.value = i.state.ambient, p.lightProbe.value = i.state.probe, p.directionalLights.value = i.state.directional, p.directionalLightShadows.value = i.state.directionalShadow, p.spotLights.value = i.state.spot, p.spotLightShadows.value = i.state.spotShadow, p.rectAreaLights.value = i.state.rectArea, p.pointLights.value = i.state.point, p.pointLightShadows.value = i.state.pointShadow, p.hemisphereLights.value = i.state.hemi, p.directionalShadowMap.value = i.state.directionalShadowMap, p.directionalShadowMatrix.value = i.state.directionalShadowMatrix, p.spotShadowMap.value = i.state.spotShadowMap, p.spotShadowMatrix.value = i.state.spotShadowMatrix, p.pointShadowMap.value = i.state.pointShadowMap, p.pointShadowMatrix.value = i.state.pointShadowMatrix);
                    var f = r.program.getUniforms(),
                        g = hr.seqWithValue(f.seq, p);
                    r.uniformsList = g
                }

                function je(e, t, n, r) {
                    M.resetTextureUnits();
                    var i = t.fog,
                        o = n.isMeshStandardMaterial ? t.environment : null,
                        a = null === H ? k.outputEncoding : H.texture.encoding,
                        c = w.get(n),
                        l = m.state.lights;
                    if (ce && (le || e !== X)) {
                        var u = e === X && n.id === V;
                        se.setState(n.clippingPlanes, n.clipIntersection, n.clipShadows, e, c, u)
                    }
                    n.version === c.__version ? void 0 === c.program || n.fog && c.fog !== i || c.environment !== o || c.needsLights && c.lightsStateVersion !== l.state.version ? Ae(n, t, r) : void 0 === c.numClippingPlanes || c.numClippingPlanes === se.numPlanes && c.numIntersection === se.numIntersection ? c.outputEncoding !== a && Ae(n, t, r) : Ae(n, t, r) : (Ae(n, t, r), c.__version = n.version);
                    var h, d, p = !1,
                        f = !1,
                        v = !1,
                        _ = c.program,
                        b = _.getUniforms(),
                        T = c.uniforms;
                    if (x.useProgram(_.program) && (p = !0, f = !0, v = !0), n.id !== V && (V = n.id, f = !0), p || X !== e) {
                        if (b.setValue(g, "projectionMatrix", e.projectionMatrix), y.logarithmicDepthBuffer && b.setValue(g, "logDepthBufFC", 2 / (Math.log(e.far + 1) / Math.LN2)), X !== e && (X = e, f = !0, v = !0), n.isShaderMaterial || n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshStandardMaterial || n.envMap) {
                            var S = b.map.cameraPosition;
                            void 0 !== S && S.setValue(g, he.setFromMatrixPosition(e.matrixWorld))
                        }(n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial) && b.setValue(g, "isOrthographic", !0 === e.isOrthographicCamera), (n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial || n.skinning) && b.setValue(g, "viewMatrix", e.matrixWorldInverse)
                    }
                    if (n.skinning) {
                        b.setOptional(g, r, "bindMatrix"), b.setOptional(g, r, "bindMatrixInverse");
                        var E = r.skeleton;
                        if (E) {
                            var A = E.bones;
                            if (y.floatVertexTextures) {
                                if (void 0 === E.boneTexture) {
                                    var j = Math.sqrt(4 * A.length);
                                    j = s.ceilPowerOfTwo(j), j = Math.max(j, 4);
                                    var C = new Float32Array(j * j * 4);
                                    C.set(E.boneMatrices);
                                    var P = new Wt(C, j, j, 1023, 1015);
                                    E.boneMatrices = C, E.boneTexture = P, E.boneTextureSize = j
                                }
                                b.setValue(g, "boneTexture", E.boneTexture, M), b.setValue(g, "boneTextureSize", E.boneTextureSize)
                            } else b.setOptional(g, E, "boneMatrices")
                        }
                    }
                    return (f || c.receiveShadow !== r.receiveShadow) && (c.receiveShadow = r.receiveShadow, b.setValue(g, "receiveShadow", r.receiveShadow)), f && (b.setValue(g, "toneMappingExposure", k.toneMappingExposure), b.setValue(g, "toneMappingWhitePoint", k.toneMappingWhitePoint), c.needsLights && (d = v, (h = T).ambientLightColor.needsUpdate = d, h.lightProbe.needsUpdate = d, h.directionalLights.needsUpdate = d, h.directionalLightShadows.needsUpdate = d, h.pointLights.needsUpdate = d, h.pointLightShadows.needsUpdate = d, h.spotLights.needsUpdate = d, h.spotLightShadows.needsUpdate = d, h.rectAreaLights.needsUpdate = d, h.hemisphereLights.needsUpdate = d), i && n.fog && L.refreshFogUniforms(T, i), L.refreshMaterialUniforms(T, n, o, ee, K), void 0 !== T.ltc_1 && (T.ltc_1.value = Jt.LTC_1), void 0 !== T.ltc_2 && (T.ltc_2.value = Jt.LTC_2), hr.upload(g, c.uniformsList, T, M)), n.isShaderMaterial && !0 === n.uniformsNeedUpdate && (hr.upload(g, c.uniformsList, T, M), n.uniformsNeedUpdate = !1), n.isSpriteMaterial && b.setValue(g, "center", r.center), b.setValue(g, "modelViewMatrix", r.modelViewMatrix), b.setValue(g, "normalMatrix", r.normalMatrix), b.setValue(g, "modelMatrix", r.matrixWorld), _
                }
                Me.setAnimationLoop((function (e) {
                    me.isPresenting || we && we(e)
                })), "undefined" != typeof window && Me.setContext(window), this.setAnimationLoop = function (e) {
                    we = e, me.setAnimationLoop(e), Me.start()
                }, this.render = function (e, t) {
                    var n, r;
                    if (void 0 !== arguments[2] && (console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."), n = arguments[2]), void 0 !== arguments[3] && (console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."), r = arguments[3]), t && t.isCamera) {
                        if (!z) {
                            W.geometry = null, W.program = null, W.wireframe = !1, V = -1, X = null, !0 === e.autoUpdate && e.updateMatrixWorld(), null === t.parent && t.updateMatrixWorld(), me.enabled && me.isPresenting && (t = me.getCamera(t)), e.onBeforeRender(k, e, t, n || H), (m = P.get(e, t)).init(), ue.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), ae.setFromProjectionMatrix(ue), le = this.localClippingEnabled, ce = se.init(this.clippingPlanes, le, t), (f = C.get(e, t)).init(), Te(e, t, 0, k.sortObjects), f.finish(), !0 === k.sortObjects && f.sort(te, ne), ce && se.beginShadows();
                            var i = m.state.shadowsArray;
                            ge.render(i, e, t), m.setupLights(t), ce && se.endShadows(), this.info.autoReset && this.info.reset(), void 0 !== n && this.setRenderTarget(n), O.render(f, e, t, r);
                            var o = f.opaque,
                                a = f.transparent;
                            if (e.overrideMaterial) {
                                var s = e.overrideMaterial;
                                o.length && Se(o, e, t, s), a.length && Se(a, e, t, s)
                            } else o.length && Se(o, e, t), a.length && Se(a, e, t);
                            e.onAfterRender(k, e, t), null !== H && (M.updateRenderTargetMipmap(H), M.updateMultisampleRenderTarget(H)), x.buffers.depth.setTest(!0), x.buffers.depth.setMask(!0), x.buffers.color.setMask(!0), x.setPolygonOffset(!1), f = null, m = null
                        }
                    } else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")
                }, this.setFramebuffer = function (e) {
                    B !== e && null === H && g.bindFramebuffer(36160, e), B = e
                }, this.getActiveCubeFace = function () {
                    return F
                }, this.getActiveMipmapLevel = function () {
                    return U
                }, this.getRenderTarget = function () {
                    return H
                }, this.setRenderTarget = function (e, t, n) {
                    H = e, F = t, U = n, e && void 0 === w.get(e).__webglFramebuffer && M.setupRenderTarget(e);
                    var r = B,
                        i = !1;
                    if (e) {
                        var o = w.get(e).__webglFramebuffer;
                        e.isWebGLCubeRenderTarget ? (r = o[t || 0], i = !0) : r = e.isWebGLMultisampleRenderTarget ? w.get(e).__webglMultisampledFramebuffer : o, J.copy(e.viewport), Z.copy(e.scissor), Q = e.scissorTest
                    } else J.copy(re).multiplyScalar(ee).floor(), Z.copy(ie).multiplyScalar(ee).floor(), Q = oe;
                    if (G !== r && (g.bindFramebuffer(36160, r), G = r), x.viewport(J), x.scissor(Z), x.setScissorTest(Q), i) {
                        var a = w.get(e.texture);
                        g.framebufferTexture2D(36160, 36064, 34069 + (t || 0), a.__webglTexture, n || 0)
                    }
                }, this.readRenderTargetPixels = function (e, t, n, r, i, o, a) {
                    if (e && e.isWebGLRenderTarget) {
                        var s = w.get(e).__webglFramebuffer;
                        if (e.isWebGLCubeRenderTarget && void 0 !== a && (s = s[a]), s) {
                            var c = !1;
                            s !== G && (g.bindFramebuffer(36160, s), c = !0);
                            try {
                                var l = e.texture,
                                    u = l.format,
                                    h = l.type;
                                if (1023 !== u && I.convert(u) !== g.getParameter(35739)) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                                if (!(1009 === h || I.convert(h) === g.getParameter(35738) || 1015 === h && (y.isWebGL2 || v.get("OES_texture_float") || v.get("WEBGL_color_buffer_float")) || 1016 === h && (y.isWebGL2 ? v.get("EXT_color_buffer_float") : v.get("EXT_color_buffer_half_float")))) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                                36053 === g.checkFramebufferStatus(36160) ? t >= 0 && t <= e.width - r && n >= 0 && n <= e.height - i && g.readPixels(t, n, r, i, I.convert(u), I.convert(h), o) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")
                            } finally {
                                c && g.bindFramebuffer(36160, G)
                            }
                        }
                    } else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")
                }, this.copyFramebufferToTexture = function (e, t, n) {
                    void 0 === n && (n = 0);
                    var r = Math.pow(2, -n),
                        i = Math.floor(t.image.width * r),
                        o = Math.floor(t.image.height * r),
                        a = I.convert(t.format);
                    M.setTexture2D(t, 0), g.copyTexImage2D(3553, n, a, e.x, e.y, i, o, 0), x.unbindTexture()
                }, this.copyTextureToTexture = function (e, t, n, r) {
                    void 0 === r && (r = 0);
                    var i = t.image.width,
                        o = t.image.height,
                        a = I.convert(n.format),
                        s = I.convert(n.type);
                    M.setTexture2D(n, 0), t.isDataTexture ? g.texSubImage2D(3553, r, e.x, e.y, i, o, a, s, t.image.data) : t.isCompressedTexture ? g.compressedTexSubImage2D(3553, r, e.x, e.y, t.mipmaps[0].width, t.mipmaps[0].height, a, t.mipmaps[0].data) : g.texSubImage2D(3553, r, e.x, e.y, a, s, t.image), 0 === r && n.generateMipmaps && g.generateMipmap(3553), x.unbindTexture()
                }, this.initTexture = function (e) {
                    M.setTexture2D(e, 0), x.unbindTexture()
                }, "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
                    detail: this
                }))
            }

            function ti(e, t) {
                this.name = "", this.color = new Ie(e), this.density = void 0 !== t ? t : 25e-5
            }

            function ni(e, t, n) {
                this.name = "", this.color = new Ie(e), this.near = void 0 !== t ? t : 1, this.far = void 0 !== n ? n : 1e3
            }

            function ri(e, t) {
                this.array = e, this.stride = t, this.count = void 0 !== e ? e.length / t : 0, this.usage = 35044, this.updateRange = {
                    offset: 0,
                    count: -1
                }, this.version = 0
            }
            Jr.prototype = Object.assign(Object.create(Ht.prototype), {
                constructor: Jr,
                isArrayCamera: !0
            }), Zr.prototype = Object.assign(Object.create(W.prototype), {
                constructor: Zr,
                isGroup: !0
            }), Object.assign(Qr.prototype, {
                constructor: Qr,
                getTargetRaySpace: function () {
                    return null === this._targetRay && (this._targetRay = new Zr, this._targetRay.matrixAutoUpdate = !1, this._targetRay.visible = !1), this._targetRay
                },
                getGripSpace: function () {
                    return null === this._grip && (this._grip = new Zr, this._grip.matrixAutoUpdate = !1, this._grip.visible = !1), this._grip
                },
                dispatchEvent: function (e) {
                    return null !== this._targetRay && this._targetRay.dispatchEvent(e), null !== this._grip && this._grip.dispatchEvent(e), this
                },
                disconnect: function (e) {
                    return this.dispatchEvent({
                        type: "disconnected",
                        data: e
                    }), null !== this._targetRay && (this._targetRay.visible = !1), null !== this._grip && (this._grip.visible = !1), this
                },
                update: function (e, t, n) {
                    var r = null,
                        i = null,
                        o = this._targetRay,
                        a = this._grip;
                    return e && (null !== o && null !== (r = t.getPose(e.targetRaySpace, n)) && (o.matrix.fromArray(r.transform.matrix), o.matrix.decompose(o.position, o.rotation, o.scale)), null !== a && e.gripSpace && null !== (i = t.getPose(e.gripSpace, n)) && (a.matrix.fromArray(i.transform.matrix), a.matrix.decompose(a.position, a.rotation, a.scale))), null !== o && (o.visible = null !== r), null !== a && (a.visible = null !== i), this
                }
            }), Object.assign($r.prototype, r.prototype), Object.assign(ti.prototype, {
                isFogExp2: !0,
                clone: function () {
                    return new ti(this.color, this.density)
                },
                toJSON: function () {
                    return {
                        type: "FogExp2",
                        color: this.color.getHex(),
                        density: this.density
                    }
                }
            }), Object.assign(ni.prototype, {
                isFog: !0,
                clone: function () {
                    return new ni(this.color, this.near, this.far)
                },
                toJSON: function () {
                    return {
                        type: "Fog",
                        color: this.color.getHex(),
                        near: this.near,
                        far: this.far
                    }
                }
            }), Object.defineProperty(ri.prototype, "needsUpdate", {
                set: function (e) {
                    !0 === e && this.version++
                }
            }), Object.assign(ri.prototype, {
                isInterleavedBuffer: !0,
                onUploadCallback: function () {},
                setUsage: function (e) {
                    return this.usage = e, this
                },
                copy: function (e) {
                    return this.array = new e.array.constructor(e.array), this.count = e.count, this.stride = e.stride, this.usage = e.usage, this
                },
                copyAt: function (e, t, n) {
                    e *= this.stride, n *= t.stride;
                    for (var r = 0, i = this.stride; r < i; r++) this.array[e + r] = t.array[n + r];
                    return this
                },
                set: function (e, t) {
                    return void 0 === t && (t = 0), this.array.set(e, t), this
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                onUpload: function (e) {
                    return this.onUploadCallback = e, this
                }
            });
            var ii, oi = new _;

            function ai(e, t, n, r) {
                this.name = "", this.data = e, this.itemSize = t, this.offset = n, this.normalized = !0 === r
            }

            function si(e) {
                He.call(this), this.type = "SpriteMaterial", this.color = new Ie(16777215), this.map = null, this.alphaMap = null, this.rotation = 0, this.sizeAttenuation = !0, this.transparent = !0, this.setValues(e)
            }
            Object.defineProperties(ai.prototype, {
                count: {
                    get: function () {
                        return this.data.count
                    }
                },
                array: {
                    get: function () {
                        return this.data.array
                    }
                }
            }), Object.assign(ai.prototype, {
                isInterleavedBufferAttribute: !0,
                applyMatrix4: function (e) {
                    for (var t = 0, n = this.data.count; t < n; t++) oi.x = this.getX(t), oi.y = this.getY(t), oi.z = this.getZ(t), oi.applyMatrix4(e), this.setXYZ(t, oi.x, oi.y, oi.z);
                    return this
                },
                setX: function (e, t) {
                    return this.data.array[e * this.data.stride + this.offset] = t, this
                },
                setY: function (e, t) {
                    return this.data.array[e * this.data.stride + this.offset + 1] = t, this
                },
                setZ: function (e, t) {
                    return this.data.array[e * this.data.stride + this.offset + 2] = t, this
                },
                setW: function (e, t) {
                    return this.data.array[e * this.data.stride + this.offset + 3] = t, this
                },
                getX: function (e) {
                    return this.data.array[e * this.data.stride + this.offset]
                },
                getY: function (e) {
                    return this.data.array[e * this.data.stride + this.offset + 1]
                },
                getZ: function (e) {
                    return this.data.array[e * this.data.stride + this.offset + 2]
                },
                getW: function (e) {
                    return this.data.array[e * this.data.stride + this.offset + 3]
                },
                setXY: function (e, t, n) {
                    return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this
                },
                setXYZ: function (e, t, n, r) {
                    return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = r, this
                },
                setXYZW: function (e, t, n, r, i) {
                    return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = r, this.data.array[e + 3] = i, this
                },
                clone: function () {
                    console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");
                    for (var e = [], t = 0; t < this.count; t++)
                        for (var n = t * this.data.stride + this.offset, r = 0; r < this.itemSize; r++) e.push(this.data.array[n + r]);
                    return new We(new this.array.constructor(e), this.itemSize, this.normalized)
                },
                toJSON: function () {
                    console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");
                    for (var e = [], t = 0; t < this.count; t++)
                        for (var n = t * this.data.stride + this.offset, r = 0; r < this.itemSize; r++) e.push(this.data.array[n + r]);
                    return {
                        itemSize: this.itemSize,
                        type: this.array.constructor.name,
                        array: e,
                        normalized: this.normalized
                    }
                }
            }), si.prototype = Object.create(He.prototype), si.prototype.constructor = si, si.prototype.isSpriteMaterial = !0, si.prototype.copy = function (e) {
                return He.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.rotation = e.rotation, this.sizeAttenuation = e.sizeAttenuation, this
            };
            var ci = new _,
                li = new _,
                ui = new _,
                hi = new c,
                di = new c,
                pi = new A,
                fi = new _,
                mi = new _,
                gi = new _,
                vi = new c,
                yi = new c,
                _i = new c;

            function xi(e) {
                if (W.call(this), this.type = "Sprite", void 0 === ii) {
                    ii = new ut;
                    var t = new ri(new Float32Array([-.5, -.5, 0, 0, 0, .5, -.5, 0, 1, 0, .5, .5, 0, 1, 1, -.5, .5, 0, 0, 1]), 5);
                    ii.setIndex([0, 1, 2, 0, 2, 3]), ii.setAttribute("position", new ai(t, 3, 0, !1)), ii.setAttribute("uv", new ai(t, 2, 3, !1))
                }
                this.geometry = ii, this.material = void 0 !== e ? e : new si, this.center = new c(.5, .5)
            }

            function bi(e, t, n, r, i, o) {
                hi.subVectors(e, n).addScalar(.5).multiply(r), void 0 !== i ? (di.x = o * hi.x - i * hi.y, di.y = i * hi.x + o * hi.y) : di.copy(hi), e.copy(t), e.x += di.x, e.y += di.y, e.applyMatrix4(pi)
            }
            xi.prototype = Object.assign(Object.create(W.prototype), {
                constructor: xi,
                isSprite: !0,
                raycast: function (e, t) {
                    null === e.camera && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'), li.setFromMatrixScale(this.matrixWorld), pi.copy(e.camera.matrixWorld), this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld), ui.setFromMatrixPosition(this.modelViewMatrix), e.camera.isPerspectiveCamera && !1 === this.material.sizeAttenuation && li.multiplyScalar(-ui.z);
                    var n, r, i = this.material.rotation;
                    0 !== i && (r = Math.cos(i), n = Math.sin(i));
                    var o = this.center;
                    bi(fi.set(-.5, -.5, 0), ui, o, li, n, r), bi(mi.set(.5, -.5, 0), ui, o, li, n, r), bi(gi.set(.5, .5, 0), ui, o, li, n, r), vi.set(0, 0), yi.set(1, 0), _i.set(1, 1);
                    var a = e.ray.intersectTriangle(fi, mi, gi, !1, ci);
                    if (null !== a || (bi(mi.set(-.5, .5, 0), ui, o, li, n, r), yi.set(0, 1), null !== (a = e.ray.intersectTriangle(fi, gi, mi, !1, ci)))) {
                        var s = e.ray.origin.distanceTo(ci);
                        s < e.near || s > e.far || t.push({
                            distance: s,
                            point: ci.clone(),
                            uv: Oe.getUV(ci, fi, mi, gi, vi, yi, _i, new c),
                            face: null,
                            object: this
                        })
                    }
                },
                clone: function () {
                    return new this.constructor(this.material).copy(this)
                },
                copy: function (e) {
                    return W.prototype.copy.call(this, e), void 0 !== e.center && this.center.copy(e.center), this
                }
            });
            var wi, Mi, Ti, Si, Ei, Ai = new _,
                ji = new _;

            function Li() {
                W.call(this), this._currentLevel = 0, this.type = "LOD", Object.defineProperties(this, {
                    levels: {
                        enumerable: !0,
                        value: []
                    }
                }), this.autoUpdate = !0
            }

            function Ci(e, t) {
                e && e.isGeometry && console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."), jt.call(this, e, t), this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new A, this.bindMatrixInverse = new A
            }
            Li.prototype = Object.assign(Object.create(W.prototype), {
                constructor: Li,
                isLOD: !0,
                copy: function (e) {
                    W.prototype.copy.call(this, e, !1);
                    for (var t = e.levels, n = 0, r = t.length; n < r; n++) {
                        var i = t[n];
                        this.addLevel(i.object.clone(), i.distance)
                    }
                    return this.autoUpdate = e.autoUpdate, this
                },
                addLevel: function (e, t) {
                    void 0 === t && (t = 0), t = Math.abs(t);
                    for (var n = this.levels, r = 0; r < n.length && !(t < n[r].distance); r++);
                    return n.splice(r, 0, {
                        distance: t,
                        object: e
                    }), this.add(e), this
                },
                getCurrentLevel: function () {
                    return this._currentLevel
                },
                getObjectForDistance: function (e) {
                    var t = this.levels;
                    if (t.length > 0) {
                        for (var n = 1, r = t.length; n < r && !(e < t[n].distance); n++);
                        return t[n - 1].object
                    }
                    return null
                },
                raycast: function (e, t) {
                    if (this.levels.length > 0) {
                        Ai.setFromMatrixPosition(this.matrixWorld);
                        var n = e.ray.origin.distanceTo(Ai);
                        this.getObjectForDistance(n).raycast(e, t)
                    }
                },
                update: function (e) {
                    var t = this.levels;
                    if (t.length > 1) {
                        Ai.setFromMatrixPosition(e.matrixWorld), ji.setFromMatrixPosition(this.matrixWorld);
                        var n = Ai.distanceTo(ji) / e.zoom;
                        t[0].object.visible = !0;
                        for (var r = 1, i = t.length; r < i && n >= t[r].distance; r++) t[r - 1].object.visible = !1, t[r].object.visible = !0;
                        for (this._currentLevel = r - 1; r < i; r++) t[r].object.visible = !1
                    }
                },
                toJSON: function (e) {
                    var t = W.prototype.toJSON.call(this, e);
                    !1 === this.autoUpdate && (t.object.autoUpdate = !1), t.object.levels = [];
                    for (var n = this.levels, r = 0, i = n.length; r < i; r++) {
                        var o = n[r];
                        t.object.levels.push({
                            object: o.object.uuid,
                            distance: o.distance
                        })
                    }
                    return t
                }
            }), Ci.prototype = Object.assign(Object.create(jt.prototype), {
                constructor: Ci,
                isSkinnedMesh: !0,
                bind: function (e, t) {
                    this.skeleton = e, void 0 === t && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), t = this.matrixWorld), this.bindMatrix.copy(t), this.bindMatrixInverse.getInverse(t)
                },
                pose: function () {
                    this.skeleton.pose()
                },
                normalizeSkinWeights: function () {
                    for (var e = new p, t = this.geometry.attributes.skinWeight, n = 0, r = t.count; n < r; n++) {
                        e.x = t.getX(n), e.y = t.getY(n), e.z = t.getZ(n), e.w = t.getW(n);
                        var i = 1 / e.manhattanLength();
                        i !== 1 / 0 ? e.multiplyScalar(i) : e.set(1, 0, 0, 0), t.setXYZW(n, e.x, e.y, e.z, e.w)
                    }
                },
                updateMatrixWorld: function (e) {
                    jt.prototype.updateMatrixWorld.call(this, e), "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode)
                },
                clone: function () {
                    return new this.constructor(this.geometry, this.material).copy(this)
                },
                boneTransform: (wi = new _, Mi = new p, Ti = new p, Si = new _, Ei = new A, function (e, t) {
                    var n = this.skeleton,
                        r = this.geometry;
                    Mi.fromBufferAttribute(r.attributes.skinIndex, e), Ti.fromBufferAttribute(r.attributes.skinWeight, e), wi.fromBufferAttribute(r.attributes.position, e).applyMatrix4(this.bindMatrix), t.set(0, 0, 0);
                    for (var i = 0; i < 4; i++) {
                        var o = Ti.getComponent(i);
                        if (0 !== o) {
                            var a = Mi.getComponent(i);
                            Ei.multiplyMatrices(n.bones[a].matrixWorld, n.boneInverses[a]), t.addScaledVector(Si.copy(wi).applyMatrix4(Ei), o)
                        }
                    }
                    return t.applyMatrix4(this.bindMatrixInverse)
                })
            });
            var Pi = new A,
                Oi = new A;

            function Ri(e, t) {
                if (e = e || [], this.bones = e.slice(0), this.boneMatrices = new Float32Array(16 * this.bones.length), this.frame = -1, void 0 === t) this.calculateInverses();
                else if (this.bones.length === t.length) this.boneInverses = t.slice(0);
                else {
                    console.warn("THREE.Skeleton boneInverses is the wrong length."), this.boneInverses = [];
                    for (var n = 0, r = this.bones.length; n < r; n++) this.boneInverses.push(new A)
                }
            }

            function Di() {
                W.call(this), this.type = "Bone"
            }
            Object.assign(Ri.prototype, {
                calculateInverses: function () {
                    this.boneInverses = [];
                    for (var e = 0, t = this.bones.length; e < t; e++) {
                        var n = new A;
                        this.bones[e] && n.getInverse(this.bones[e].matrixWorld), this.boneInverses.push(n)
                    }
                },
                pose: function () {
                    var e, t, n;
                    for (t = 0, n = this.bones.length; t < n; t++)(e = this.bones[t]) && e.matrixWorld.getInverse(this.boneInverses[t]);
                    for (t = 0, n = this.bones.length; t < n; t++)(e = this.bones[t]) && (e.parent && e.parent.isBone ? (e.matrix.getInverse(e.parent.matrixWorld), e.matrix.multiply(e.matrixWorld)) : e.matrix.copy(e.matrixWorld), e.matrix.decompose(e.position, e.quaternion, e.scale))
                },
                update: function () {
                    for (var e = this.bones, t = this.boneInverses, n = this.boneMatrices, r = this.boneTexture, i = 0, o = e.length; i < o; i++) {
                        var a = e[i] ? e[i].matrixWorld : Oi;
                        Pi.multiplyMatrices(a, t[i]), Pi.toArray(n, 16 * i)
                    }
                    void 0 !== r && (r.needsUpdate = !0)
                },
                clone: function () {
                    return new Ri(this.bones, this.boneInverses)
                },
                getBoneByName: function (e) {
                    for (var t = 0, n = this.bones.length; t < n; t++) {
                        var r = this.bones[t];
                        if (r.name === e) return r
                    }
                },
                dispose: function () {
                    this.boneTexture && (this.boneTexture.dispose(), this.boneTexture = void 0)
                }
            }), Di.prototype = Object.assign(Object.create(W.prototype), {
                constructor: Di,
                isBone: !0
            });
            var Ni = new A,
                Ii = new A,
                ki = [],
                zi = new jt;

            function Bi(e, t, n) {
                jt.call(this, e, t), this.instanceMatrix = new We(new Float32Array(16 * n), 16), this.count = n, this.frustumCulled = !1
            }

            function Fi(e) {
                He.call(this), this.type = "LineBasicMaterial", this.color = new Ie(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.morphTargets = !1, this.setValues(e)
            }
            Bi.prototype = Object.assign(Object.create(jt.prototype), {
                constructor: Bi,
                isInstancedMesh: !0,
                getMatrixAt: function (e, t) {
                    t.fromArray(this.instanceMatrix.array, 16 * e)
                },
                raycast: function (e, t) {
                    var n = this.matrixWorld,
                        r = this.count;
                    if (zi.geometry = this.geometry, zi.material = this.material, void 0 !== zi.material)
                        for (var i = 0; i < r; i++) {
                            this.getMatrixAt(i, Ni), Ii.multiplyMatrices(n, Ni), zi.matrixWorld = Ii, zi.raycast(e, ki);
                            for (var o = 0, a = ki.length; o < a; o++) {
                                var s = ki[o];
                                s.instanceId = i, s.object = this, t.push(s)
                            }
                            ki.length = 0
                        }
                },
                setMatrixAt: function (e, t) {
                    t.toArray(this.instanceMatrix.array, 16 * e)
                },
                updateMorphTargets: function () {}
            }), Fi.prototype = Object.create(He.prototype), Fi.prototype.constructor = Fi, Fi.prototype.isLineBasicMaterial = !0, Fi.prototype.copy = function (e) {
                return He.prototype.copy.call(this, e), this.color.copy(e.color), this.linewidth = e.linewidth, this.linecap = e.linecap, this.linejoin = e.linejoin, this.morphTargets = e.morphTargets, this
            };
            var Ui = new _,
                Hi = new _,
                Gi = new A,
                Vi = new ve,
                Wi = new le;

            function qi(e, t, n) {
                1 === n && console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."), W.call(this), this.type = "Line", this.geometry = void 0 !== e ? e : new ut, this.material = void 0 !== t ? t : new Fi, this.updateMorphTargets()
            }
            qi.prototype = Object.assign(Object.create(W.prototype), {
                constructor: qi,
                isLine: !0,
                computeLineDistances: function () {
                    var e = this.geometry;
                    if (e.isBufferGeometry)
                        if (null === e.index) {
                            for (var t = e.attributes.position, n = [0], r = 1, i = t.count; r < i; r++) Ui.fromBufferAttribute(t, r - 1), Hi.fromBufferAttribute(t, r), n[r] = n[r - 1], n[r] += Ui.distanceTo(Hi);
                            e.setAttribute("lineDistance", new Ke(n, 1))
                        } else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
                    else if (e.isGeometry) {
                        var o = e.vertices;
                        (n = e.lineDistances)[0] = 0;
                        for (r = 1, i = o.length; r < i; r++) n[r] = n[r - 1], n[r] += o[r - 1].distanceTo(o[r])
                    }
                    return this
                },
                raycast: function (e, t) {
                    var n = this.geometry,
                        r = this.matrixWorld,
                        i = e.params.Line.threshold;
                    if (null === n.boundingSphere && n.computeBoundingSphere(), Wi.copy(n.boundingSphere), Wi.applyMatrix4(r), Wi.radius += i, !1 !== e.ray.intersectsSphere(Wi)) {
                        Gi.getInverse(r), Vi.copy(e.ray).applyMatrix4(Gi);
                        var o = i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                            a = o * o,
                            s = new _,
                            c = new _,
                            l = new _,
                            u = new _,
                            h = this && this.isLineSegments ? 2 : 1;
                        if (n.isBufferGeometry) {
                            var d = n.index,
                                p = n.attributes.position.array;
                            if (null !== d)
                                for (var f = d.array, m = 0, g = f.length - 1; m < g; m += h) {
                                    var v = f[m],
                                        y = f[m + 1];
                                    if (s.fromArray(p, 3 * v), c.fromArray(p, 3 * y), !(Vi.distanceSqToSegment(s, c, u, l) > a)) u.applyMatrix4(this.matrixWorld), (w = e.ray.origin.distanceTo(u)) < e.near || w > e.far || t.push({
                                        distance: w,
                                        point: l.clone().applyMatrix4(this.matrixWorld),
                                        index: m,
                                        face: null,
                                        faceIndex: null,
                                        object: this
                                    })
                                } else
                                    for (m = 0, g = p.length / 3 - 1; m < g; m += h) {
                                        if (s.fromArray(p, 3 * m), c.fromArray(p, 3 * m + 3), !(Vi.distanceSqToSegment(s, c, u, l) > a)) u.applyMatrix4(this.matrixWorld), (w = e.ray.origin.distanceTo(u)) < e.near || w > e.far || t.push({
                                            distance: w,
                                            point: l.clone().applyMatrix4(this.matrixWorld),
                                            index: m,
                                            face: null,
                                            faceIndex: null,
                                            object: this
                                        })
                                    }
                        } else if (n.isGeometry) {
                            var x = n.vertices,
                                b = x.length;
                            for (m = 0; m < b - 1; m += h) {
                                var w;
                                if (!(Vi.distanceSqToSegment(x[m], x[m + 1], u, l) > a)) u.applyMatrix4(this.matrixWorld), (w = e.ray.origin.distanceTo(u)) < e.near || w > e.far || t.push({
                                    distance: w,
                                    point: l.clone().applyMatrix4(this.matrixWorld),
                                    index: m,
                                    face: null,
                                    faceIndex: null,
                                    object: this
                                })
                            }
                        }
                    }
                },
                updateMorphTargets: function () {
                    var e, t, n, r = this.geometry;
                    if (r.isBufferGeometry) {
                        var i = r.morphAttributes,
                            o = Object.keys(i);
                        if (o.length > 0) {
                            var a = i[o[0]];
                            if (void 0 !== a)
                                for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, e = 0, t = a.length; e < t; e++) n = a[e].name || String(e), this.morphTargetInfluences.push(0), this.morphTargetDictionary[n] = e
                        }
                    } else {
                        var s = r.morphTargets;
                        void 0 !== s && s.length > 0 && console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")
                    }
                },
                clone: function () {
                    return new this.constructor(this.geometry, this.material).copy(this)
                }
            });
            var Xi = new _,
                Yi = new _;

            function Ji(e, t) {
                qi.call(this, e, t), this.type = "LineSegments"
            }

            function Zi(e, t) {
                qi.call(this, e, t), this.type = "LineLoop"
            }

            function Qi(e) {
                He.call(this), this.type = "PointsMaterial", this.color = new Ie(16777215), this.map = null, this.alphaMap = null, this.size = 1, this.sizeAttenuation = !0, this.morphTargets = !1, this.setValues(e)
            }
            Ji.prototype = Object.assign(Object.create(qi.prototype), {
                constructor: Ji,
                isLineSegments: !0,
                computeLineDistances: function () {
                    var e = this.geometry;
                    if (e.isBufferGeometry)
                        if (null === e.index) {
                            for (var t = e.attributes.position, n = [], r = 0, i = t.count; r < i; r += 2) Xi.fromBufferAttribute(t, r), Yi.fromBufferAttribute(t, r + 1), n[r] = 0 === r ? 0 : n[r - 1], n[r + 1] = n[r] + Xi.distanceTo(Yi);
                            e.setAttribute("lineDistance", new Ke(n, 1))
                        } else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
                    else if (e.isGeometry) {
                        var o = e.vertices;
                        for (n = e.lineDistances, r = 0, i = o.length; r < i; r += 2) Xi.copy(o[r]), Yi.copy(o[r + 1]), n[r] = 0 === r ? 0 : n[r - 1], n[r + 1] = n[r] + Xi.distanceTo(Yi)
                    }
                    return this
                }
            }), Zi.prototype = Object.assign(Object.create(qi.prototype), {
                constructor: Zi,
                isLineLoop: !0
            }), Qi.prototype = Object.create(He.prototype), Qi.prototype.constructor = Qi, Qi.prototype.isPointsMaterial = !0, Qi.prototype.copy = function (e) {
                return He.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.size = e.size, this.sizeAttenuation = e.sizeAttenuation, this.morphTargets = e.morphTargets, this
            };
            var $i = new A,
                Ki = new ve,
                eo = new le,
                to = new _;

            function no(e, t) {
                W.call(this), this.type = "Points", this.geometry = void 0 !== e ? e : new ut, this.material = void 0 !== t ? t : new Qi, this.updateMorphTargets()
            }

            function ro(e, t, n, r, i, o, a) {
                var s = Ki.distanceSqToPoint(e);
                if (s < n) {
                    var c = new _;
                    Ki.closestPointToPoint(e, c), c.applyMatrix4(r);
                    var l = i.ray.origin.distanceTo(c);
                    if (l < i.near || l > i.far) return;
                    o.push({
                        distance: l,
                        distanceToRay: Math.sqrt(s),
                        point: c,
                        index: t,
                        face: null,
                        object: a
                    })
                }
            }

            function io(e, t, n, r, i, o, a, s, c) {
                d.call(this, e, t, n, r, i, o, a, s, c), this.format = void 0 !== a ? a : 1022, this.minFilter = void 0 !== o ? o : 1006, this.magFilter = void 0 !== i ? i : 1006, this.generateMipmaps = !1
            }

            function oo(e, t, n, r, i, o, a, s, c, l, u, h) {
                d.call(this, null, o, a, s, c, l, r, i, u, h), this.image = {
                    width: t,
                    height: n
                }, this.mipmaps = e, this.flipY = !1, this.generateMipmaps = !1
            }

            function ao(e, t, n, r, i, o, a, s, c) {
                d.call(this, e, t, n, r, i, o, a, s, c), this.needsUpdate = !0
            }

            function so(e, t, n, r, i, o, a, s, c, l) {
                if (1026 !== (l = void 0 !== l ? l : 1026) && 1027 !== l) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
                void 0 === n && 1026 === l && (n = 1012), void 0 === n && 1027 === l && (n = 1020), d.call(this, null, r, i, o, a, s, l, n, c), this.image = {
                    width: e,
                    height: t
                }, this.magFilter = void 0 !== a ? a : 1003, this.minFilter = void 0 !== s ? s : 1003, this.flipY = !1, this.generateMipmaps = !1
            }

            function co(e) {
                ut.call(this), this.type = "WireframeGeometry";
                var t, n, r, i, o, a, s, c, l, u, h = [],
                    d = [0, 0],
                    p = {},
                    f = ["a", "b", "c"];
                if (e && e.isGeometry) {
                    var m = e.faces;
                    for (t = 0, r = m.length; t < r; t++) {
                        var g = m[t];
                        for (n = 0; n < 3; n++) s = g[f[n]], c = g[f[(n + 1) % 3]], d[0] = Math.min(s, c), d[1] = Math.max(s, c), void 0 === p[l = d[0] + "," + d[1]] && (p[l] = {
                            index1: d[0],
                            index2: d[1]
                        })
                    }
                    for (l in p) a = p[l], u = e.vertices[a.index1], h.push(u.x, u.y, u.z), u = e.vertices[a.index2], h.push(u.x, u.y, u.z)
                } else if (e && e.isBufferGeometry) {
                    var v, y, x, b, w, M, T;
                    if (u = new _, null !== e.index) {
                        for (v = e.attributes.position, y = e.index, 0 === (x = e.groups).length && (x = [{
                                start: 0,
                                count: y.count,
                                materialIndex: 0
                            }]), i = 0, o = x.length; i < o; ++i)
                            for (t = w = (b = x[i]).start, r = w + b.count; t < r; t += 3)
                                for (n = 0; n < 3; n++) s = y.getX(t + n), c = y.getX(t + (n + 1) % 3), d[0] = Math.min(s, c), d[1] = Math.max(s, c), void 0 === p[l = d[0] + "," + d[1]] && (p[l] = {
                                    index1: d[0],
                                    index2: d[1]
                                });
                        for (l in p) a = p[l], u.fromBufferAttribute(v, a.index1), h.push(u.x, u.y, u.z), u.fromBufferAttribute(v, a.index2), h.push(u.x, u.y, u.z)
                    } else
                        for (t = 0, r = (v = e.attributes.position).count / 3; t < r; t++)
                            for (n = 0; n < 3; n++) M = 3 * t + n, u.fromBufferAttribute(v, M), h.push(u.x, u.y, u.z), T = 3 * t + (n + 1) % 3, u.fromBufferAttribute(v, T), h.push(u.x, u.y, u.z)
                }
                this.setAttribute("position", new Ke(h, 3))
            }

            function lo(e, t, n) {
                Nt.call(this), this.type = "ParametricGeometry", this.parameters = {
                    func: e,
                    slices: t,
                    stacks: n
                }, this.fromBufferGeometry(new uo(e, t, n)), this.mergeVertices()
            }

            function uo(e, t, n) {
                ut.call(this), this.type = "ParametricBufferGeometry", this.parameters = {
                    func: e,
                    slices: t,
                    stacks: n
                };
                var r, i, o = [],
                    a = [],
                    s = [],
                    c = [],
                    l = 1e-5,
                    u = new _,
                    h = new _,
                    d = new _,
                    p = new _,
                    f = new _;
                e.length < 3 && console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");
                var m = t + 1;
                for (r = 0; r <= n; r++) {
                    var g = r / n;
                    for (i = 0; i <= t; i++) {
                        var v = i / t;
                        e(v, g, h), a.push(h.x, h.y, h.z), v - l >= 0 ? (e(v - l, g, d), p.subVectors(h, d)) : (e(v + l, g, d), p.subVectors(d, h)), g - l >= 0 ? (e(v, g - l, d), f.subVectors(h, d)) : (e(v, g + l, d), f.subVectors(d, h)), u.crossVectors(p, f).normalize(), s.push(u.x, u.y, u.z), c.push(v, g)
                    }
                }
                for (r = 0; r < n; r++)
                    for (i = 0; i < t; i++) {
                        var y = r * m + i,
                            x = r * m + i + 1,
                            b = (r + 1) * m + i + 1,
                            w = (r + 1) * m + i;
                        o.push(y, x, w), o.push(x, b, w)
                    }
                this.setIndex(o), this.setAttribute("position", new Ke(a, 3)), this.setAttribute("normal", new Ke(s, 3)), this.setAttribute("uv", new Ke(c, 2))
            }

            function ho(e, t, n, r) {
                Nt.call(this), this.type = "PolyhedronGeometry", this.parameters = {
                    vertices: e,
                    indices: t,
                    radius: n,
                    detail: r
                }, this.fromBufferGeometry(new po(e, t, n, r)), this.mergeVertices()
            }

            function po(e, t, n, r) {
                ut.call(this), this.type = "PolyhedronBufferGeometry", this.parameters = {
                    vertices: e,
                    indices: t,
                    radius: n,
                    detail: r
                }, n = n || 1;
                var i = [],
                    o = [];

                function a(e, t, n, r) {
                    var i, o, a = Math.pow(2, r),
                        c = [];
                    for (i = 0; i <= a; i++) {
                        c[i] = [];
                        var l = e.clone().lerp(n, i / a),
                            u = t.clone().lerp(n, i / a),
                            h = a - i;
                        for (o = 0; o <= h; o++) c[i][o] = 0 === o && i === a ? l : l.clone().lerp(u, o / h)
                    }
                    for (i = 0; i < a; i++)
                        for (o = 0; o < 2 * (a - i) - 1; o++) {
                            var d = Math.floor(o / 2);
                            o % 2 == 0 ? (s(c[i][d + 1]), s(c[i + 1][d]), s(c[i][d])) : (s(c[i][d + 1]), s(c[i + 1][d + 1]), s(c[i + 1][d]))
                        }
                }

                function s(e) {
                    i.push(e.x, e.y, e.z)
                }

                function l(t, n) {
                    var r = 3 * t;
                    n.x = e[r + 0], n.y = e[r + 1], n.z = e[r + 2]
                }

                function u(e, t, n, r) {
                    r < 0 && 1 === e.x && (o[t] = e.x - 1), 0 === n.x && 0 === n.z && (o[t] = r / 2 / Math.PI + .5)
                }

                function h(e) {
                    return Math.atan2(e.z, -e.x)
                }

                function d(e) {
                    return Math.atan2(-e.y, Math.sqrt(e.x * e.x + e.z * e.z))
                }! function (e) {
                    for (var n = new _, r = new _, i = new _, o = 0; o < t.length; o += 3) l(t[o + 0], n), l(t[o + 1], r), l(t[o + 2], i), a(n, r, i, e)
                }(r = r || 0),
                function (e) {
                    for (var t = new _, n = 0; n < i.length; n += 3) t.x = i[n + 0], t.y = i[n + 1], t.z = i[n + 2], t.normalize().multiplyScalar(e), i[n + 0] = t.x, i[n + 1] = t.y, i[n + 2] = t.z
                }(n),
                function () {
                    for (var e = new _, t = 0; t < i.length; t += 3) {
                        e.x = i[t + 0], e.y = i[t + 1], e.z = i[t + 2];
                        var n = h(e) / 2 / Math.PI + .5,
                            r = d(e) / Math.PI + .5;
                        o.push(n, 1 - r)
                    }(function () {
                        for (var e = new _, t = new _, n = new _, r = new _, a = new c, s = new c, l = new c, d = 0, p = 0; d < i.length; d += 9, p += 6) {
                            e.set(i[d + 0], i[d + 1], i[d + 2]), t.set(i[d + 3], i[d + 4], i[d + 5]), n.set(i[d + 6], i[d + 7], i[d + 8]), a.set(o[p + 0], o[p + 1]), s.set(o[p + 2], o[p + 3]), l.set(o[p + 4], o[p + 5]), r.copy(e).add(t).add(n).divideScalar(3);
                            var f = h(r);
                            u(a, p + 0, e, f), u(s, p + 2, t, f), u(l, p + 4, n, f)
                        }
                    })(),
                    function () {
                        for (var e = 0; e < o.length; e += 6) {
                            var t = o[e + 0],
                                n = o[e + 2],
                                r = o[e + 4],
                                i = Math.max(t, n, r),
                                a = Math.min(t, n, r);
                            i > .9 && a < .1 && (t < .2 && (o[e + 0] += 1), n < .2 && (o[e + 2] += 1), r < .2 && (o[e + 4] += 1))
                        }
                    }()
                }(), this.setAttribute("position", new Ke(i, 3)), this.setAttribute("normal", new Ke(i.slice(), 3)), this.setAttribute("uv", new Ke(o, 2)), 0 === r ? this.computeVertexNormals() : this.normalizeNormals()
            }

            function fo(e, t) {
                Nt.call(this), this.type = "TetrahedronGeometry", this.parameters = {
                    radius: e,
                    detail: t
                }, this.fromBufferGeometry(new mo(e, t)), this.mergeVertices()
            }

            function mo(e, t) {
                po.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], e, t), this.type = "TetrahedronBufferGeometry", this.parameters = {
                    radius: e,
                    detail: t
                }
            }

            function go(e, t) {
                Nt.call(this), this.type = "OctahedronGeometry", this.parameters = {
                    radius: e,
                    detail: t
                }, this.fromBufferGeometry(new vo(e, t)), this.mergeVertices()
            }

            function vo(e, t) {
                po.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], e, t), this.type = "OctahedronBufferGeometry", this.parameters = {
                    radius: e,
                    detail: t
                }
            }

            function yo(e, t) {
                Nt.call(this), this.type = "IcosahedronGeometry", this.parameters = {
                    radius: e,
                    detail: t
                }, this.fromBufferGeometry(new _o(e, t)), this.mergeVertices()
            }

            function _o(e, t) {
                var n = (1 + Math.sqrt(5)) / 2,
                    r = [-1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1];
                po.call(this, r, [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], e, t), this.type = "IcosahedronBufferGeometry", this.parameters = {
                    radius: e,
                    detail: t
                }
            }

            function xo(e, t) {
                Nt.call(this), this.type = "DodecahedronGeometry", this.parameters = {
                    radius: e,
                    detail: t
                }, this.fromBufferGeometry(new bo(e, t)), this.mergeVertices()
            }

            function bo(e, t) {
                var n = (1 + Math.sqrt(5)) / 2,
                    r = 1 / n,
                    i = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -r, -n, 0, -r, n, 0, r, -n, 0, r, n, -r, -n, 0, -r, n, 0, r, -n, 0, r, n, 0, -n, 0, -r, n, 0, -r, -n, 0, r, n, 0, r];
                po.call(this, i, [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9], e, t), this.type = "DodecahedronBufferGeometry", this.parameters = {
                    radius: e,
                    detail: t
                }
            }

            function wo(e, t, n, r, i, o) {
                Nt.call(this), this.type = "TubeGeometry", this.parameters = {
                    path: e,
                    tubularSegments: t,
                    radius: n,
                    radialSegments: r,
                    closed: i
                }, void 0 !== o && console.warn("THREE.TubeGeometry: taper has been removed.");
                var a = new Mo(e, t, n, r, i);
                this.tangents = a.tangents, this.normals = a.normals, this.binormals = a.binormals, this.fromBufferGeometry(a), this.mergeVertices()
            }

            function Mo(e, t, n, r, i) {
                ut.call(this), this.type = "TubeBufferGeometry", this.parameters = {
                    path: e,
                    tubularSegments: t,
                    radius: n,
                    radialSegments: r,
                    closed: i
                }, t = t || 64, n = n || 1, r = r || 8, i = i || !1;
                var o = e.computeFrenetFrames(t, i);
                this.tangents = o.tangents, this.normals = o.normals, this.binormals = o.binormals;
                var a, s, l = new _,
                    u = new _,
                    h = new c,
                    d = new _,
                    p = [],
                    f = [],
                    m = [],
                    g = [];

                function v(i) {
                    d = e.getPointAt(i / t, d);
                    var a = o.normals[i],
                        c = o.binormals[i];
                    for (s = 0; s <= r; s++) {
                        var h = s / r * Math.PI * 2,
                            m = Math.sin(h),
                            g = -Math.cos(h);
                        u.x = g * a.x + m * c.x, u.y = g * a.y + m * c.y, u.z = g * a.z + m * c.z, u.normalize(), f.push(u.x, u.y, u.z), l.x = d.x + n * u.x, l.y = d.y + n * u.y, l.z = d.z + n * u.z, p.push(l.x, l.y, l.z)
                    }
                }! function () {
                    for (a = 0; a < t; a++) v(a);
                    v(!1 === i ? t : 0),
                        function () {
                            for (a = 0; a <= t; a++)
                                for (s = 0; s <= r; s++) h.x = a / t, h.y = s / r, m.push(h.x, h.y)
                        }(),
                        function () {
                            for (s = 1; s <= t; s++)
                                for (a = 1; a <= r; a++) {
                                    var e = (r + 1) * (s - 1) + (a - 1),
                                        n = (r + 1) * s + (a - 1),
                                        i = (r + 1) * s + a,
                                        o = (r + 1) * (s - 1) + a;
                                    g.push(e, n, o), g.push(n, i, o)
                                }
                        }()
                }(), this.setIndex(g), this.setAttribute("position", new Ke(p, 3)), this.setAttribute("normal", new Ke(f, 3)), this.setAttribute("uv", new Ke(m, 2))
            }

            function To(e, t, n, r, i, o, a) {
                Nt.call(this), this.type = "TorusKnotGeometry", this.parameters = {
                    radius: e,
                    tube: t,
                    tubularSegments: n,
                    radialSegments: r,
                    p: i,
                    q: o
                }, void 0 !== a && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."), this.fromBufferGeometry(new So(e, t, n, r, i, o)), this.mergeVertices()
            }

            function So(e, t, n, r, i, o) {
                ut.call(this), this.type = "TorusKnotBufferGeometry", this.parameters = {
                    radius: e,
                    tube: t,
                    tubularSegments: n,
                    radialSegments: r,
                    p: i,
                    q: o
                }, e = e || 1, t = t || .4, n = Math.floor(n) || 64, r = Math.floor(r) || 8, i = i || 2, o = o || 3;
                var a, s, c = [],
                    l = [],
                    u = [],
                    h = [],
                    d = new _,
                    p = new _,
                    f = new _,
                    m = new _,
                    g = new _,
                    v = new _,
                    y = new _;
                for (a = 0; a <= n; ++a) {
                    var x = a / n * i * Math.PI * 2;
                    for (j(x, i, o, e, f), j(x + .01, i, o, e, m), v.subVectors(m, f), y.addVectors(m, f), g.crossVectors(v, y), y.crossVectors(g, v), g.normalize(), y.normalize(), s = 0; s <= r; ++s) {
                        var b = s / r * Math.PI * 2,
                            w = -t * Math.cos(b),
                            M = t * Math.sin(b);
                        d.x = f.x + (w * y.x + M * g.x), d.y = f.y + (w * y.y + M * g.y), d.z = f.z + (w * y.z + M * g.z), l.push(d.x, d.y, d.z), p.subVectors(d, f).normalize(), u.push(p.x, p.y, p.z), h.push(a / n), h.push(s / r)
                    }
                }
                for (s = 1; s <= n; s++)
                    for (a = 1; a <= r; a++) {
                        var T = (r + 1) * (s - 1) + (a - 1),
                            S = (r + 1) * s + (a - 1),
                            E = (r + 1) * s + a,
                            A = (r + 1) * (s - 1) + a;
                        c.push(T, S, A), c.push(S, E, A)
                    }

                function j(e, t, n, r, i) {
                    var o = Math.cos(e),
                        a = Math.sin(e),
                        s = n / t * e,
                        c = Math.cos(s);
                    i.x = r * (2 + c) * .5 * o, i.y = r * (2 + c) * a * .5, i.z = r * Math.sin(s) * .5
                }
                this.setIndex(c), this.setAttribute("position", new Ke(l, 3)), this.setAttribute("normal", new Ke(u, 3)), this.setAttribute("uv", new Ke(h, 2))
            }

            function Eo(e, t, n, r, i) {
                Nt.call(this), this.type = "TorusGeometry", this.parameters = {
                    radius: e,
                    tube: t,
                    radialSegments: n,
                    tubularSegments: r,
                    arc: i
                }, this.fromBufferGeometry(new Ao(e, t, n, r, i)), this.mergeVertices()
            }

            function Ao(e, t, n, r, i) {
                ut.call(this), this.type = "TorusBufferGeometry", this.parameters = {
                    radius: e,
                    tube: t,
                    radialSegments: n,
                    tubularSegments: r,
                    arc: i
                }, e = e || 1, t = t || .4, n = Math.floor(n) || 8, r = Math.floor(r) || 6, i = i || 2 * Math.PI;
                var o, a, s = [],
                    c = [],
                    l = [],
                    u = [],
                    h = new _,
                    d = new _,
                    p = new _;
                for (o = 0; o <= n; o++)
                    for (a = 0; a <= r; a++) {
                        var f = a / r * i,
                            m = o / n * Math.PI * 2;
                        d.x = (e + t * Math.cos(m)) * Math.cos(f), d.y = (e + t * Math.cos(m)) * Math.sin(f), d.z = t * Math.sin(m), c.push(d.x, d.y, d.z), h.x = e * Math.cos(f), h.y = e * Math.sin(f), p.subVectors(d, h).normalize(), l.push(p.x, p.y, p.z), u.push(a / r), u.push(o / n)
                    }
                for (o = 1; o <= n; o++)
                    for (a = 1; a <= r; a++) {
                        var g = (r + 1) * o + a - 1,
                            v = (r + 1) * (o - 1) + a - 1,
                            y = (r + 1) * (o - 1) + a,
                            x = (r + 1) * o + a;
                        s.push(g, v, x), s.push(v, y, x)
                    }
                this.setIndex(s), this.setAttribute("position", new Ke(c, 3)), this.setAttribute("normal", new Ke(l, 3)), this.setAttribute("uv", new Ke(u, 2))
            }
            no.prototype = Object.assign(Object.create(W.prototype), {
                constructor: no,
                isPoints: !0,
                raycast: function (e, t) {
                    var n = this.geometry,
                        r = this.matrixWorld,
                        i = e.params.Points.threshold;
                    if (null === n.boundingSphere && n.computeBoundingSphere(), eo.copy(n.boundingSphere), eo.applyMatrix4(r), eo.radius += i, !1 !== e.ray.intersectsSphere(eo)) {
                        $i.getInverse(r), Ki.copy(e.ray).applyMatrix4($i);
                        var o = i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                            a = o * o;
                        if (n.isBufferGeometry) {
                            var s = n.index,
                                c = n.attributes.position.array;
                            if (null !== s)
                                for (var l = s.array, u = 0, h = l.length; u < h; u++) {
                                    var d = l[u];
                                    to.fromArray(c, 3 * d), ro(to, d, a, r, e, t, this)
                                } else {
                                    u = 0;
                                    for (var p = c.length / 3; u < p; u++) to.fromArray(c, 3 * u), ro(to, u, a, r, e, t, this)
                                }
                        } else {
                            var f = n.vertices;
                            for (u = 0, p = f.length; u < p; u++) ro(f[u], u, a, r, e, t, this)
                        }
                    }
                },
                updateMorphTargets: function () {
                    var e, t, n, r = this.geometry;
                    if (r.isBufferGeometry) {
                        var i = r.morphAttributes,
                            o = Object.keys(i);
                        if (o.length > 0) {
                            var a = i[o[0]];
                            if (void 0 !== a)
                                for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, e = 0, t = a.length; e < t; e++) n = a[e].name || String(e), this.morphTargetInfluences.push(0), this.morphTargetDictionary[n] = e
                        }
                    } else {
                        var s = r.morphTargets;
                        void 0 !== s && s.length > 0 && console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")
                    }
                },
                clone: function () {
                    return new this.constructor(this.geometry, this.material).copy(this)
                }
            }), io.prototype = Object.assign(Object.create(d.prototype), {
                constructor: io,
                isVideoTexture: !0,
                update: function () {
                    var e = this.image;
                    e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0)
                }
            }), oo.prototype = Object.create(d.prototype), oo.prototype.constructor = oo, oo.prototype.isCompressedTexture = !0, ao.prototype = Object.create(d.prototype), ao.prototype.constructor = ao, ao.prototype.isCanvasTexture = !0, so.prototype = Object.create(d.prototype), so.prototype.constructor = so, so.prototype.isDepthTexture = !0, co.prototype = Object.create(ut.prototype), co.prototype.constructor = co, lo.prototype = Object.create(Nt.prototype), lo.prototype.constructor = lo, uo.prototype = Object.create(ut.prototype), uo.prototype.constructor = uo, ho.prototype = Object.create(Nt.prototype), ho.prototype.constructor = ho, po.prototype = Object.create(ut.prototype), po.prototype.constructor = po, fo.prototype = Object.create(Nt.prototype), fo.prototype.constructor = fo, mo.prototype = Object.create(po.prototype), mo.prototype.constructor = mo, go.prototype = Object.create(Nt.prototype), go.prototype.constructor = go, vo.prototype = Object.create(po.prototype), vo.prototype.constructor = vo, yo.prototype = Object.create(Nt.prototype), yo.prototype.constructor = yo, _o.prototype = Object.create(po.prototype), _o.prototype.constructor = _o, xo.prototype = Object.create(Nt.prototype), xo.prototype.constructor = xo, bo.prototype = Object.create(po.prototype), bo.prototype.constructor = bo, wo.prototype = Object.create(Nt.prototype), wo.prototype.constructor = wo, Mo.prototype = Object.create(ut.prototype), Mo.prototype.constructor = Mo, Mo.prototype.toJSON = function () {
                var e = ut.prototype.toJSON.call(this);
                return e.path = this.parameters.path.toJSON(), e
            }, To.prototype = Object.create(Nt.prototype), To.prototype.constructor = To, So.prototype = Object.create(ut.prototype), So.prototype.constructor = So, Eo.prototype = Object.create(Nt.prototype), Eo.prototype.constructor = Eo, Ao.prototype = Object.create(ut.prototype), Ao.prototype.constructor = Ao;
            var jo = function (e, t, n) {
                n = n || 2;
                var r, i, o, a, s, c, l, u = t && t.length,
                    h = u ? t[0] * n : e.length,
                    d = Lo(e, 0, h, n, !0),
                    p = [];
                if (!d || d.next === d.prev) return p;
                if (u && (d = function (e, t, n, r) {
                        var i, o, a, s, c, l = [];
                        for (i = 0, o = t.length; i < o; i++) a = t[i] * r, s = i < o - 1 ? t[i + 1] * r : e.length, (c = Lo(e, a, s, r, !1)) === c.next && (c.steiner = !0), l.push(Fo(c));
                        for (l.sort(Io), i = 0; i < l.length; i++) ko(l[i], n), n = Co(n, n.next);
                        return n
                    }(e, t, d, n)), e.length > 80 * n) {
                    r = o = e[0], i = a = e[1];
                    for (var f = n; f < h; f += n)(s = e[f]) < r && (r = s), (c = e[f + 1]) < i && (i = c), s > o && (o = s), c > a && (a = c);
                    l = 0 !== (l = Math.max(o - r, a - i)) ? 1 / l : 0
                }
                return Po(d, p, n, r, i, l), p
            };

            function Lo(e, t, n, r, i) {
                var o, a;
                if (i === function (e, t, n, r) {
                        for (var i = 0, o = t, a = n - r; o < n; o += r) i += (e[a] - e[o]) * (e[o + 1] + e[a + 1]), a = o;
                        return i
                    }(e, t, n, r) > 0)
                    for (o = t; o < n; o += r) a = Zo(o, e[o], e[o + 1], a);
                else
                    for (o = n - r; o >= t; o -= r) a = Zo(o, e[o], e[o + 1], a);
                return a && Vo(a, a.next) && (Qo(a), a = a.next), a
            }

            function Co(e, t) {
                if (!e) return e;
                t || (t = e);
                var n, r = e;
                do {
                    if (n = !1, r.steiner || !Vo(r, r.next) && 0 !== Go(r.prev, r, r.next)) r = r.next;
                    else {
                        if (Qo(r), (r = t = r.prev) === r.next) break;
                        n = !0
                    }
                } while (n || r !== t);
                return t
            }

            function Po(e, t, n, r, i, o, a) {
                if (e) {
                    !a && o && function (e, t, n, r) {
                        var i = e;
                        do {
                            null === i.z && (i.z = Bo(i.x, i.y, t, n, r)), i.prevZ = i.prev, i.nextZ = i.next, i = i.next
                        } while (i !== e);
                        i.prevZ.nextZ = null, i.prevZ = null,
                            function (e) {
                                var t, n, r, i, o, a, s, c, l = 1;
                                do {
                                    for (n = e, e = null, o = null, a = 0; n;) {
                                        for (a++, r = n, s = 0, t = 0; t < l && (s++, r = r.nextZ); t++);
                                        for (c = l; s > 0 || c > 0 && r;) 0 !== s && (0 === c || !r || n.z <= r.z) ? (i = n, n = n.nextZ, s--) : (i = r, r = r.nextZ, c--), o ? o.nextZ = i : e = i, i.prevZ = o, o = i;
                                        n = r
                                    }
                                    o.nextZ = null, l *= 2
                                } while (a > 1)
                            }(i)
                    }(e, r, i, o);
                    for (var s, c, l = e; e.prev !== e.next;)
                        if (s = e.prev, c = e.next, o ? Ro(e, r, i, o) : Oo(e)) t.push(s.i / n), t.push(e.i / n), t.push(c.i / n), Qo(e), e = c.next, l = c.next;
                        else if ((e = c) === l) {
                        a ? 1 === a ? Po(e = Do(Co(e), t, n), t, n, r, i, o, 2) : 2 === a && No(e, t, n, r, i, o) : Po(Co(e), t, n, r, i, o, 1);
                        break
                    }
                }
            }

            function Oo(e) {
                var t = e.prev,
                    n = e,
                    r = e.next;
                if (Go(t, n, r) >= 0) return !1;
                for (var i = e.next.next; i !== e.prev;) {
                    if (Uo(t.x, t.y, n.x, n.y, r.x, r.y, i.x, i.y) && Go(i.prev, i, i.next) >= 0) return !1;
                    i = i.next
                }
                return !0
            }

            function Ro(e, t, n, r) {
                var i = e.prev,
                    o = e,
                    a = e.next;
                if (Go(i, o, a) >= 0) return !1;
                for (var s = i.x < o.x ? i.x < a.x ? i.x : a.x : o.x < a.x ? o.x : a.x, c = i.y < o.y ? i.y < a.y ? i.y : a.y : o.y < a.y ? o.y : a.y, l = i.x > o.x ? i.x > a.x ? i.x : a.x : o.x > a.x ? o.x : a.x, u = i.y > o.y ? i.y > a.y ? i.y : a.y : o.y > a.y ? o.y : a.y, h = Bo(s, c, t, n, r), d = Bo(l, u, t, n, r), p = e.prevZ, f = e.nextZ; p && p.z >= h && f && f.z <= d;) {
                    if (p !== e.prev && p !== e.next && Uo(i.x, i.y, o.x, o.y, a.x, a.y, p.x, p.y) && Go(p.prev, p, p.next) >= 0) return !1;
                    if (p = p.prevZ, f !== e.prev && f !== e.next && Uo(i.x, i.y, o.x, o.y, a.x, a.y, f.x, f.y) && Go(f.prev, f, f.next) >= 0) return !1;
                    f = f.nextZ
                }
                for (; p && p.z >= h;) {
                    if (p !== e.prev && p !== e.next && Uo(i.x, i.y, o.x, o.y, a.x, a.y, p.x, p.y) && Go(p.prev, p, p.next) >= 0) return !1;
                    p = p.prevZ
                }
                for (; f && f.z <= d;) {
                    if (f !== e.prev && f !== e.next && Uo(i.x, i.y, o.x, o.y, a.x, a.y, f.x, f.y) && Go(f.prev, f, f.next) >= 0) return !1;
                    f = f.nextZ
                }
                return !0
            }

            function Do(e, t, n) {
                var r = e;
                do {
                    var i = r.prev,
                        o = r.next.next;
                    !Vo(i, o) && Wo(i, r, r.next, o) && Yo(i, o) && Yo(o, i) && (t.push(i.i / n), t.push(r.i / n), t.push(o.i / n), Qo(r), Qo(r.next), r = e = o), r = r.next
                } while (r !== e);
                return Co(r)
            }

            function No(e, t, n, r, i, o) {
                var a = e;
                do {
                    for (var s = a.next.next; s !== a.prev;) {
                        if (a.i !== s.i && Ho(a, s)) {
                            var c = Jo(a, s);
                            return a = Co(a, a.next), c = Co(c, c.next), Po(a, t, n, r, i, o), void Po(c, t, n, r, i, o)
                        }
                        s = s.next
                    }
                    a = a.next
                } while (a !== e)
            }

            function Io(e, t) {
                return e.x - t.x
            }

            function ko(e, t) {
                if (t = function (e, t) {
                        var n, r = t,
                            i = e.x,
                            o = e.y,
                            a = -1 / 0;
                        do {
                            if (o <= r.y && o >= r.next.y && r.next.y !== r.y) {
                                var s = r.x + (o - r.y) * (r.next.x - r.x) / (r.next.y - r.y);
                                if (s <= i && s > a) {
                                    if (a = s, s === i) {
                                        if (o === r.y) return r;
                                        if (o === r.next.y) return r.next
                                    }
                                    n = r.x < r.next.x ? r : r.next
                                }
                            }
                            r = r.next
                        } while (r !== t);
                        if (!n) return null;
                        if (i === a) return n;
                        var c, l = n,
                            u = n.x,
                            h = n.y,
                            d = 1 / 0;
                        r = n;
                        do {
                            i >= r.x && r.x >= u && i !== r.x && Uo(o < h ? i : a, o, u, h, o < h ? a : i, o, r.x, r.y) && (c = Math.abs(o - r.y) / (i - r.x), Yo(r, e) && (c < d || c === d && (r.x > n.x || r.x === n.x && zo(n, r))) && (n = r, d = c)), r = r.next
                        } while (r !== l);
                        return n
                    }(e, t)) {
                    var n = Jo(t, e);
                    Co(t, t.next), Co(n, n.next)
                }
            }

            function zo(e, t) {
                return Go(e.prev, e, t.prev) < 0 && Go(t.next, e, e.next) < 0
            }

            function Bo(e, t, n, r, i) {
                return (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - n) * i) | e << 8)) | e << 4)) | e << 2)) | e << 1)) | (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - r) * i) | t << 8)) | t << 4)) | t << 2)) | t << 1)) << 1
            }

            function Fo(e) {
                var t = e,
                    n = e;
                do {
                    (t.x < n.x || t.x === n.x && t.y < n.y) && (n = t), t = t.next
                } while (t !== e);
                return n
            }

            function Uo(e, t, n, r, i, o, a, s) {
                return (i - a) * (t - s) - (e - a) * (o - s) >= 0 && (e - a) * (r - s) - (n - a) * (t - s) >= 0 && (n - a) * (o - s) - (i - a) * (r - s) >= 0
            }

            function Ho(e, t) {
                return e.next.i !== t.i && e.prev.i !== t.i && ! function (e, t) {
                    var n = e;
                    do {
                        if (n.i !== e.i && n.next.i !== e.i && n.i !== t.i && n.next.i !== t.i && Wo(n, n.next, e, t)) return !0;
                        n = n.next
                    } while (n !== e);
                    return !1
                }(e, t) && (Yo(e, t) && Yo(t, e) && function (e, t) {
                    var n = e,
                        r = !1,
                        i = (e.x + t.x) / 2,
                        o = (e.y + t.y) / 2;
                    do {
                        n.y > o != n.next.y > o && n.next.y !== n.y && i < (n.next.x - n.x) * (o - n.y) / (n.next.y - n.y) + n.x && (r = !r), n = n.next
                    } while (n !== e);
                    return r
                }(e, t) && (Go(e.prev, e, t.prev) || Go(e, t.prev, t)) || Vo(e, t) && Go(e.prev, e, e.next) > 0 && Go(t.prev, t, t.next) > 0)
            }

            function Go(e, t, n) {
                return (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y)
            }

            function Vo(e, t) {
                return e.x === t.x && e.y === t.y
            }

            function Wo(e, t, n, r) {
                var i = Xo(Go(e, t, n)),
                    o = Xo(Go(e, t, r)),
                    a = Xo(Go(n, r, e)),
                    s = Xo(Go(n, r, t));
                return i !== o && a !== s || (!(0 !== i || !qo(e, n, t)) || (!(0 !== o || !qo(e, r, t)) || (!(0 !== a || !qo(n, e, r)) || !(0 !== s || !qo(n, t, r)))))
            }

            function qo(e, t, n) {
                return t.x <= Math.max(e.x, n.x) && t.x >= Math.min(e.x, n.x) && t.y <= Math.max(e.y, n.y) && t.y >= Math.min(e.y, n.y)
            }

            function Xo(e) {
                return e > 0 ? 1 : e < 0 ? -1 : 0
            }

            function Yo(e, t) {
                return Go(e.prev, e, e.next) < 0 ? Go(e, t, e.next) >= 0 && Go(e, e.prev, t) >= 0 : Go(e, t, e.prev) < 0 || Go(e, e.next, t) < 0
            }

            function Jo(e, t) {
                var n = new $o(e.i, e.x, e.y),
                    r = new $o(t.i, t.x, t.y),
                    i = e.next,
                    o = t.prev;
                return e.next = t, t.prev = e, n.next = i, i.prev = n, r.next = n, n.prev = r, o.next = r, r.prev = o, r
            }

            function Zo(e, t, n, r) {
                var i = new $o(e, t, n);
                return r ? (i.next = r.next, i.prev = r, r.next.prev = i, r.next = i) : (i.prev = i, i.next = i), i
            }

            function Qo(e) {
                e.next.prev = e.prev, e.prev.next = e.next, e.prevZ && (e.prevZ.nextZ = e.nextZ), e.nextZ && (e.nextZ.prevZ = e.prevZ)
            }

            function $o(e, t, n) {
                this.i = e, this.x = t, this.y = n, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1
            }
            var Ko = {
                area: function (e) {
                    for (var t = e.length, n = 0, r = t - 1, i = 0; i < t; r = i++) n += e[r].x * e[i].y - e[i].x * e[r].y;
                    return .5 * n
                },
                isClockWise: function (e) {
                    return Ko.area(e) < 0
                },
                triangulateShape: function (e, t) {
                    var n = [],
                        r = [],
                        i = [];
                    ea(e), ta(n, e);
                    var o = e.length;
                    t.forEach(ea);
                    for (var a = 0; a < t.length; a++) r.push(o), o += t[a].length, ta(n, t[a]);
                    var s = jo(n, r);
                    for (a = 0; a < s.length; a += 3) i.push(s.slice(a, a + 3));
                    return i
                }
            };

            function ea(e) {
                var t = e.length;
                t > 2 && e[t - 1].equals(e[0]) && e.pop()
            }

            function ta(e, t) {
                for (var n = 0; n < t.length; n++) e.push(t[n].x), e.push(t[n].y)
            }

            function na(e, t) {
                Nt.call(this), this.type = "ExtrudeGeometry", this.parameters = {
                    shapes: e,
                    options: t
                }, this.fromBufferGeometry(new ra(e, t)), this.mergeVertices()
            }

            function ra(e, t) {
                ut.call(this), this.type = "ExtrudeBufferGeometry", this.parameters = {
                    shapes: e,
                    options: t
                }, e = Array.isArray(e) ? e : [e];
                for (var n = this, r = [], i = [], o = 0, a = e.length; o < a; o++) {
                    s(e[o])
                }

                function s(e) {
                    var o = [],
                        a = void 0 !== t.curveSegments ? t.curveSegments : 12,
                        s = void 0 !== t.steps ? t.steps : 1,
                        l = void 0 !== t.depth ? t.depth : 100,
                        u = void 0 === t.bevelEnabled || t.bevelEnabled,
                        h = void 0 !== t.bevelThickness ? t.bevelThickness : 6,
                        d = void 0 !== t.bevelSize ? t.bevelSize : h - 2,
                        p = void 0 !== t.bevelOffset ? t.bevelOffset : 0,
                        f = void 0 !== t.bevelSegments ? t.bevelSegments : 3,
                        m = t.extrudePath,
                        g = void 0 !== t.UVGenerator ? t.UVGenerator : ia;
                    void 0 !== t.amount && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), l = t.amount);
                    var v, y, x, b, w, M, T, S, E = !1;
                    m && (v = m.getSpacedPoints(s), E = !0, u = !1, y = m.computeFrenetFrames(s, !1), x = new _, b = new _, w = new _), u || (f = 0, h = 0, d = 0, p = 0);
                    var A = e.extractPoints(a),
                        j = A.shape,
                        L = A.holes;
                    if (!Ko.isClockWise(j))
                        for (j = j.reverse(), T = 0, S = L.length; T < S; T++) M = L[T], Ko.isClockWise(M) && (L[T] = M.reverse());
                    var C = Ko.triangulateShape(j, L),
                        P = j;
                    for (T = 0, S = L.length; T < S; T++) M = L[T], j = j.concat(M);

                    function O(e, t, n) {
                        return t || console.error("THREE.ExtrudeGeometry: vec does not exist"), t.clone().multiplyScalar(n).add(e)
                    }
                    var R, D, N, I, k, z, B = j.length,
                        F = C.length;

                    function U(e, t, n) {
                        var r, i, o, a = e.x - t.x,
                            s = e.y - t.y,
                            l = n.x - e.x,
                            u = n.y - e.y,
                            h = a * a + s * s,
                            d = a * u - s * l;
                        if (Math.abs(d) > Number.EPSILON) {
                            var p = Math.sqrt(h),
                                f = Math.sqrt(l * l + u * u),
                                m = t.x - s / p,
                                g = t.y + a / p,
                                v = ((n.x - u / f - m) * u - (n.y + l / f - g) * l) / (a * u - s * l),
                                y = (r = m + a * v - e.x) * r + (i = g + s * v - e.y) * i;
                            if (y <= 2) return new c(r, i);
                            o = Math.sqrt(y / 2)
                        } else {
                            var _ = !1;
                            a > Number.EPSILON ? l > Number.EPSILON && (_ = !0) : a < -Number.EPSILON ? l < -Number.EPSILON && (_ = !0) : Math.sign(s) === Math.sign(u) && (_ = !0), _ ? (r = -s, i = a, o = Math.sqrt(h)) : (r = a, i = s, o = Math.sqrt(h / 2))
                        }
                        return new c(r / o, i / o)
                    }
                    for (var H = [], G = 0, V = P.length, W = V - 1, q = G + 1; G < V; G++, W++, q++) W === V && (W = 0), q === V && (q = 0), H[G] = U(P[G], P[W], P[q]);
                    var X, Y, J = [],
                        Z = H.concat();
                    for (T = 0, S = L.length; T < S; T++) {
                        for (M = L[T], X = [], G = 0, W = (V = M.length) - 1, q = G + 1; G < V; G++, W++, q++) W === V && (W = 0), q === V && (q = 0), X[G] = U(M[G], M[W], M[q]);
                        J.push(X), Z = Z.concat(X)
                    }
                    for (R = 0; R < f; R++) {
                        for (N = R / f, I = h * Math.cos(N * Math.PI / 2), D = d * Math.sin(N * Math.PI / 2) + p, G = 0, V = P.length; G < V; G++) $((k = O(P[G], H[G], D)).x, k.y, -I);
                        for (T = 0, S = L.length; T < S; T++)
                            for (M = L[T], X = J[T], G = 0, V = M.length; G < V; G++) $((k = O(M[G], X[G], D)).x, k.y, -I)
                    }
                    for (D = d + p, G = 0; G < B; G++) k = u ? O(j[G], Z[G], D) : j[G], E ? (b.copy(y.normals[0]).multiplyScalar(k.x), x.copy(y.binormals[0]).multiplyScalar(k.y), w.copy(v[0]).add(b).add(x), $(w.x, w.y, w.z)) : $(k.x, k.y, 0);
                    for (Y = 1; Y <= s; Y++)
                        for (G = 0; G < B; G++) k = u ? O(j[G], Z[G], D) : j[G], E ? (b.copy(y.normals[Y]).multiplyScalar(k.x), x.copy(y.binormals[Y]).multiplyScalar(k.y), w.copy(v[Y]).add(b).add(x), $(w.x, w.y, w.z)) : $(k.x, k.y, l / s * Y);
                    for (R = f - 1; R >= 0; R--) {
                        for (N = R / f, I = h * Math.cos(N * Math.PI / 2), D = d * Math.sin(N * Math.PI / 2) + p, G = 0, V = P.length; G < V; G++) $((k = O(P[G], H[G], D)).x, k.y, l + I);
                        for (T = 0, S = L.length; T < S; T++)
                            for (M = L[T], X = J[T], G = 0, V = M.length; G < V; G++) k = O(M[G], X[G], D), E ? $(k.x, k.y + v[s - 1].y, v[s - 1].x + I) : $(k.x, k.y, l + I)
                    }

                    function Q(e, t) {
                        var n, r;
                        for (G = e.length; --G >= 0;) {
                            n = G, (r = G - 1) < 0 && (r = e.length - 1);
                            var i = 0,
                                o = s + 2 * f;
                            for (i = 0; i < o; i++) {
                                var a = B * i,
                                    c = B * (i + 1);
                                ee(t + n + a, t + r + a, t + r + c, t + n + c)
                            }
                        }
                    }

                    function $(e, t, n) {
                        o.push(e), o.push(t), o.push(n)
                    }

                    function K(e, t, i) {
                        te(e), te(t), te(i);
                        var o = r.length / 3,
                            a = g.generateTopUV(n, r, o - 3, o - 2, o - 1);
                        ne(a[0]), ne(a[1]), ne(a[2])
                    }

                    function ee(e, t, i, o) {
                        te(e), te(t), te(o), te(t), te(i), te(o);
                        var a = r.length / 3,
                            s = g.generateSideWallUV(n, r, a - 6, a - 3, a - 2, a - 1);
                        ne(s[0]), ne(s[1]), ne(s[3]), ne(s[1]), ne(s[2]), ne(s[3])
                    }

                    function te(e) {
                        r.push(o[3 * e + 0]), r.push(o[3 * e + 1]), r.push(o[3 * e + 2])
                    }

                    function ne(e) {
                        i.push(e.x), i.push(e.y)
                    }! function () {
                        var e = r.length / 3;
                        if (u) {
                            var t = 0,
                                i = B * t;
                            for (G = 0; G < F; G++) K((z = C[G])[2] + i, z[1] + i, z[0] + i);
                            for (i = B * (t = s + 2 * f), G = 0; G < F; G++) K((z = C[G])[0] + i, z[1] + i, z[2] + i)
                        } else {
                            for (G = 0; G < F; G++) K((z = C[G])[2], z[1], z[0]);
                            for (G = 0; G < F; G++) K((z = C[G])[0] + B * s, z[1] + B * s, z[2] + B * s)
                        }
                        n.addGroup(e, r.length / 3 - e, 0)
                    }(),
                    function () {
                        var e = r.length / 3,
                            t = 0;
                        for (Q(P, t), t += P.length, T = 0, S = L.length; T < S; T++) Q(M = L[T], t), t += M.length;
                        n.addGroup(e, r.length / 3 - e, 1)
                    }()
                }
                this.setAttribute("position", new Ke(r, 3)), this.setAttribute("uv", new Ke(i, 2)), this.computeVertexNormals()
            }
            na.prototype = Object.create(Nt.prototype), na.prototype.constructor = na, na.prototype.toJSON = function () {
                var e = Nt.prototype.toJSON.call(this);
                return oa(this.parameters.shapes, this.parameters.options, e)
            }, ra.prototype = Object.create(ut.prototype), ra.prototype.constructor = ra, ra.prototype.toJSON = function () {
                var e = ut.prototype.toJSON.call(this);
                return oa(this.parameters.shapes, this.parameters.options, e)
            };
            var ia = {
                generateTopUV: function (e, t, n, r, i) {
                    var o = t[3 * n],
                        a = t[3 * n + 1],
                        s = t[3 * r],
                        l = t[3 * r + 1],
                        u = t[3 * i],
                        h = t[3 * i + 1];
                    return [new c(o, a), new c(s, l), new c(u, h)]
                },
                generateSideWallUV: function (e, t, n, r, i, o) {
                    var a = t[3 * n],
                        s = t[3 * n + 1],
                        l = t[3 * n + 2],
                        u = t[3 * r],
                        h = t[3 * r + 1],
                        d = t[3 * r + 2],
                        p = t[3 * i],
                        f = t[3 * i + 1],
                        m = t[3 * i + 2],
                        g = t[3 * o],
                        v = t[3 * o + 1],
                        y = t[3 * o + 2];
                    return Math.abs(s - h) < .01 ? [new c(a, 1 - l), new c(u, 1 - d), new c(p, 1 - m), new c(g, 1 - y)] : [new c(s, 1 - l), new c(h, 1 - d), new c(f, 1 - m), new c(v, 1 - y)]
                }
            };

            function oa(e, t, n) {
                if (n.shapes = [], Array.isArray(e))
                    for (var r = 0, i = e.length; r < i; r++) {
                        var o = e[r];
                        n.shapes.push(o.uuid)
                    } else n.shapes.push(e.uuid);
                return void 0 !== t.extrudePath && (n.options.extrudePath = t.extrudePath.toJSON()), n
            }

            function aa(e, t) {
                Nt.call(this), this.type = "TextGeometry", this.parameters = {
                    text: e,
                    parameters: t
                }, this.fromBufferGeometry(new sa(e, t)), this.mergeVertices()
            }

            function sa(e, t) {
                var n = (t = t || {}).font;
                if (!n || !n.isFont) return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."), new Nt;
                var r = n.generateShapes(e, t.size);
                t.depth = void 0 !== t.height ? t.height : 50, void 0 === t.bevelThickness && (t.bevelThickness = 10), void 0 === t.bevelSize && (t.bevelSize = 8), void 0 === t.bevelEnabled && (t.bevelEnabled = !1), ra.call(this, r, t), this.type = "TextBufferGeometry"
            }

            function ca(e, t, n, r, i, o, a) {
                Nt.call(this), this.type = "SphereGeometry", this.parameters = {
                    radius: e,
                    widthSegments: t,
                    heightSegments: n,
                    phiStart: r,
                    phiLength: i,
                    thetaStart: o,
                    thetaLength: a
                }, this.fromBufferGeometry(new la(e, t, n, r, i, o, a)), this.mergeVertices()
            }

            function la(e, t, n, r, i, o, a) {
                ut.call(this), this.type = "SphereBufferGeometry", this.parameters = {
                    radius: e,
                    widthSegments: t,
                    heightSegments: n,
                    phiStart: r,
                    phiLength: i,
                    thetaStart: o,
                    thetaLength: a
                }, e = e || 1, t = Math.max(3, Math.floor(t) || 8), n = Math.max(2, Math.floor(n) || 6), r = void 0 !== r ? r : 0, i = void 0 !== i ? i : 2 * Math.PI, o = void 0 !== o ? o : 0, a = void 0 !== a ? a : Math.PI;
                var s, c, l = Math.min(o + a, Math.PI),
                    u = 0,
                    h = [],
                    d = new _,
                    p = new _,
                    f = [],
                    m = [],
                    g = [],
                    v = [];
                for (c = 0; c <= n; c++) {
                    var y = [],
                        x = c / n,
                        b = 0;
                    for (0 == c && 0 == o ? b = .5 / t : c == n && l == Math.PI && (b = -.5 / t), s = 0; s <= t; s++) {
                        var w = s / t;
                        d.x = -e * Math.cos(r + w * i) * Math.sin(o + x * a), d.y = e * Math.cos(o + x * a), d.z = e * Math.sin(r + w * i) * Math.sin(o + x * a), m.push(d.x, d.y, d.z), p.copy(d).normalize(), g.push(p.x, p.y, p.z), v.push(w + b, 1 - x), y.push(u++)
                    }
                    h.push(y)
                }
                for (c = 0; c < n; c++)
                    for (s = 0; s < t; s++) {
                        var M = h[c][s + 1],
                            T = h[c][s],
                            S = h[c + 1][s],
                            E = h[c + 1][s + 1];
                        (0 !== c || o > 0) && f.push(M, T, E), (c !== n - 1 || l < Math.PI) && f.push(T, S, E)
                    }
                this.setIndex(f), this.setAttribute("position", new Ke(m, 3)), this.setAttribute("normal", new Ke(g, 3)), this.setAttribute("uv", new Ke(v, 2))
            }

            function ua(e, t, n, r, i, o) {
                Nt.call(this), this.type = "RingGeometry", this.parameters = {
                    innerRadius: e,
                    outerRadius: t,
                    thetaSegments: n,
                    phiSegments: r,
                    thetaStart: i,
                    thetaLength: o
                }, this.fromBufferGeometry(new ha(e, t, n, r, i, o)), this.mergeVertices()
            }

            function ha(e, t, n, r, i, o) {
                ut.call(this), this.type = "RingBufferGeometry", this.parameters = {
                    innerRadius: e,
                    outerRadius: t,
                    thetaSegments: n,
                    phiSegments: r,
                    thetaStart: i,
                    thetaLength: o
                }, e = e || .5, t = t || 1, i = void 0 !== i ? i : 0, o = void 0 !== o ? o : 2 * Math.PI, n = void 0 !== n ? Math.max(3, n) : 8;
                var a, s, l, u = [],
                    h = [],
                    d = [],
                    p = [],
                    f = e,
                    m = (t - e) / (r = void 0 !== r ? Math.max(1, r) : 1),
                    g = new _,
                    v = new c;
                for (s = 0; s <= r; s++) {
                    for (l = 0; l <= n; l++) a = i + l / n * o, g.x = f * Math.cos(a), g.y = f * Math.sin(a), h.push(g.x, g.y, g.z), d.push(0, 0, 1), v.x = (g.x / t + 1) / 2, v.y = (g.y / t + 1) / 2, p.push(v.x, v.y);
                    f += m
                }
                for (s = 0; s < r; s++) {
                    var y = s * (n + 1);
                    for (l = 0; l < n; l++) {
                        var x = a = l + y,
                            b = a + n + 1,
                            w = a + n + 2,
                            M = a + 1;
                        u.push(x, b, M), u.push(b, w, M)
                    }
                }
                this.setIndex(u), this.setAttribute("position", new Ke(h, 3)), this.setAttribute("normal", new Ke(d, 3)), this.setAttribute("uv", new Ke(p, 2))
            }

            function da(e, t, n, r) {
                Nt.call(this), this.type = "LatheGeometry", this.parameters = {
                    points: e,
                    segments: t,
                    phiStart: n,
                    phiLength: r
                }, this.fromBufferGeometry(new pa(e, t, n, r)), this.mergeVertices()
            }

            function pa(e, t, n, r) {
                ut.call(this), this.type = "LatheBufferGeometry", this.parameters = {
                    points: e,
                    segments: t,
                    phiStart: n,
                    phiLength: r
                }, t = Math.floor(t) || 12, n = n || 0, r = r || 2 * Math.PI, r = s.clamp(r, 0, 2 * Math.PI);
                var i, o, a, l = [],
                    u = [],
                    h = [],
                    d = 1 / t,
                    p = new _,
                    f = new c;
                for (o = 0; o <= t; o++) {
                    var m = n + o * d * r,
                        g = Math.sin(m),
                        v = Math.cos(m);
                    for (a = 0; a <= e.length - 1; a++) p.x = e[a].x * g, p.y = e[a].y, p.z = e[a].x * v, u.push(p.x, p.y, p.z), f.x = o / t, f.y = a / (e.length - 1), h.push(f.x, f.y)
                }
                for (o = 0; o < t; o++)
                    for (a = 0; a < e.length - 1; a++) {
                        var y = i = a + o * e.length,
                            x = i + e.length,
                            b = i + e.length + 1,
                            w = i + 1;
                        l.push(y, x, w), l.push(x, b, w)
                    }
                if (this.setIndex(l), this.setAttribute("position", new Ke(u, 3)), this.setAttribute("uv", new Ke(h, 2)), this.computeVertexNormals(), r === 2 * Math.PI) {
                    var M = this.attributes.normal.array,
                        T = new _,
                        S = new _,
                        E = new _;
                    for (i = t * e.length * 3, o = 0, a = 0; o < e.length; o++, a += 3) T.x = M[a + 0], T.y = M[a + 1], T.z = M[a + 2], S.x = M[i + a + 0], S.y = M[i + a + 1], S.z = M[i + a + 2], E.addVectors(T, S).normalize(), M[a + 0] = M[i + a + 0] = E.x, M[a + 1] = M[i + a + 1] = E.y, M[a + 2] = M[i + a + 2] = E.z
                }
            }

            function fa(e, t) {
                Nt.call(this), this.type = "ShapeGeometry", "object" == typeof t && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."), t = t.curveSegments), this.parameters = {
                    shapes: e,
                    curveSegments: t
                }, this.fromBufferGeometry(new ma(e, t)), this.mergeVertices()
            }

            function ma(e, t) {
                ut.call(this), this.type = "ShapeBufferGeometry", this.parameters = {
                    shapes: e,
                    curveSegments: t
                }, t = t || 12;
                var n = [],
                    r = [],
                    i = [],
                    o = [],
                    a = 0,
                    s = 0;
                if (!1 === Array.isArray(e)) l(e);
                else
                    for (var c = 0; c < e.length; c++) l(e[c]), this.addGroup(a, s, c), a += s, s = 0;

                function l(e) {
                    var a, c, l, u = r.length / 3,
                        h = e.extractPoints(t),
                        d = h.shape,
                        p = h.holes;
                    for (!1 === Ko.isClockWise(d) && (d = d.reverse()), a = 0, c = p.length; a < c; a++) l = p[a], !0 === Ko.isClockWise(l) && (p[a] = l.reverse());
                    var f = Ko.triangulateShape(d, p);
                    for (a = 0, c = p.length; a < c; a++) l = p[a], d = d.concat(l);
                    for (a = 0, c = d.length; a < c; a++) {
                        var m = d[a];
                        r.push(m.x, m.y, 0), i.push(0, 0, 1), o.push(m.x, m.y)
                    }
                    for (a = 0, c = f.length; a < c; a++) {
                        var g = f[a],
                            v = g[0] + u,
                            y = g[1] + u,
                            _ = g[2] + u;
                        n.push(v, y, _), s += 3
                    }
                }
                this.setIndex(n), this.setAttribute("position", new Ke(r, 3)), this.setAttribute("normal", new Ke(i, 3)), this.setAttribute("uv", new Ke(o, 2))
            }

            function ga(e, t) {
                if (t.shapes = [], Array.isArray(e))
                    for (var n = 0, r = e.length; n < r; n++) {
                        var i = e[n];
                        t.shapes.push(i.uuid)
                    } else t.shapes.push(e.uuid);
                return t
            }

            function va(e, t) {
                ut.call(this), this.type = "EdgesGeometry", this.parameters = {
                    thresholdAngle: t
                }, t = void 0 !== t ? t : 1;
                var n, r, i, o, a = [],
                    c = Math.cos(s.DEG2RAD * t),
                    l = [0, 0],
                    u = {},
                    h = ["a", "b", "c"];
                e.isBufferGeometry ? (o = new Nt).fromBufferGeometry(e) : o = e.clone(), o.mergeVertices(), o.computeFaceNormals();
                for (var d = o.vertices, p = o.faces, f = 0, m = p.length; f < m; f++)
                    for (var g = p[f], v = 0; v < 3; v++) n = g[h[v]], r = g[h[(v + 1) % 3]], l[0] = Math.min(n, r), l[1] = Math.max(n, r), void 0 === u[i = l[0] + "," + l[1]] ? u[i] = {
                        index1: l[0],
                        index2: l[1],
                        face1: f,
                        face2: void 0
                    } : u[i].face2 = f;
                for (i in u) {
                    var y = u[i];
                    if (void 0 === y.face2 || p[y.face1].normal.dot(p[y.face2].normal) <= c) {
                        var _ = d[y.index1];
                        a.push(_.x, _.y, _.z), _ = d[y.index2], a.push(_.x, _.y, _.z)
                    }
                }
                this.setAttribute("position", new Ke(a, 3))
            }

            function ya(e, t, n, r, i, o, a, s) {
                Nt.call(this), this.type = "CylinderGeometry", this.parameters = {
                    radiusTop: e,
                    radiusBottom: t,
                    height: n,
                    radialSegments: r,
                    heightSegments: i,
                    openEnded: o,
                    thetaStart: a,
                    thetaLength: s
                }, this.fromBufferGeometry(new _a(e, t, n, r, i, o, a, s)), this.mergeVertices()
            }

            function _a(e, t, n, r, i, o, a, s) {
                ut.call(this), this.type = "CylinderBufferGeometry", this.parameters = {
                    radiusTop: e,
                    radiusBottom: t,
                    height: n,
                    radialSegments: r,
                    heightSegments: i,
                    openEnded: o,
                    thetaStart: a,
                    thetaLength: s
                };
                var l = this;
                e = void 0 !== e ? e : 1, t = void 0 !== t ? t : 1, n = n || 1, r = Math.floor(r) || 8, i = Math.floor(i) || 1, o = void 0 !== o && o, a = void 0 !== a ? a : 0, s = void 0 !== s ? s : 2 * Math.PI;
                var u = [],
                    h = [],
                    d = [],
                    p = [],
                    f = 0,
                    m = [],
                    g = n / 2,
                    v = 0;

                function y(n) {
                    var i, o, m, y = new c,
                        x = new _,
                        b = 0,
                        w = !0 === n ? e : t,
                        M = !0 === n ? 1 : -1;
                    for (o = f, i = 1; i <= r; i++) h.push(0, g * M, 0), d.push(0, M, 0), p.push(.5, .5), f++;
                    for (m = f, i = 0; i <= r; i++) {
                        var T = i / r * s + a,
                            S = Math.cos(T),
                            E = Math.sin(T);
                        x.x = w * E, x.y = g * M, x.z = w * S, h.push(x.x, x.y, x.z), d.push(0, M, 0), y.x = .5 * S + .5, y.y = .5 * E * M + .5, p.push(y.x, y.y), f++
                    }
                    for (i = 0; i < r; i++) {
                        var A = o + i,
                            j = m + i;
                        !0 === n ? u.push(j, j + 1, A) : u.push(j + 1, j, A), b += 3
                    }
                    l.addGroup(v, b, !0 === n ? 1 : 2), v += b
                }! function () {
                    var o, c, y = new _,
                        x = new _,
                        b = 0,
                        w = (t - e) / n;
                    for (c = 0; c <= i; c++) {
                        var M = [],
                            T = c / i,
                            S = T * (t - e) + e;
                        for (o = 0; o <= r; o++) {
                            var E = o / r,
                                A = E * s + a,
                                j = Math.sin(A),
                                L = Math.cos(A);
                            x.x = S * j, x.y = -T * n + g, x.z = S * L, h.push(x.x, x.y, x.z), y.set(j, w, L).normalize(), d.push(y.x, y.y, y.z), p.push(E, 1 - T), M.push(f++)
                        }
                        m.push(M)
                    }
                    for (o = 0; o < r; o++)
                        for (c = 0; c < i; c++) {
                            var C = m[c][o],
                                P = m[c + 1][o],
                                O = m[c + 1][o + 1],
                                R = m[c][o + 1];
                            u.push(C, P, R), u.push(P, O, R), b += 6
                        }
                    l.addGroup(v, b, 0), v += b
                }(), !1 === o && (e > 0 && y(!0), t > 0 && y(!1)), this.setIndex(u), this.setAttribute("position", new Ke(h, 3)), this.setAttribute("normal", new Ke(d, 3)), this.setAttribute("uv", new Ke(p, 2))
            }

            function xa(e, t, n, r, i, o, a) {
                ya.call(this, 0, e, t, n, r, i, o, a), this.type = "ConeGeometry", this.parameters = {
                    radius: e,
                    height: t,
                    radialSegments: n,
                    heightSegments: r,
                    openEnded: i,
                    thetaStart: o,
                    thetaLength: a
                }
            }

            function ba(e, t, n, r, i, o, a) {
                _a.call(this, 0, e, t, n, r, i, o, a), this.type = "ConeBufferGeometry", this.parameters = {
                    radius: e,
                    height: t,
                    radialSegments: n,
                    heightSegments: r,
                    openEnded: i,
                    thetaStart: o,
                    thetaLength: a
                }
            }

            function wa(e, t, n, r) {
                Nt.call(this), this.type = "CircleGeometry", this.parameters = {
                    radius: e,
                    segments: t,
                    thetaStart: n,
                    thetaLength: r
                }, this.fromBufferGeometry(new Ma(e, t, n, r)), this.mergeVertices()
            }

            function Ma(e, t, n, r) {
                ut.call(this), this.type = "CircleBufferGeometry", this.parameters = {
                    radius: e,
                    segments: t,
                    thetaStart: n,
                    thetaLength: r
                }, e = e || 1, t = void 0 !== t ? Math.max(3, t) : 8, n = void 0 !== n ? n : 0, r = void 0 !== r ? r : 2 * Math.PI;
                var i, o, a = [],
                    s = [],
                    l = [],
                    u = [],
                    h = new _,
                    d = new c;
                for (s.push(0, 0, 0), l.push(0, 0, 1), u.push(.5, .5), o = 0, i = 3; o <= t; o++, i += 3) {
                    var p = n + o / t * r;
                    h.x = e * Math.cos(p), h.y = e * Math.sin(p), s.push(h.x, h.y, h.z), l.push(0, 0, 1), d.x = (s[i] / e + 1) / 2, d.y = (s[i + 1] / e + 1) / 2, u.push(d.x, d.y)
                }
                for (i = 1; i <= t; i++) a.push(i, i + 1, 0);
                this.setIndex(a), this.setAttribute("position", new Ke(s, 3)), this.setAttribute("normal", new Ke(l, 3)), this.setAttribute("uv", new Ke(u, 2))
            }
            aa.prototype = Object.create(Nt.prototype), aa.prototype.constructor = aa, sa.prototype = Object.create(ra.prototype), sa.prototype.constructor = sa, ca.prototype = Object.create(Nt.prototype), ca.prototype.constructor = ca, la.prototype = Object.create(ut.prototype), la.prototype.constructor = la, ua.prototype = Object.create(Nt.prototype), ua.prototype.constructor = ua, ha.prototype = Object.create(ut.prototype), ha.prototype.constructor = ha, da.prototype = Object.create(Nt.prototype), da.prototype.constructor = da, pa.prototype = Object.create(ut.prototype), pa.prototype.constructor = pa, fa.prototype = Object.create(Nt.prototype), fa.prototype.constructor = fa, fa.prototype.toJSON = function () {
                var e = Nt.prototype.toJSON.call(this);
                return ga(this.parameters.shapes, e)
            }, ma.prototype = Object.create(ut.prototype), ma.prototype.constructor = ma, ma.prototype.toJSON = function () {
                var e = ut.prototype.toJSON.call(this);
                return ga(this.parameters.shapes, e)
            }, va.prototype = Object.create(ut.prototype), va.prototype.constructor = va, ya.prototype = Object.create(Nt.prototype), ya.prototype.constructor = ya, _a.prototype = Object.create(ut.prototype), _a.prototype.constructor = _a, xa.prototype = Object.create(ya.prototype), xa.prototype.constructor = xa, ba.prototype = Object.create(_a.prototype), ba.prototype.constructor = ba, wa.prototype = Object.create(Nt.prototype), wa.prototype.constructor = wa, Ma.prototype = Object.create(ut.prototype), Ma.prototype.constructor = Ma;
            var Ta = Object.freeze({
                __proto__: null,
                WireframeGeometry: co,
                ParametricGeometry: lo,
                ParametricBufferGeometry: uo,
                TetrahedronGeometry: fo,
                TetrahedronBufferGeometry: mo,
                OctahedronGeometry: go,
                OctahedronBufferGeometry: vo,
                IcosahedronGeometry: yo,
                IcosahedronBufferGeometry: _o,
                DodecahedronGeometry: xo,
                DodecahedronBufferGeometry: bo,
                PolyhedronGeometry: ho,
                PolyhedronBufferGeometry: po,
                TubeGeometry: wo,
                TubeBufferGeometry: Mo,
                TorusKnotGeometry: To,
                TorusKnotBufferGeometry: So,
                TorusGeometry: Eo,
                TorusBufferGeometry: Ao,
                TextGeometry: aa,
                TextBufferGeometry: sa,
                SphereGeometry: ca,
                SphereBufferGeometry: la,
                RingGeometry: ua,
                RingBufferGeometry: ha,
                PlaneGeometry: $t,
                PlaneBufferGeometry: Kt,
                LatheGeometry: da,
                LatheBufferGeometry: pa,
                ShapeGeometry: fa,
                ShapeBufferGeometry: ma,
                ExtrudeGeometry: na,
                ExtrudeBufferGeometry: ra,
                EdgesGeometry: va,
                ConeGeometry: xa,
                ConeBufferGeometry: ba,
                CylinderGeometry: ya,
                CylinderBufferGeometry: _a,
                CircleGeometry: wa,
                CircleBufferGeometry: Ma,
                BoxGeometry: class extends Nt {
                    constructor(e, t, n, r, i, o) {
                        super(), this.type = "BoxGeometry", this.parameters = {
                            width: e,
                            height: t,
                            depth: n,
                            widthSegments: r,
                            heightSegments: i,
                            depthSegments: o
                        }, this.fromBufferGeometry(new It(e, t, n, r, i, o)), this.mergeVertices()
                    }
                },
                BoxBufferGeometry: It
            });

            function Sa(e) {
                He.call(this), this.type = "ShadowMaterial", this.color = new Ie(0), this.transparent = !0, this.setValues(e)
            }

            function Ea(e) {
                Ft.call(this, e), this.type = "RawShaderMaterial"
            }

            function Aa(e) {
                He.call(this), this.defines = {
                    STANDARD: ""
                }, this.type = "MeshStandardMaterial", this.color = new Ie(16777215), this.roughness = 1, this.metalness = 0, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Ie(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new c(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.vertexTangents = !1, this.setValues(e)
            }

            function ja(e) {
                Aa.call(this), this.defines = {
                    STANDARD: "",
                    PHYSICAL: ""
                }, this.type = "MeshPhysicalMaterial", this.clearcoat = 0, this.clearcoatMap = null, this.clearcoatRoughness = 0, this.clearcoatRoughnessMap = null, this.clearcoatNormalScale = new c(1, 1), this.clearcoatNormalMap = null, this.reflectivity = .5, this.sheen = null, this.transparency = 0, this.setValues(e)
            }

            function La(e) {
                He.call(this), this.type = "MeshPhongMaterial", this.color = new Ie(16777215), this.specular = new Ie(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Ie(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new c(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = 0, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e)
            }

            function Ca(e) {
                He.call(this), this.defines = {
                    TOON: ""
                }, this.type = "MeshToonMaterial", this.color = new Ie(16777215), this.specular = new Ie(1118481), this.shininess = 30, this.map = null, this.gradientMap = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Ie(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new c(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e)
            }

            function Pa(e) {
                He.call(this), this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new c(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e)
            }

            function Oa(e) {
                He.call(this), this.type = "MeshLambertMaterial", this.color = new Ie(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Ie(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = 0, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e)
            }

            function Ra(e) {
                He.call(this), this.defines = {
                    MATCAP: ""
                }, this.type = "MeshMatcapMaterial", this.color = new Ie(16777215), this.matcap = null, this.map = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new c(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e)
            }

            function Da(e) {
                Fi.call(this), this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(e)
            }
            Sa.prototype = Object.create(He.prototype), Sa.prototype.constructor = Sa, Sa.prototype.isShadowMaterial = !0, Sa.prototype.copy = function (e) {
                return He.prototype.copy.call(this, e), this.color.copy(e.color), this
            }, Ea.prototype = Object.create(Ft.prototype), Ea.prototype.constructor = Ea, Ea.prototype.isRawShaderMaterial = !0, Aa.prototype = Object.create(He.prototype), Aa.prototype.constructor = Aa, Aa.prototype.isMeshStandardMaterial = !0, Aa.prototype.copy = function (e) {
                return He.prototype.copy.call(this, e), this.defines = {
                    STANDARD: ""
                }, this.color.copy(e.color), this.roughness = e.roughness, this.metalness = e.metalness, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.roughnessMap = e.roughnessMap, this.metalnessMap = e.metalnessMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapIntensity = e.envMapIntensity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this.vertexTangents = e.vertexTangents, this
            }, ja.prototype = Object.create(Aa.prototype), ja.prototype.constructor = ja, ja.prototype.isMeshPhysicalMaterial = !0, ja.prototype.copy = function (e) {
                return Aa.prototype.copy.call(this, e), this.defines = {
                    STANDARD: "",
                    PHYSICAL: ""
                }, this.clearcoat = e.clearcoat, this.clearcoatMap = e.clearcoatMap, this.clearcoatRoughness = e.clearcoatRoughness, this.clearcoatRoughnessMap = e.clearcoatRoughnessMap, this.clearcoatNormalMap = e.clearcoatNormalMap, this.clearcoatNormalScale.copy(e.clearcoatNormalScale), this.reflectivity = e.reflectivity, e.sheen ? this.sheen = (this.sheen || new Ie).copy(e.sheen) : this.sheen = null, this.transparency = e.transparency, this
            }, La.prototype = Object.create(He.prototype), La.prototype.constructor = La, La.prototype.isMeshPhongMaterial = !0, La.prototype.copy = function (e) {
                return He.prototype.copy.call(this, e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this
            }, Ca.prototype = Object.create(He.prototype), Ca.prototype.constructor = Ca, Ca.prototype.isMeshToonMaterial = !0, Ca.prototype.copy = function (e) {
                return He.prototype.copy.call(this, e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.gradientMap = e.gradientMap, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this
            }, Pa.prototype = Object.create(He.prototype), Pa.prototype.constructor = Pa, Pa.prototype.isMeshNormalMaterial = !0, Pa.prototype.copy = function (e) {
                return He.prototype.copy.call(this, e), this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this
            }, Oa.prototype = Object.create(He.prototype), Oa.prototype.constructor = Oa, Oa.prototype.isMeshLambertMaterial = !0, Oa.prototype.copy = function (e) {
                return He.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this
            }, Ra.prototype = Object.create(He.prototype), Ra.prototype.constructor = Ra, Ra.prototype.isMeshMatcapMaterial = !0, Ra.prototype.copy = function (e) {
                return He.prototype.copy.call(this, e), this.defines = {
                    MATCAP: ""
                }, this.color.copy(e.color), this.matcap = e.matcap, this.map = e.map, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this
            }, Da.prototype = Object.create(Fi.prototype), Da.prototype.constructor = Da, Da.prototype.isLineDashedMaterial = !0, Da.prototype.copy = function (e) {
                return Fi.prototype.copy.call(this, e), this.scale = e.scale, this.dashSize = e.dashSize, this.gapSize = e.gapSize, this
            };
            var Na = Object.freeze({
                    __proto__: null,
                    ShadowMaterial: Sa,
                    SpriteMaterial: si,
                    RawShaderMaterial: Ea,
                    ShaderMaterial: Ft,
                    PointsMaterial: Qi,
                    MeshPhysicalMaterial: ja,
                    MeshStandardMaterial: Aa,
                    MeshPhongMaterial: La,
                    MeshToonMaterial: Ca,
                    MeshNormalMaterial: Pa,
                    MeshLambertMaterial: Oa,
                    MeshDepthMaterial: Gr,
                    MeshDistanceMaterial: Vr,
                    MeshBasicMaterial: Ge,
                    MeshMatcapMaterial: Ra,
                    LineDashedMaterial: Da,
                    LineBasicMaterial: Fi,
                    Material: He
                }),
                Ia = {
                    arraySlice: function (e, t, n) {
                        return Ia.isTypedArray(e) ? new e.constructor(e.subarray(t, void 0 !== n ? n : e.length)) : e.slice(t, n)
                    },
                    convertArray: function (e, t, n) {
                        return !e || !n && e.constructor === t ? e : "number" == typeof t.BYTES_PER_ELEMENT ? new t(e) : Array.prototype.slice.call(e)
                    },
                    isTypedArray: function (e) {
                        return ArrayBuffer.isView(e) && !(e instanceof DataView)
                    },
                    getKeyframeOrder: function (e) {
                        for (var t = e.length, n = new Array(t), r = 0; r !== t; ++r) n[r] = r;
                        return n.sort((function (t, n) {
                            return e[t] - e[n]
                        })), n
                    },
                    sortedArray: function (e, t, n) {
                        for (var r = e.length, i = new e.constructor(r), o = 0, a = 0; a !== r; ++o)
                            for (var s = n[o] * t, c = 0; c !== t; ++c) i[a++] = e[s + c];
                        return i
                    },
                    flattenJSON: function (e, t, n, r) {
                        for (var i = 1, o = e[0]; void 0 !== o && void 0 === o[r];) o = e[i++];
                        if (void 0 !== o) {
                            var a = o[r];
                            if (void 0 !== a)
                                if (Array.isArray(a))
                                    do {
                                        void 0 !== (a = o[r]) && (t.push(o.time), n.push.apply(n, a)), o = e[i++]
                                    } while (void 0 !== o);
                                else if (void 0 !== a.toArray)
                                do {
                                    void 0 !== (a = o[r]) && (t.push(o.time), a.toArray(n, n.length)), o = e[i++]
                                } while (void 0 !== o);
                            else
                                do {
                                    void 0 !== (a = o[r]) && (t.push(o.time), n.push(a)), o = e[i++]
                                } while (void 0 !== o)
                        }
                    },
                    subclip: function (e, t, n, r, i) {
                        i = i || 30;
                        var o = e.clone();
                        o.name = t;
                        for (var a = [], s = 0; s < o.tracks.length; ++s) {
                            for (var c = o.tracks[s], l = c.getValueSize(), u = [], h = [], d = 0; d < c.times.length; ++d) {
                                var p = c.times[d] * i;
                                if (!(p < n || p >= r)) {
                                    u.push(c.times[d]);
                                    for (var f = 0; f < l; ++f) h.push(c.values[d * l + f])
                                }
                            }
                            0 !== u.length && (c.times = Ia.convertArray(u, c.times.constructor), c.values = Ia.convertArray(h, c.values.constructor), a.push(c))
                        }
                        o.tracks = a;
                        var m = 1 / 0;
                        for (s = 0; s < o.tracks.length; ++s) m > o.tracks[s].times[0] && (m = o.tracks[s].times[0]);
                        for (s = 0; s < o.tracks.length; ++s) o.tracks[s].shift(-1 * m);
                        return o.resetDuration(), o
                    },
                    makeClipAdditive: function (e, t, n, r) {
                        void 0 === t && (t = 0), void 0 === n && (n = e), (void 0 === r || r <= 0) && (r = 30);
                        for (var i = e.tracks.length, o = t / r, a = 0; a < i; ++a) {
                            var s = n.tracks[a],
                                c = s.ValueTypeName;
                            if ("bool" !== c && "string" !== c) {
                                var l = e.tracks.find((function (e) {
                                    return e.name === s.name && e.ValueTypeName === c
                                }));
                                if (void 0 !== l) {
                                    var u, h = s.getValueSize(),
                                        d = s.times.length - 1;
                                    if (o <= s.times[0]) u = Ia.arraySlice(s.values, 0, s.valueSize);
                                    else if (o >= s.times[d]) {
                                        var p = d * h;
                                        u = Ia.arraySlice(s.values, p)
                                    } else {
                                        var f = s.createInterpolant();
                                        f.evaluate(o), u = f.resultBuffer
                                    }
                                    if ("quaternion" === c) new g(u[0], u[1], u[2], u[3]).normalize().conjugate().toArray(u);
                                    for (var m = l.times.length, v = 0; v < m; ++v) {
                                        var y = v * h;
                                        if ("quaternion" === c) g.multiplyQuaternionsFlat(l.values, y, u, 0, l.values, y);
                                        else
                                            for (var _ = 0; _ < h; ++_) l.values[y + _] -= u[_]
                                    }
                                }
                            }
                        }
                        return e.blendMode = 2501, e
                    }
                };

            function ka(e, t, n, r) {
                this.parameterPositions = e, this._cachedIndex = 0, this.resultBuffer = void 0 !== r ? r : new t.constructor(n), this.sampleValues = t, this.valueSize = n
            }

            function za(e, t, n, r) {
                ka.call(this, e, t, n, r), this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0
            }

            function Ba(e, t, n, r) {
                ka.call(this, e, t, n, r)
            }

            function Fa(e, t, n, r) {
                ka.call(this, e, t, n, r)
            }

            function Ua(e, t, n, r) {
                if (void 0 === e) throw new Error("THREE.KeyframeTrack: track name is undefined");
                if (void 0 === t || 0 === t.length) throw new Error("THREE.KeyframeTrack: no keyframes in track named " + e);
                this.name = e, this.times = Ia.convertArray(t, this.TimeBufferType), this.values = Ia.convertArray(n, this.ValueBufferType), this.setInterpolation(r || this.DefaultInterpolation)
            }

            function Ha(e, t, n) {
                Ua.call(this, e, t, n)
            }

            function Ga(e, t, n, r) {
                Ua.call(this, e, t, n, r)
            }

            function Va(e, t, n, r) {
                Ua.call(this, e, t, n, r)
            }

            function Wa(e, t, n, r) {
                ka.call(this, e, t, n, r)
            }

            function qa(e, t, n, r) {
                Ua.call(this, e, t, n, r)
            }

            function Xa(e, t, n, r) {
                Ua.call(this, e, t, n, r)
            }

            function Ya(e, t, n, r) {
                Ua.call(this, e, t, n, r)
            }

            function Ja(e, t, n, r) {
                this.name = e, this.tracks = n, this.duration = void 0 !== t ? t : -1, this.blendMode = void 0 !== r ? r : 2500, this.uuid = s.generateUUID(), this.duration < 0 && this.resetDuration()
            }

            function Za(e) {
                if (void 0 === e.type) throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
                var t = function (e) {
                    switch (e.toLowerCase()) {
                        case "scalar":
                        case "double":
                        case "float":
                        case "number":
                        case "integer":
                            return Va;
                        case "vector":
                        case "vector2":
                        case "vector3":
                        case "vector4":
                            return Ya;
                        case "color":
                            return Ga;
                        case "quaternion":
                            return qa;
                        case "bool":
                        case "boolean":
                            return Ha;
                        case "string":
                            return Xa
                    }
                    throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + e)
                }(e.type);
                if (void 0 === e.times) {
                    var n = [],
                        r = [];
                    Ia.flattenJSON(e.keys, n, r, "value"), e.times = n, e.values = r
                }
                return void 0 !== t.parse ? t.parse(e) : new t(e.name, e.times, e.values, e.interpolation)
            }
            Object.assign(ka.prototype, {
                evaluate: function (e) {
                    var t = this.parameterPositions,
                        n = this._cachedIndex,
                        r = t[n],
                        i = t[n - 1];
                    e: {
                        t: {
                            var o;n: {
                                r: if (!(e < r)) {
                                    for (var a = n + 2;;) {
                                        if (void 0 === r) {
                                            if (e < i) break r;
                                            return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, e, i)
                                        }
                                        if (n === a) break;
                                        if (i = r, e < (r = t[++n])) break t
                                    }
                                    o = t.length;
                                    break n
                                }if (e >= i) break e;
                                var s = t[1];e < s && (n = 2, i = s);
                                for (a = n - 2;;) {
                                    if (void 0 === i) return this._cachedIndex = 0, this.beforeStart_(0, e, r);
                                    if (n === a) break;
                                    if (r = i, e >= (i = t[--n - 1])) break t
                                }
                                o = n,
                                n = 0
                            }
                            for (; n < o;) {
                                var c = n + o >>> 1;
                                e < t[c] ? o = c : n = c + 1
                            }
                            if (r = t[n], void 0 === (i = t[n - 1])) return this._cachedIndex = 0,
                            this.beforeStart_(0, e, r);
                            if (void 0 === r) return n = t.length,
                            this._cachedIndex = n,
                            this.afterEnd_(n - 1, i, e)
                        }
                        this._cachedIndex = n,
                        this.intervalChanged_(n, i, r)
                    }
                    return this.interpolate_(n, i, e, r)
                },
                settings: null,
                DefaultSettings_: {},
                getSettings_: function () {
                    return this.settings || this.DefaultSettings_
                },
                copySampleValue_: function (e) {
                    for (var t = this.resultBuffer, n = this.sampleValues, r = this.valueSize, i = e * r, o = 0; o !== r; ++o) t[o] = n[i + o];
                    return t
                },
                interpolate_: function () {
                    throw new Error("call to abstract method")
                },
                intervalChanged_: function () {}
            }), Object.assign(ka.prototype, {
                beforeStart_: ka.prototype.copySampleValue_,
                afterEnd_: ka.prototype.copySampleValue_
            }), za.prototype = Object.assign(Object.create(ka.prototype), {
                constructor: za,
                DefaultSettings_: {
                    endingStart: 2400,
                    endingEnd: 2400
                },
                intervalChanged_: function (e, t, n) {
                    var r = this.parameterPositions,
                        i = e - 2,
                        o = e + 1,
                        a = r[i],
                        s = r[o];
                    if (void 0 === a) switch (this.getSettings_().endingStart) {
                        case 2401:
                            i = e, a = 2 * t - n;
                            break;
                        case 2402:
                            a = t + r[i = r.length - 2] - r[i + 1];
                            break;
                        default:
                            i = e, a = n
                    }
                    if (void 0 === s) switch (this.getSettings_().endingEnd) {
                        case 2401:
                            o = e, s = 2 * n - t;
                            break;
                        case 2402:
                            o = 1, s = n + r[1] - r[0];
                            break;
                        default:
                            o = e - 1, s = t
                    }
                    var c = .5 * (n - t),
                        l = this.valueSize;
                    this._weightPrev = c / (t - a), this._weightNext = c / (s - n), this._offsetPrev = i * l, this._offsetNext = o * l
                },
                interpolate_: function (e, t, n, r) {
                    for (var i = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = e * a, c = s - a, l = this._offsetPrev, u = this._offsetNext, h = this._weightPrev, d = this._weightNext, p = (n - t) / (r - t), f = p * p, m = f * p, g = -h * m + 2 * h * f - h * p, v = (1 + h) * m + (-1.5 - 2 * h) * f + (-.5 + h) * p + 1, y = (-1 - d) * m + (1.5 + d) * f + .5 * p, _ = d * m - d * f, x = 0; x !== a; ++x) i[x] = g * o[l + x] + v * o[c + x] + y * o[s + x] + _ * o[u + x];
                    return i
                }
            }), Ba.prototype = Object.assign(Object.create(ka.prototype), {
                constructor: Ba,
                interpolate_: function (e, t, n, r) {
                    for (var i = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = e * a, c = s - a, l = (n - t) / (r - t), u = 1 - l, h = 0; h !== a; ++h) i[h] = o[c + h] * u + o[s + h] * l;
                    return i
                }
            }), Fa.prototype = Object.assign(Object.create(ka.prototype), {
                constructor: Fa,
                interpolate_: function (e) {
                    return this.copySampleValue_(e - 1)
                }
            }), Object.assign(Ua, {
                toJSON: function (e) {
                    var t, n = e.constructor;
                    if (void 0 !== n.toJSON) t = n.toJSON(e);
                    else {
                        t = {
                            name: e.name,
                            times: Ia.convertArray(e.times, Array),
                            values: Ia.convertArray(e.values, Array)
                        };
                        var r = e.getInterpolation();
                        r !== e.DefaultInterpolation && (t.interpolation = r)
                    }
                    return t.type = e.ValueTypeName, t
                }
            }), Object.assign(Ua.prototype, {
                constructor: Ua,
                TimeBufferType: Float32Array,
                ValueBufferType: Float32Array,
                DefaultInterpolation: 2301,
                InterpolantFactoryMethodDiscrete: function (e) {
                    return new Fa(this.times, this.values, this.getValueSize(), e)
                },
                InterpolantFactoryMethodLinear: function (e) {
                    return new Ba(this.times, this.values, this.getValueSize(), e)
                },
                InterpolantFactoryMethodSmooth: function (e) {
                    return new za(this.times, this.values, this.getValueSize(), e)
                },
                setInterpolation: function (e) {
                    var t;
                    switch (e) {
                        case 2300:
                            t = this.InterpolantFactoryMethodDiscrete;
                            break;
                        case 2301:
                            t = this.InterpolantFactoryMethodLinear;
                            break;
                        case 2302:
                            t = this.InterpolantFactoryMethodSmooth
                    }
                    if (void 0 === t) {
                        var n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                        if (void 0 === this.createInterpolant) {
                            if (e === this.DefaultInterpolation) throw new Error(n);
                            this.setInterpolation(this.DefaultInterpolation)
                        }
                        return console.warn("THREE.KeyframeTrack:", n), this
                    }
                    return this.createInterpolant = t, this
                },
                getInterpolation: function () {
                    switch (this.createInterpolant) {
                        case this.InterpolantFactoryMethodDiscrete:
                            return 2300;
                        case this.InterpolantFactoryMethodLinear:
                            return 2301;
                        case this.InterpolantFactoryMethodSmooth:
                            return 2302
                    }
                },
                getValueSize: function () {
                    return this.values.length / this.times.length
                },
                shift: function (e) {
                    if (0 !== e)
                        for (var t = this.times, n = 0, r = t.length; n !== r; ++n) t[n] += e;
                    return this
                },
                scale: function (e) {
                    if (1 !== e)
                        for (var t = this.times, n = 0, r = t.length; n !== r; ++n) t[n] *= e;
                    return this
                },
                trim: function (e, t) {
                    for (var n = this.times, r = n.length, i = 0, o = r - 1; i !== r && n[i] < e;) ++i;
                    for (; - 1 !== o && n[o] > t;) --o;
                    if (++o, 0 !== i || o !== r) {
                        i >= o && (i = (o = Math.max(o, 1)) - 1);
                        var a = this.getValueSize();
                        this.times = Ia.arraySlice(n, i, o), this.values = Ia.arraySlice(this.values, i * a, o * a)
                    }
                    return this
                },
                validate: function () {
                    var e = !0,
                        t = this.getValueSize();
                    t - Math.floor(t) != 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), e = !1);
                    var n = this.times,
                        r = this.values,
                        i = n.length;
                    0 === i && (console.error("THREE.KeyframeTrack: Track is empty.", this), e = !1);
                    for (var o = null, a = 0; a !== i; a++) {
                        var s = n[a];
                        if ("number" == typeof s && isNaN(s)) {
                            console.error("THREE.KeyframeTrack: Time is not a valid number.", this, a, s), e = !1;
                            break
                        }
                        if (null !== o && o > s) {
                            console.error("THREE.KeyframeTrack: Out of order keys.", this, a, s, o), e = !1;
                            break
                        }
                        o = s
                    }
                    if (void 0 !== r && Ia.isTypedArray(r)) {
                        a = 0;
                        for (var c = r.length; a !== c; ++a) {
                            var l = r[a];
                            if (isNaN(l)) {
                                console.error("THREE.KeyframeTrack: Value is not a valid number.", this, a, l), e = !1;
                                break
                            }
                        }
                    }
                    return e
                },
                optimize: function () {
                    for (var e = Ia.arraySlice(this.times), t = Ia.arraySlice(this.values), n = this.getValueSize(), r = 2302 === this.getInterpolation(), i = 1, o = e.length - 1, a = 1; a < o; ++a) {
                        var s = !1,
                            c = e[a];
                        if (c !== e[a + 1] && (1 !== a || c !== c[0]))
                            if (r) s = !0;
                            else
                                for (var l = a * n, u = l - n, h = l + n, d = 0; d !== n; ++d) {
                                    var p = t[l + d];
                                    if (p !== t[u + d] || p !== t[h + d]) {
                                        s = !0;
                                        break
                                    }
                                }
                        if (s) {
                            if (a !== i) {
                                e[i] = e[a];
                                var f = a * n,
                                    m = i * n;
                                for (d = 0; d !== n; ++d) t[m + d] = t[f + d]
                            }++i
                        }
                    }
                    if (o > 0) {
                        e[i] = e[o];
                        for (f = o * n, m = i * n, d = 0; d !== n; ++d) t[m + d] = t[f + d];
                        ++i
                    }
                    return i !== e.length ? (this.times = Ia.arraySlice(e, 0, i), this.values = Ia.arraySlice(t, 0, i * n)) : (this.times = e, this.values = t), this
                },
                clone: function () {
                    var e = Ia.arraySlice(this.times, 0),
                        t = Ia.arraySlice(this.values, 0),
                        n = new(0, this.constructor)(this.name, e, t);
                    return n.createInterpolant = this.createInterpolant, n
                }
            }), Ha.prototype = Object.assign(Object.create(Ua.prototype), {
                constructor: Ha,
                ValueTypeName: "bool",
                ValueBufferType: Array,
                DefaultInterpolation: 2300,
                InterpolantFactoryMethodLinear: void 0,
                InterpolantFactoryMethodSmooth: void 0
            }), Ga.prototype = Object.assign(Object.create(Ua.prototype), {
                constructor: Ga,
                ValueTypeName: "color"
            }), Va.prototype = Object.assign(Object.create(Ua.prototype), {
                constructor: Va,
                ValueTypeName: "number"
            }), Wa.prototype = Object.assign(Object.create(ka.prototype), {
                constructor: Wa,
                interpolate_: function (e, t, n, r) {
                    for (var i = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = e * a, c = (n - t) / (r - t), l = s + a; s !== l; s += 4) g.slerpFlat(i, 0, o, s - a, o, s, c);
                    return i
                }
            }), qa.prototype = Object.assign(Object.create(Ua.prototype), {
                constructor: qa,
                ValueTypeName: "quaternion",
                DefaultInterpolation: 2301,
                InterpolantFactoryMethodLinear: function (e) {
                    return new Wa(this.times, this.values, this.getValueSize(), e)
                },
                InterpolantFactoryMethodSmooth: void 0
            }), Xa.prototype = Object.assign(Object.create(Ua.prototype), {
                constructor: Xa,
                ValueTypeName: "string",
                ValueBufferType: Array,
                DefaultInterpolation: 2300,
                InterpolantFactoryMethodLinear: void 0,
                InterpolantFactoryMethodSmooth: void 0
            }), Ya.prototype = Object.assign(Object.create(Ua.prototype), {
                constructor: Ya,
                ValueTypeName: "vector"
            }), Object.assign(Ja, {
                parse: function (e) {
                    for (var t = [], n = e.tracks, r = 1 / (e.fps || 1), i = 0, o = n.length; i !== o; ++i) t.push(Za(n[i]).scale(r));
                    return new Ja(e.name, e.duration, t, e.blendMode)
                },
                toJSON: function (e) {
                    for (var t = [], n = e.tracks, r = {
                            name: e.name,
                            duration: e.duration,
                            tracks: t,
                            uuid: e.uuid,
                            blendMode: e.blendMode
                        }, i = 0, o = n.length; i !== o; ++i) t.push(Ua.toJSON(n[i]));
                    return r
                },
                CreateFromMorphTargetSequence: function (e, t, n, r) {
                    for (var i = t.length, o = [], a = 0; a < i; a++) {
                        var s = [],
                            c = [];
                        s.push((a + i - 1) % i, a, (a + 1) % i), c.push(0, 1, 0);
                        var l = Ia.getKeyframeOrder(s);
                        s = Ia.sortedArray(s, 1, l), c = Ia.sortedArray(c, 1, l), r || 0 !== s[0] || (s.push(i), c.push(c[0])), o.push(new Va(".morphTargetInfluences[" + t[a].name + "]", s, c).scale(1 / n))
                    }
                    return new Ja(e, -1, o)
                },
                findByName: function (e, t) {
                    var n = e;
                    if (!Array.isArray(e)) {
                        var r = e;
                        n = r.geometry && r.geometry.animations || r.animations
                    }
                    for (var i = 0; i < n.length; i++)
                        if (n[i].name === t) return n[i];
                    return null
                },
                CreateClipsFromMorphTargetSequences: function (e, t, n) {
                    for (var r = {}, i = /^([\w-]*?)([\d]+)$/, o = 0, a = e.length; o < a; o++) {
                        var s = e[o],
                            c = s.name.match(i);
                        if (c && c.length > 1) {
                            var l = r[h = c[1]];
                            l || (r[h] = l = []), l.push(s)
                        }
                    }
                    var u = [];
                    for (var h in r) u.push(Ja.CreateFromMorphTargetSequence(h, r[h], t, n));
                    return u
                },
                parseAnimation: function (e, t) {
                    if (!e) return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
                    for (var n = function (e, t, n, r, i) {
                            if (0 !== n.length) {
                                var o = [],
                                    a = [];
                                Ia.flattenJSON(n, o, a, r), 0 !== o.length && i.push(new e(t, o, a))
                            }
                        }, r = [], i = e.name || "default", o = e.length || -1, a = e.fps || 30, s = e.blendMode, c = e.hierarchy || [], l = 0; l < c.length; l++) {
                        var u = c[l].keys;
                        if (u && 0 !== u.length)
                            if (u[0].morphTargets) {
                                for (var h = {}, d = 0; d < u.length; d++)
                                    if (u[d].morphTargets)
                                        for (var p = 0; p < u[d].morphTargets.length; p++) h[u[d].morphTargets[p]] = -1;
                                for (var f in h) {
                                    var m = [],
                                        g = [];
                                    for (p = 0; p !== u[d].morphTargets.length; ++p) {
                                        var v = u[d];
                                        m.push(v.time), g.push(v.morphTarget === f ? 1 : 0)
                                    }
                                    r.push(new Va(".morphTargetInfluence[" + f + "]", m, g))
                                }
                                o = h.length * (a || 1)
                            } else {
                                var y = ".bones[" + t[l].name + "]";
                                n(Ya, y + ".position", u, "pos", r), n(qa, y + ".quaternion", u, "rot", r), n(Ya, y + ".scale", u, "scl", r)
                            }
                    }
                    return 0 === r.length ? null : new Ja(i, o, r, s)
                }
            }), Object.assign(Ja.prototype, {
                resetDuration: function () {
                    for (var e = 0, t = 0, n = this.tracks.length; t !== n; ++t) {
                        var r = this.tracks[t];
                        e = Math.max(e, r.times[r.times.length - 1])
                    }
                    return this.duration = e, this
                },
                trim: function () {
                    for (var e = 0; e < this.tracks.length; e++) this.tracks[e].trim(0, this.duration);
                    return this
                },
                validate: function () {
                    for (var e = !0, t = 0; t < this.tracks.length; t++) e = e && this.tracks[t].validate();
                    return e
                },
                optimize: function () {
                    for (var e = 0; e < this.tracks.length; e++) this.tracks[e].optimize();
                    return this
                },
                clone: function () {
                    for (var e = [], t = 0; t < this.tracks.length; t++) e.push(this.tracks[t].clone());
                    return new Ja(this.name, this.duration, e, this.blendMode)
                }
            });
            var Qa = {
                enabled: !1,
                files: {},
                add: function (e, t) {
                    !1 !== this.enabled && (this.files[e] = t)
                },
                get: function (e) {
                    if (!1 !== this.enabled) return this.files[e]
                },
                remove: function (e) {
                    delete this.files[e]
                },
                clear: function () {
                    this.files = {}
                }
            };

            function $a(e, t, n) {
                var r = this,
                    i = !1,
                    o = 0,
                    a = 0,
                    s = void 0,
                    c = [];
                this.onStart = void 0, this.onLoad = e, this.onProgress = t, this.onError = n, this.itemStart = function (e) {
                    a++, !1 === i && void 0 !== r.onStart && r.onStart(e, o, a), i = !0
                }, this.itemEnd = function (e) {
                    o++, void 0 !== r.onProgress && r.onProgress(e, o, a), o === a && (i = !1, void 0 !== r.onLoad && r.onLoad())
                }, this.itemError = function (e) {
                    void 0 !== r.onError && r.onError(e)
                }, this.resolveURL = function (e) {
                    return s ? s(e) : e
                }, this.setURLModifier = function (e) {
                    return s = e, this
                }, this.addHandler = function (e, t) {
                    return c.push(e, t), this
                }, this.removeHandler = function (e) {
                    var t = c.indexOf(e);
                    return -1 !== t && c.splice(t, 2), this
                }, this.getHandler = function (e) {
                    for (var t = 0, n = c.length; t < n; t += 2) {
                        var r = c[t],
                            i = c[t + 1];
                        if (r.global && (r.lastIndex = 0), r.test(e)) return i
                    }
                    return null
                }
            }
            var Ka = new $a;

            function es(e) {
                this.manager = void 0 !== e ? e : Ka, this.crossOrigin = "anonymous", this.path = "", this.resourcePath = "", this.requestHeader = {}
            }
            Object.assign(es.prototype, {
                load: function () {},
                loadAsync: function (e, t) {
                    var n = this;
                    return new Promise((function (r, i) {
                        n.load(e, r, t, i)
                    }))
                },
                parse: function () {},
                setCrossOrigin: function (e) {
                    return this.crossOrigin = e, this
                },
                setPath: function (e) {
                    return this.path = e, this
                },
                setResourcePath: function (e) {
                    return this.resourcePath = e, this
                },
                setRequestHeader: function (e) {
                    return this.requestHeader = e, this
                }
            });
            var ts = {};

            function ns(e) {
                es.call(this, e)
            }

            function rs(e) {
                es.call(this, e)
            }

            function is(e) {
                es.call(this, e)
            }

            function os(e) {
                es.call(this, e)
            }

            function as(e) {
                es.call(this, e)
            }

            function ss(e) {
                es.call(this, e)
            }

            function cs(e) {
                es.call(this, e)
            }

            function ls() {
                this.type = "Curve", this.arcLengthDivisions = 200
            }

            function us(e, t, n, r, i, o, a, s) {
                ls.call(this), this.type = "EllipseCurve", this.aX = e || 0, this.aY = t || 0, this.xRadius = n || 1, this.yRadius = r || 1, this.aStartAngle = i || 0, this.aEndAngle = o || 2 * Math.PI, this.aClockwise = a || !1, this.aRotation = s || 0
            }

            function hs(e, t, n, r, i, o) {
                us.call(this, e, t, n, n, r, i, o), this.type = "ArcCurve"
            }

            function ds() {
                var e = 0,
                    t = 0,
                    n = 0,
                    r = 0;

                function i(i, o, a, s) {
                    e = i, t = a, n = -3 * i + 3 * o - 2 * a - s, r = 2 * i - 2 * o + a + s
                }
                return {
                    initCatmullRom: function (e, t, n, r, o) {
                        i(t, n, o * (n - e), o * (r - t))
                    },
                    initNonuniformCatmullRom: function (e, t, n, r, o, a, s) {
                        var c = (t - e) / o - (n - e) / (o + a) + (n - t) / a,
                            l = (n - t) / a - (r - t) / (a + s) + (r - n) / s;
                        i(t, n, c *= a, l *= a)
                    },
                    calc: function (i) {
                        var o = i * i;
                        return e + t * i + n * o + r * (o * i)
                    }
                }
            }
            ns.prototype = Object.assign(Object.create(es.prototype), {
                constructor: ns,
                load: function (e, t, n, r) {
                    void 0 === e && (e = ""), void 0 !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
                    var i = this,
                        o = Qa.get(e);
                    if (void 0 !== o) return i.manager.itemStart(e), setTimeout((function () {
                        t && t(o), i.manager.itemEnd(e)
                    }), 0), o;
                    if (void 0 === ts[e]) {
                        var a = e.match(/^data:(.*?)(;base64)?,(.*)$/);
                        if (a) {
                            var s = a[1],
                                c = !!a[2],
                                l = a[3];
                            l = decodeURIComponent(l), c && (l = atob(l));
                            try {
                                var u, h = (this.responseType || "").toLowerCase();
                                switch (h) {
                                    case "arraybuffer":
                                    case "blob":
                                        for (var d = new Uint8Array(l.length), p = 0; p < l.length; p++) d[p] = l.charCodeAt(p);
                                        u = "blob" === h ? new Blob([d.buffer], {
                                            type: s
                                        }) : d.buffer;
                                        break;
                                    case "document":
                                        var f = new DOMParser;
                                        u = f.parseFromString(l, s);
                                        break;
                                    case "json":
                                        u = JSON.parse(l);
                                        break;
                                    default:
                                        u = l
                                }
                                setTimeout((function () {
                                    t && t(u), i.manager.itemEnd(e)
                                }), 0)
                            } catch (t) {
                                setTimeout((function () {
                                    r && r(t), i.manager.itemError(e), i.manager.itemEnd(e)
                                }), 0)
                            }
                        } else {
                            ts[e] = [], ts[e].push({
                                onLoad: t,
                                onProgress: n,
                                onError: r
                            });
                            var m = new XMLHttpRequest;
                            for (var g in m.open("GET", e, !0), m.addEventListener("load", (function (t) {
                                    var n = this.response,
                                        r = ts[e];
                                    if (delete ts[e], 200 === this.status || 0 === this.status) {
                                        0 === this.status && console.warn("THREE.FileLoader: HTTP Status 0 received."), Qa.add(e, n);
                                        for (var o = 0, a = r.length; o < a; o++) {
                                            (s = r[o]).onLoad && s.onLoad(n)
                                        }
                                        i.manager.itemEnd(e)
                                    } else {
                                        for (o = 0, a = r.length; o < a; o++) {
                                            var s;
                                            (s = r[o]).onError && s.onError(t)
                                        }
                                        i.manager.itemError(e), i.manager.itemEnd(e)
                                    }
                                }), !1), m.addEventListener("progress", (function (t) {
                                    for (var n = ts[e], r = 0, i = n.length; r < i; r++) {
                                        var o = n[r];
                                        o.onProgress && o.onProgress(t)
                                    }
                                }), !1), m.addEventListener("error", (function (t) {
                                    var n = ts[e];
                                    delete ts[e];
                                    for (var r = 0, o = n.length; r < o; r++) {
                                        var a = n[r];
                                        a.onError && a.onError(t)
                                    }
                                    i.manager.itemError(e), i.manager.itemEnd(e)
                                }), !1), m.addEventListener("abort", (function (t) {
                                    var n = ts[e];
                                    delete ts[e];
                                    for (var r = 0, o = n.length; r < o; r++) {
                                        var a = n[r];
                                        a.onError && a.onError(t)
                                    }
                                    i.manager.itemError(e), i.manager.itemEnd(e)
                                }), !1), void 0 !== this.responseType && (m.responseType = this.responseType), void 0 !== this.withCredentials && (m.withCredentials = this.withCredentials), m.overrideMimeType && m.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : "text/plain"), this.requestHeader) m.setRequestHeader(g, this.requestHeader[g]);
                            m.send(null)
                        }
                        return i.manager.itemStart(e), m
                    }
                    ts[e].push({
                        onLoad: t,
                        onProgress: n,
                        onError: r
                    })
                },
                setResponseType: function (e) {
                    return this.responseType = e, this
                },
                setWithCredentials: function (e) {
                    return this.withCredentials = e, this
                },
                setMimeType: function (e) {
                    return this.mimeType = e, this
                }
            }), rs.prototype = Object.assign(Object.create(es.prototype), {
                constructor: rs,
                load: function (e, t, n, r) {
                    var i = this,
                        o = new ns(i.manager);
                    o.setPath(i.path), o.load(e, (function (n) {
                        try {
                            t(i.parse(JSON.parse(n)))
                        } catch (t) {
                            r ? r(t) : console.error(t), i.manager.itemError(e)
                        }
                    }), n, r)
                },
                parse: function (e) {
                    for (var t = [], n = 0; n < e.length; n++) {
                        var r = Ja.parse(e[n]);
                        t.push(r)
                    }
                    return t
                }
            }), is.prototype = Object.assign(Object.create(es.prototype), {
                constructor: is,
                load: function (e, t, n, r) {
                    var i = this,
                        o = [],
                        a = new oo;
                    a.image = o;
                    var s = new ns(this.manager);

                    function c(c) {
                        s.load(e[c], (function (e) {
                            var n = i.parse(e, !0);
                            o[c] = {
                                width: n.width,
                                height: n.height,
                                format: n.format,
                                mipmaps: n.mipmaps
                            }, 6 === (l += 1) && (1 === n.mipmapCount && (a.minFilter = 1006), a.format = n.format, a.needsUpdate = !0, t && t(a))
                        }), n, r)
                    }
                    if (s.setPath(this.path), s.setResponseType("arraybuffer"), Array.isArray(e))
                        for (var l = 0, u = 0, h = e.length; u < h; ++u) c(u);
                    else s.load(e, (function (e) {
                        var n = i.parse(e, !0);
                        if (n.isCubemap)
                            for (var r = n.mipmaps.length / n.mipmapCount, s = 0; s < r; s++) {
                                o[s] = {
                                    mipmaps: []
                                };
                                for (var c = 0; c < n.mipmapCount; c++) o[s].mipmaps.push(n.mipmaps[s * n.mipmapCount + c]), o[s].format = n.format, o[s].width = n.width, o[s].height = n.height
                            } else a.image.width = n.width, a.image.height = n.height, a.mipmaps = n.mipmaps;
                        1 === n.mipmapCount && (a.minFilter = 1006), a.format = n.format, a.needsUpdate = !0, t && t(a)
                    }), n, r);
                    return a
                }
            }), os.prototype = Object.assign(Object.create(es.prototype), {
                constructor: os,
                load: function (e, t, n, r) {
                    var i = this,
                        o = new Wt,
                        a = new ns(this.manager);
                    return a.setResponseType("arraybuffer"), a.setPath(this.path), a.load(e, (function (e) {
                        var n = i.parse(e);
                        n && (void 0 !== n.image ? o.image = n.image : void 0 !== n.data && (o.image.width = n.width, o.image.height = n.height, o.image.data = n.data), o.wrapS = void 0 !== n.wrapS ? n.wrapS : 1001, o.wrapT = void 0 !== n.wrapT ? n.wrapT : 1001, o.magFilter = void 0 !== n.magFilter ? n.magFilter : 1006, o.minFilter = void 0 !== n.minFilter ? n.minFilter : 1006, o.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1, void 0 !== n.format && (o.format = n.format), void 0 !== n.type && (o.type = n.type), void 0 !== n.mipmaps && (o.mipmaps = n.mipmaps, o.minFilter = 1008), 1 === n.mipmapCount && (o.minFilter = 1006), o.needsUpdate = !0, t && t(o, n))
                    }), n, r), o
                }
            }), as.prototype = Object.assign(Object.create(es.prototype), {
                constructor: as,
                load: function (e, t, n, r) {
                    void 0 !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
                    var i = this,
                        o = Qa.get(e);
                    if (void 0 !== o) return i.manager.itemStart(e), setTimeout((function () {
                        t && t(o), i.manager.itemEnd(e)
                    }), 0), o;
                    var a = document.createElementNS("http://www.w3.org/1999/xhtml", "img");

                    function s() {
                        a.removeEventListener("load", s, !1), a.removeEventListener("error", c, !1), Qa.add(e, this), t && t(this), i.manager.itemEnd(e)
                    }

                    function c(t) {
                        a.removeEventListener("load", s, !1), a.removeEventListener("error", c, !1), r && r(t), i.manager.itemError(e), i.manager.itemEnd(e)
                    }
                    return a.addEventListener("load", s, !1), a.addEventListener("error", c, !1), "data:" !== e.substr(0, 5) && void 0 !== this.crossOrigin && (a.crossOrigin = this.crossOrigin), i.manager.itemStart(e), a.src = e, a
                }
            }), ss.prototype = Object.assign(Object.create(es.prototype), {
                constructor: ss,
                load: function (e, t, n, r) {
                    var i = new fn,
                        o = new as(this.manager);
                    o.setCrossOrigin(this.crossOrigin), o.setPath(this.path);
                    var a = 0;

                    function s(n) {
                        o.load(e[n], (function (e) {
                            i.images[n] = e, 6 === ++a && (i.needsUpdate = !0, t && t(i))
                        }), void 0, r)
                    }
                    for (var c = 0; c < e.length; ++c) s(c);
                    return i
                }
            }), cs.prototype = Object.assign(Object.create(es.prototype), {
                constructor: cs,
                load: function (e, t, n, r) {
                    var i = new d,
                        o = new as(this.manager);
                    return o.setCrossOrigin(this.crossOrigin), o.setPath(this.path), o.load(e, (function (n) {
                        i.image = n;
                        var r = e.search(/\.jpe?g($|\?)/i) > 0 || 0 === e.search(/^data\:image\/jpeg/);
                        i.format = r ? 1022 : 1023, i.needsUpdate = !0, void 0 !== t && t(i)
                    }), n, r), i
                }
            }), Object.assign(ls.prototype, {
                getPoint: function () {
                    return console.warn("THREE.Curve: .getPoint() not implemented."), null
                },
                getPointAt: function (e, t) {
                    var n = this.getUtoTmapping(e);
                    return this.getPoint(n, t)
                },
                getPoints: function (e) {
                    void 0 === e && (e = 5);
                    for (var t = [], n = 0; n <= e; n++) t.push(this.getPoint(n / e));
                    return t
                },
                getSpacedPoints: function (e) {
                    void 0 === e && (e = 5);
                    for (var t = [], n = 0; n <= e; n++) t.push(this.getPointAt(n / e));
                    return t
                },
                getLength: function () {
                    var e = this.getLengths();
                    return e[e.length - 1]
                },
                getLengths: function (e) {
                    if (void 0 === e && (e = this.arcLengthDivisions), this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate) return this.cacheArcLengths;
                    this.needsUpdate = !1;
                    var t, n, r = [],
                        i = this.getPoint(0),
                        o = 0;
                    for (r.push(0), n = 1; n <= e; n++) o += (t = this.getPoint(n / e)).distanceTo(i), r.push(o), i = t;
                    return this.cacheArcLengths = r, r
                },
                updateArcLengths: function () {
                    this.needsUpdate = !0, this.getLengths()
                },
                getUtoTmapping: function (e, t) {
                    var n, r = this.getLengths(),
                        i = 0,
                        o = r.length;
                    n = t || e * r[o - 1];
                    for (var a, s = 0, c = o - 1; s <= c;)
                        if ((a = r[i = Math.floor(s + (c - s) / 2)] - n) < 0) s = i + 1;
                        else {
                            if (!(a > 0)) {
                                c = i;
                                break
                            }
                            c = i - 1
                        } if (r[i = c] === n) return i / (o - 1);
                    var l = r[i];
                    return (i + (n - l) / (r[i + 1] - l)) / (o - 1)
                },
                getTangent: function (e, t) {
                    var n = e - 1e-4,
                        r = e + 1e-4;
                    n < 0 && (n = 0), r > 1 && (r = 1);
                    var i = this.getPoint(n),
                        o = this.getPoint(r),
                        a = t || (i.isVector2 ? new c : new _);
                    return a.copy(o).sub(i).normalize(), a
                },
                getTangentAt: function (e, t) {
                    var n = this.getUtoTmapping(e);
                    return this.getTangent(n, t)
                },
                computeFrenetFrames: function (e, t) {
                    var n, r, i, o = new _,
                        a = [],
                        c = [],
                        l = [],
                        u = new _,
                        h = new A;
                    for (n = 0; n <= e; n++) r = n / e, a[n] = this.getTangentAt(r, new _), a[n].normalize();
                    c[0] = new _, l[0] = new _;
                    var d = Number.MAX_VALUE,
                        p = Math.abs(a[0].x),
                        f = Math.abs(a[0].y),
                        m = Math.abs(a[0].z);
                    for (p <= d && (d = p, o.set(1, 0, 0)), f <= d && (d = f, o.set(0, 1, 0)), m <= d && o.set(0, 0, 1), u.crossVectors(a[0], o).normalize(), c[0].crossVectors(a[0], u), l[0].crossVectors(a[0], c[0]), n = 1; n <= e; n++) c[n] = c[n - 1].clone(), l[n] = l[n - 1].clone(), u.crossVectors(a[n - 1], a[n]), u.length() > Number.EPSILON && (u.normalize(), i = Math.acos(s.clamp(a[n - 1].dot(a[n]), -1, 1)), c[n].applyMatrix4(h.makeRotationAxis(u, i))), l[n].crossVectors(a[n], c[n]);
                    if (!0 === t)
                        for (i = Math.acos(s.clamp(c[0].dot(c[e]), -1, 1)), i /= e, a[0].dot(u.crossVectors(c[0], c[e])) > 0 && (i = -i), n = 1; n <= e; n++) c[n].applyMatrix4(h.makeRotationAxis(a[n], i * n)), l[n].crossVectors(a[n], c[n]);
                    return {
                        tangents: a,
                        normals: c,
                        binormals: l
                    }
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    return this.arcLengthDivisions = e.arcLengthDivisions, this
                },
                toJSON: function () {
                    var e = {
                        metadata: {
                            version: 4.5,
                            type: "Curve",
                            generator: "Curve.toJSON"
                        }
                    };
                    return e.arcLengthDivisions = this.arcLengthDivisions, e.type = this.type, e
                },
                fromJSON: function (e) {
                    return this.arcLengthDivisions = e.arcLengthDivisions, this
                }
            }), us.prototype = Object.create(ls.prototype), us.prototype.constructor = us, us.prototype.isEllipseCurve = !0, us.prototype.getPoint = function (e, t) {
                for (var n = t || new c, r = 2 * Math.PI, i = this.aEndAngle - this.aStartAngle, o = Math.abs(i) < Number.EPSILON; i < 0;) i += r;
                for (; i > r;) i -= r;
                i < Number.EPSILON && (i = o ? 0 : r), !0 !== this.aClockwise || o || (i === r ? i = -r : i -= r);
                var a = this.aStartAngle + e * i,
                    s = this.aX + this.xRadius * Math.cos(a),
                    l = this.aY + this.yRadius * Math.sin(a);
                if (0 !== this.aRotation) {
                    var u = Math.cos(this.aRotation),
                        h = Math.sin(this.aRotation),
                        d = s - this.aX,
                        p = l - this.aY;
                    s = d * u - p * h + this.aX, l = d * h + p * u + this.aY
                }
                return n.set(s, l)
            }, us.prototype.copy = function (e) {
                return ls.prototype.copy.call(this, e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this
            }, us.prototype.toJSON = function () {
                var e = ls.prototype.toJSON.call(this);
                return e.aX = this.aX, e.aY = this.aY, e.xRadius = this.xRadius, e.yRadius = this.yRadius, e.aStartAngle = this.aStartAngle, e.aEndAngle = this.aEndAngle, e.aClockwise = this.aClockwise, e.aRotation = this.aRotation, e
            }, us.prototype.fromJSON = function (e) {
                return ls.prototype.fromJSON.call(this, e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this
            }, hs.prototype = Object.create(us.prototype), hs.prototype.constructor = hs, hs.prototype.isArcCurve = !0;
            var ps = new _,
                fs = new ds,
                ms = new ds,
                gs = new ds;

            function vs(e, t, n, r) {
                ls.call(this), this.type = "CatmullRomCurve3", this.points = e || [], this.closed = t || !1, this.curveType = n || "centripetal", this.tension = r || .5
            }

            function ys(e, t, n, r, i) {
                var o = .5 * (r - t),
                    a = .5 * (i - n),
                    s = e * e;
                return (2 * n - 2 * r + o + a) * (e * s) + (-3 * n + 3 * r - 2 * o - a) * s + o * e + n
            }

            function _s(e, t, n, r) {
                return function (e, t) {
                    var n = 1 - e;
                    return n * n * t
                }(e, t) + function (e, t) {
                    return 2 * (1 - e) * e * t
                }(e, n) + function (e, t) {
                    return e * e * t
                }(e, r)
            }

            function xs(e, t, n, r, i) {
                return function (e, t) {
                    var n = 1 - e;
                    return n * n * n * t
                }(e, t) + function (e, t) {
                    var n = 1 - e;
                    return 3 * n * n * e * t
                }(e, n) + function (e, t) {
                    return 3 * (1 - e) * e * e * t
                }(e, r) + function (e, t) {
                    return e * e * e * t
                }(e, i)
            }

            function bs(e, t, n, r) {
                ls.call(this), this.type = "CubicBezierCurve", this.v0 = e || new c, this.v1 = t || new c, this.v2 = n || new c, this.v3 = r || new c
            }

            function ws(e, t, n, r) {
                ls.call(this), this.type = "CubicBezierCurve3", this.v0 = e || new _, this.v1 = t || new _, this.v2 = n || new _, this.v3 = r || new _
            }

            function Ms(e, t) {
                ls.call(this), this.type = "LineCurve", this.v1 = e || new c, this.v2 = t || new c
            }

            function Ts(e, t) {
                ls.call(this), this.type = "LineCurve3", this.v1 = e || new _, this.v2 = t || new _
            }

            function Ss(e, t, n) {
                ls.call(this), this.type = "QuadraticBezierCurve", this.v0 = e || new c, this.v1 = t || new c, this.v2 = n || new c
            }

            function Es(e, t, n) {
                ls.call(this), this.type = "QuadraticBezierCurve3", this.v0 = e || new _, this.v1 = t || new _, this.v2 = n || new _
            }

            function As(e) {
                ls.call(this), this.type = "SplineCurve", this.points = e || []
            }
            vs.prototype = Object.create(ls.prototype), vs.prototype.constructor = vs, vs.prototype.isCatmullRomCurve3 = !0, vs.prototype.getPoint = function (e, t) {
                var n, r, i, o, a = t || new _,
                    s = this.points,
                    c = s.length,
                    l = (c - (this.closed ? 0 : 1)) * e,
                    u = Math.floor(l),
                    h = l - u;
                if (this.closed ? u += u > 0 ? 0 : (Math.floor(Math.abs(u) / c) + 1) * c : 0 === h && u === c - 1 && (u = c - 2, h = 1), this.closed || u > 0 ? n = s[(u - 1) % c] : (ps.subVectors(s[0], s[1]).add(s[0]), n = ps), r = s[u % c], i = s[(u + 1) % c], this.closed || u + 2 < c ? o = s[(u + 2) % c] : (ps.subVectors(s[c - 1], s[c - 2]).add(s[c - 1]), o = ps), "centripetal" === this.curveType || "chordal" === this.curveType) {
                    var d = "chordal" === this.curveType ? .5 : .25,
                        p = Math.pow(n.distanceToSquared(r), d),
                        f = Math.pow(r.distanceToSquared(i), d),
                        m = Math.pow(i.distanceToSquared(o), d);
                    f < 1e-4 && (f = 1), p < 1e-4 && (p = f), m < 1e-4 && (m = f), fs.initNonuniformCatmullRom(n.x, r.x, i.x, o.x, p, f, m), ms.initNonuniformCatmullRom(n.y, r.y, i.y, o.y, p, f, m), gs.initNonuniformCatmullRom(n.z, r.z, i.z, o.z, p, f, m)
                } else "catmullrom" === this.curveType && (fs.initCatmullRom(n.x, r.x, i.x, o.x, this.tension), ms.initCatmullRom(n.y, r.y, i.y, o.y, this.tension), gs.initCatmullRom(n.z, r.z, i.z, o.z, this.tension));
                return a.set(fs.calc(h), ms.calc(h), gs.calc(h)), a
            }, vs.prototype.copy = function (e) {
                ls.prototype.copy.call(this, e), this.points = [];
                for (var t = 0, n = e.points.length; t < n; t++) {
                    var r = e.points[t];
                    this.points.push(r.clone())
                }
                return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this
            }, vs.prototype.toJSON = function () {
                var e = ls.prototype.toJSON.call(this);
                e.points = [];
                for (var t = 0, n = this.points.length; t < n; t++) {
                    var r = this.points[t];
                    e.points.push(r.toArray())
                }
                return e.closed = this.closed, e.curveType = this.curveType, e.tension = this.tension, e
            }, vs.prototype.fromJSON = function (e) {
                ls.prototype.fromJSON.call(this, e), this.points = [];
                for (var t = 0, n = e.points.length; t < n; t++) {
                    var r = e.points[t];
                    this.points.push((new _).fromArray(r))
                }
                return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this
            }, bs.prototype = Object.create(ls.prototype), bs.prototype.constructor = bs, bs.prototype.isCubicBezierCurve = !0, bs.prototype.getPoint = function (e, t) {
                var n = t || new c,
                    r = this.v0,
                    i = this.v1,
                    o = this.v2,
                    a = this.v3;
                return n.set(xs(e, r.x, i.x, o.x, a.x), xs(e, r.y, i.y, o.y, a.y)), n
            }, bs.prototype.copy = function (e) {
                return ls.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this
            }, bs.prototype.toJSON = function () {
                var e = ls.prototype.toJSON.call(this);
                return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e
            }, bs.prototype.fromJSON = function (e) {
                return ls.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this
            }, ws.prototype = Object.create(ls.prototype), ws.prototype.constructor = ws, ws.prototype.isCubicBezierCurve3 = !0, ws.prototype.getPoint = function (e, t) {
                var n = t || new _,
                    r = this.v0,
                    i = this.v1,
                    o = this.v2,
                    a = this.v3;
                return n.set(xs(e, r.x, i.x, o.x, a.x), xs(e, r.y, i.y, o.y, a.y), xs(e, r.z, i.z, o.z, a.z)), n
            }, ws.prototype.copy = function (e) {
                return ls.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this
            }, ws.prototype.toJSON = function () {
                var e = ls.prototype.toJSON.call(this);
                return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e
            }, ws.prototype.fromJSON = function (e) {
                return ls.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this
            }, Ms.prototype = Object.create(ls.prototype), Ms.prototype.constructor = Ms, Ms.prototype.isLineCurve = !0, Ms.prototype.getPoint = function (e, t) {
                var n = t || new c;
                return 1 === e ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n
            }, Ms.prototype.getPointAt = function (e, t) {
                return this.getPoint(e, t)
            }, Ms.prototype.getTangent = function (e, t) {
                return (t || new c).copy(this.v2).sub(this.v1).normalize()
            }, Ms.prototype.copy = function (e) {
                return ls.prototype.copy.call(this, e), this.v1.copy(e.v1), this.v2.copy(e.v2), this
            }, Ms.prototype.toJSON = function () {
                var e = ls.prototype.toJSON.call(this);
                return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e
            }, Ms.prototype.fromJSON = function (e) {
                return ls.prototype.fromJSON.call(this, e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
            }, Ts.prototype = Object.create(ls.prototype), Ts.prototype.constructor = Ts, Ts.prototype.isLineCurve3 = !0, Ts.prototype.getPoint = function (e, t) {
                var n = t || new _;
                return 1 === e ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n
            }, Ts.prototype.getPointAt = function (e, t) {
                return this.getPoint(e, t)
            }, Ts.prototype.copy = function (e) {
                return ls.prototype.copy.call(this, e), this.v1.copy(e.v1), this.v2.copy(e.v2), this
            }, Ts.prototype.toJSON = function () {
                var e = ls.prototype.toJSON.call(this);
                return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e
            }, Ts.prototype.fromJSON = function (e) {
                return ls.prototype.fromJSON.call(this, e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
            }, Ss.prototype = Object.create(ls.prototype), Ss.prototype.constructor = Ss, Ss.prototype.isQuadraticBezierCurve = !0, Ss.prototype.getPoint = function (e, t) {
                var n = t || new c,
                    r = this.v0,
                    i = this.v1,
                    o = this.v2;
                return n.set(_s(e, r.x, i.x, o.x), _s(e, r.y, i.y, o.y)), n
            }, Ss.prototype.copy = function (e) {
                return ls.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this
            }, Ss.prototype.toJSON = function () {
                var e = ls.prototype.toJSON.call(this);
                return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e
            }, Ss.prototype.fromJSON = function (e) {
                return ls.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
            }, Es.prototype = Object.create(ls.prototype), Es.prototype.constructor = Es, Es.prototype.isQuadraticBezierCurve3 = !0, Es.prototype.getPoint = function (e, t) {
                var n = t || new _,
                    r = this.v0,
                    i = this.v1,
                    o = this.v2;
                return n.set(_s(e, r.x, i.x, o.x), _s(e, r.y, i.y, o.y), _s(e, r.z, i.z, o.z)), n
            }, Es.prototype.copy = function (e) {
                return ls.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this
            }, Es.prototype.toJSON = function () {
                var e = ls.prototype.toJSON.call(this);
                return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e
            }, Es.prototype.fromJSON = function (e) {
                return ls.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
            }, As.prototype = Object.create(ls.prototype), As.prototype.constructor = As, As.prototype.isSplineCurve = !0, As.prototype.getPoint = function (e, t) {
                var n = t || new c,
                    r = this.points,
                    i = (r.length - 1) * e,
                    o = Math.floor(i),
                    a = i - o,
                    s = r[0 === o ? o : o - 1],
                    l = r[o],
                    u = r[o > r.length - 2 ? r.length - 1 : o + 1],
                    h = r[o > r.length - 3 ? r.length - 1 : o + 2];
                return n.set(ys(a, s.x, l.x, u.x, h.x), ys(a, s.y, l.y, u.y, h.y)), n
            }, As.prototype.copy = function (e) {
                ls.prototype.copy.call(this, e), this.points = [];
                for (var t = 0, n = e.points.length; t < n; t++) {
                    var r = e.points[t];
                    this.points.push(r.clone())
                }
                return this
            }, As.prototype.toJSON = function () {
                var e = ls.prototype.toJSON.call(this);
                e.points = [];
                for (var t = 0, n = this.points.length; t < n; t++) {
                    var r = this.points[t];
                    e.points.push(r.toArray())
                }
                return e
            }, As.prototype.fromJSON = function (e) {
                ls.prototype.fromJSON.call(this, e), this.points = [];
                for (var t = 0, n = e.points.length; t < n; t++) {
                    var r = e.points[t];
                    this.points.push((new c).fromArray(r))
                }
                return this
            };
            var js = Object.freeze({
                __proto__: null,
                ArcCurve: hs,
                CatmullRomCurve3: vs,
                CubicBezierCurve: bs,
                CubicBezierCurve3: ws,
                EllipseCurve: us,
                LineCurve: Ms,
                LineCurve3: Ts,
                QuadraticBezierCurve: Ss,
                QuadraticBezierCurve3: Es,
                SplineCurve: As
            });

            function Ls() {
                ls.call(this), this.type = "CurvePath", this.curves = [], this.autoClose = !1
            }

            function Cs(e) {
                Ls.call(this), this.type = "Path", this.currentPoint = new c, e && this.setFromPoints(e)
            }

            function Ps(e) {
                Cs.call(this, e), this.uuid = s.generateUUID(), this.type = "Shape", this.holes = []
            }

            function Os(e, t) {
                W.call(this), this.type = "Light", this.color = new Ie(e), this.intensity = void 0 !== t ? t : 1, this.receiveShadow = void 0
            }

            function Rs(e, t, n) {
                Os.call(this, e, n), this.type = "HemisphereLight", this.castShadow = void 0, this.position.copy(W.DefaultUp), this.updateMatrix(), this.groundColor = new Ie(t)
            }

            function Ds(e) {
                this.camera = e, this.bias = 0, this.radius = 1, this.mapSize = new c(512, 512), this.map = null, this.mapPass = null, this.matrix = new A, this._frustum = new Yt, this._frameExtents = new c(1, 1), this._viewportCount = 1, this._viewports = [new p(0, 0, 1, 1)]
            }

            function Ns() {
                Ds.call(this, new Ht(50, 1, .5, 500))
            }

            function Is(e, t, n, r, i, o) {
                Os.call(this, e, t), this.type = "SpotLight", this.position.copy(W.DefaultUp), this.updateMatrix(), this.target = new W, Object.defineProperty(this, "power", {
                    get: function () {
                        return this.intensity * Math.PI
                    },
                    set: function (e) {
                        this.intensity = e / Math.PI
                    }
                }), this.distance = void 0 !== n ? n : 0, this.angle = void 0 !== r ? r : Math.PI / 3, this.penumbra = void 0 !== i ? i : 0, this.decay = void 0 !== o ? o : 1, this.shadow = new Ns
            }

            function ks() {
                Ds.call(this, new Ht(90, 1, .5, 500)), this._frameExtents = new c(4, 2), this._viewportCount = 6, this._viewports = [new p(2, 1, 1, 1), new p(0, 1, 1, 1), new p(3, 1, 1, 1), new p(1, 1, 1, 1), new p(3, 0, 1, 1), new p(1, 0, 1, 1)], this._cubeDirections = [new _(1, 0, 0), new _(-1, 0, 0), new _(0, 0, 1), new _(0, 0, -1), new _(0, 1, 0), new _(0, -1, 0)], this._cubeUps = [new _(0, 1, 0), new _(0, 1, 0), new _(0, 1, 0), new _(0, 1, 0), new _(0, 0, 1), new _(0, 0, -1)]
            }

            function zs(e, t, n, r) {
                Os.call(this, e, t), this.type = "PointLight", Object.defineProperty(this, "power", {
                    get: function () {
                        return 4 * this.intensity * Math.PI
                    },
                    set: function (e) {
                        this.intensity = e / (4 * Math.PI)
                    }
                }), this.distance = void 0 !== n ? n : 0, this.decay = void 0 !== r ? r : 1, this.shadow = new ks
            }

            function Bs(e, t, n, r, i, o) {
                Ut.call(this), this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = void 0 !== e ? e : -1, this.right = void 0 !== t ? t : 1, this.top = void 0 !== n ? n : 1, this.bottom = void 0 !== r ? r : -1, this.near = void 0 !== i ? i : .1, this.far = void 0 !== o ? o : 2e3, this.updateProjectionMatrix()
            }

            function Fs() {
                Ds.call(this, new Bs(-5, 5, 5, -5, .5, 500))
            }

            function Us(e, t) {
                Os.call(this, e, t), this.type = "DirectionalLight", this.position.copy(W.DefaultUp), this.updateMatrix(), this.target = new W, this.shadow = new Fs
            }

            function Hs(e, t) {
                Os.call(this, e, t), this.type = "AmbientLight", this.castShadow = void 0
            }

            function Gs(e, t, n, r) {
                Os.call(this, e, t), this.type = "RectAreaLight", this.width = void 0 !== n ? n : 10, this.height = void 0 !== r ? r : 10
            }

            function Vs() {
                this.coefficients = [];
                for (var e = 0; e < 9; e++) this.coefficients.push(new _)
            }

            function Ws(e, t) {
                Os.call(this, void 0, t), this.type = "LightProbe", this.sh = void 0 !== e ? e : new Vs
            }

            function qs(e) {
                es.call(this, e), this.textures = {}
            }
            Ls.prototype = Object.assign(Object.create(ls.prototype), {
                constructor: Ls,
                add: function (e) {
                    this.curves.push(e)
                },
                closePath: function () {
                    var e = this.curves[0].getPoint(0),
                        t = this.curves[this.curves.length - 1].getPoint(1);
                    e.equals(t) || this.curves.push(new Ms(t, e))
                },
                getPoint: function (e) {
                    for (var t = e * this.getLength(), n = this.getCurveLengths(), r = 0; r < n.length;) {
                        if (n[r] >= t) {
                            var i = n[r] - t,
                                o = this.curves[r],
                                a = o.getLength(),
                                s = 0 === a ? 0 : 1 - i / a;
                            return o.getPointAt(s)
                        }
                        r++
                    }
                    return null
                },
                getLength: function () {
                    var e = this.getCurveLengths();
                    return e[e.length - 1]
                },
                updateArcLengths: function () {
                    this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths()
                },
                getCurveLengths: function () {
                    if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
                    for (var e = [], t = 0, n = 0, r = this.curves.length; n < r; n++) t += this.curves[n].getLength(), e.push(t);
                    return this.cacheLengths = e, e
                },
                getSpacedPoints: function (e) {
                    void 0 === e && (e = 40);
                    for (var t = [], n = 0; n <= e; n++) t.push(this.getPoint(n / e));
                    return this.autoClose && t.push(t[0]), t
                },
                getPoints: function (e) {
                    e = e || 12;
                    for (var t, n = [], r = 0, i = this.curves; r < i.length; r++)
                        for (var o = i[r], a = o && o.isEllipseCurve ? 2 * e : o && (o.isLineCurve || o.isLineCurve3) ? 1 : o && o.isSplineCurve ? e * o.points.length : e, s = o.getPoints(a), c = 0; c < s.length; c++) {
                            var l = s[c];
                            t && t.equals(l) || (n.push(l), t = l)
                        }
                    return this.autoClose && n.length > 1 && !n[n.length - 1].equals(n[0]) && n.push(n[0]), n
                },
                copy: function (e) {
                    ls.prototype.copy.call(this, e), this.curves = [];
                    for (var t = 0, n = e.curves.length; t < n; t++) {
                        var r = e.curves[t];
                        this.curves.push(r.clone())
                    }
                    return this.autoClose = e.autoClose, this
                },
                toJSON: function () {
                    var e = ls.prototype.toJSON.call(this);
                    e.autoClose = this.autoClose, e.curves = [];
                    for (var t = 0, n = this.curves.length; t < n; t++) {
                        var r = this.curves[t];
                        e.curves.push(r.toJSON())
                    }
                    return e
                },
                fromJSON: function (e) {
                    ls.prototype.fromJSON.call(this, e), this.autoClose = e.autoClose, this.curves = [];
                    for (var t = 0, n = e.curves.length; t < n; t++) {
                        var r = e.curves[t];
                        this.curves.push((new js[r.type]).fromJSON(r))
                    }
                    return this
                }
            }), Cs.prototype = Object.assign(Object.create(Ls.prototype), {
                constructor: Cs,
                setFromPoints: function (e) {
                    this.moveTo(e[0].x, e[0].y);
                    for (var t = 1, n = e.length; t < n; t++) this.lineTo(e[t].x, e[t].y);
                    return this
                },
                moveTo: function (e, t) {
                    return this.currentPoint.set(e, t), this
                },
                lineTo: function (e, t) {
                    var n = new Ms(this.currentPoint.clone(), new c(e, t));
                    return this.curves.push(n), this.currentPoint.set(e, t), this
                },
                quadraticCurveTo: function (e, t, n, r) {
                    var i = new Ss(this.currentPoint.clone(), new c(e, t), new c(n, r));
                    return this.curves.push(i), this.currentPoint.set(n, r), this
                },
                bezierCurveTo: function (e, t, n, r, i, o) {
                    var a = new bs(this.currentPoint.clone(), new c(e, t), new c(n, r), new c(i, o));
                    return this.curves.push(a), this.currentPoint.set(i, o), this
                },
                splineThru: function (e) {
                    var t = new As([this.currentPoint.clone()].concat(e));
                    return this.curves.push(t), this.currentPoint.copy(e[e.length - 1]), this
                },
                arc: function (e, t, n, r, i, o) {
                    var a = this.currentPoint.x,
                        s = this.currentPoint.y;
                    return this.absarc(e + a, t + s, n, r, i, o), this
                },
                absarc: function (e, t, n, r, i, o) {
                    return this.absellipse(e, t, n, n, r, i, o), this
                },
                ellipse: function (e, t, n, r, i, o, a, s) {
                    var c = this.currentPoint.x,
                        l = this.currentPoint.y;
                    return this.absellipse(e + c, t + l, n, r, i, o, a, s), this
                },
                absellipse: function (e, t, n, r, i, o, a, s) {
                    var c = new us(e, t, n, r, i, o, a, s);
                    if (this.curves.length > 0) {
                        var l = c.getPoint(0);
                        l.equals(this.currentPoint) || this.lineTo(l.x, l.y)
                    }
                    this.curves.push(c);
                    var u = c.getPoint(1);
                    return this.currentPoint.copy(u), this
                },
                copy: function (e) {
                    return Ls.prototype.copy.call(this, e), this.currentPoint.copy(e.currentPoint), this
                },
                toJSON: function () {
                    var e = Ls.prototype.toJSON.call(this);
                    return e.currentPoint = this.currentPoint.toArray(), e
                },
                fromJSON: function (e) {
                    return Ls.prototype.fromJSON.call(this, e), this.currentPoint.fromArray(e.currentPoint), this
                }
            }), Ps.prototype = Object.assign(Object.create(Cs.prototype), {
                constructor: Ps,
                getPointsHoles: function (e) {
                    for (var t = [], n = 0, r = this.holes.length; n < r; n++) t[n] = this.holes[n].getPoints(e);
                    return t
                },
                extractPoints: function (e) {
                    return {
                        shape: this.getPoints(e),
                        holes: this.getPointsHoles(e)
                    }
                },
                copy: function (e) {
                    Cs.prototype.copy.call(this, e), this.holes = [];
                    for (var t = 0, n = e.holes.length; t < n; t++) {
                        var r = e.holes[t];
                        this.holes.push(r.clone())
                    }
                    return this
                },
                toJSON: function () {
                    var e = Cs.prototype.toJSON.call(this);
                    e.uuid = this.uuid, e.holes = [];
                    for (var t = 0, n = this.holes.length; t < n; t++) {
                        var r = this.holes[t];
                        e.holes.push(r.toJSON())
                    }
                    return e
                },
                fromJSON: function (e) {
                    Cs.prototype.fromJSON.call(this, e), this.uuid = e.uuid, this.holes = [];
                    for (var t = 0, n = e.holes.length; t < n; t++) {
                        var r = e.holes[t];
                        this.holes.push((new Cs).fromJSON(r))
                    }
                    return this
                }
            }), Os.prototype = Object.assign(Object.create(W.prototype), {
                constructor: Os,
                isLight: !0,
                copy: function (e) {
                    return W.prototype.copy.call(this, e), this.color.copy(e.color), this.intensity = e.intensity, this
                },
                toJSON: function (e) {
                    var t = W.prototype.toJSON.call(this, e);
                    return t.object.color = this.color.getHex(), t.object.intensity = this.intensity, void 0 !== this.groundColor && (t.object.groundColor = this.groundColor.getHex()), void 0 !== this.distance && (t.object.distance = this.distance), void 0 !== this.angle && (t.object.angle = this.angle), void 0 !== this.decay && (t.object.decay = this.decay), void 0 !== this.penumbra && (t.object.penumbra = this.penumbra), void 0 !== this.shadow && (t.object.shadow = this.shadow.toJSON()), t
                }
            }), Rs.prototype = Object.assign(Object.create(Os.prototype), {
                constructor: Rs,
                isHemisphereLight: !0,
                copy: function (e) {
                    return Os.prototype.copy.call(this, e), this.groundColor.copy(e.groundColor), this
                }
            }), Object.assign(Ds.prototype, {
                _projScreenMatrix: new A,
                _lightPositionWorld: new _,
                _lookTarget: new _,
                getViewportCount: function () {
                    return this._viewportCount
                },
                getFrustum: function () {
                    return this._frustum
                },
                updateMatrices: function (e) {
                    var t = this.camera,
                        n = this.matrix,
                        r = this._projScreenMatrix,
                        i = this._lookTarget,
                        o = this._lightPositionWorld;
                    o.setFromMatrixPosition(e.matrixWorld), t.position.copy(o), i.setFromMatrixPosition(e.target.matrixWorld), t.lookAt(i), t.updateMatrixWorld(), r.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), this._frustum.setFromProjectionMatrix(r), n.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), n.multiply(t.projectionMatrix), n.multiply(t.matrixWorldInverse)
                },
                getViewport: function (e) {
                    return this._viewports[e]
                },
                getFrameExtents: function () {
                    return this._frameExtents
                },
                copy: function (e) {
                    return this.camera = e.camera.clone(), this.bias = e.bias, this.radius = e.radius, this.mapSize.copy(e.mapSize), this
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                toJSON: function () {
                    var e = {};
                    return 0 !== this.bias && (e.bias = this.bias), 1 !== this.radius && (e.radius = this.radius), 512 === this.mapSize.x && 512 === this.mapSize.y || (e.mapSize = this.mapSize.toArray()), e.camera = this.camera.toJSON(!1).object, delete e.camera.matrix, e
                }
            }), Ns.prototype = Object.assign(Object.create(Ds.prototype), {
                constructor: Ns,
                isSpotLightShadow: !0,
                updateMatrices: function (e) {
                    var t = this.camera,
                        n = 2 * s.RAD2DEG * e.angle,
                        r = this.mapSize.width / this.mapSize.height,
                        i = e.distance || t.far;
                    n === t.fov && r === t.aspect && i === t.far || (t.fov = n, t.aspect = r, t.far = i, t.updateProjectionMatrix()), Ds.prototype.updateMatrices.call(this, e)
                }
            }), Is.prototype = Object.assign(Object.create(Os.prototype), {
                constructor: Is,
                isSpotLight: !0,
                copy: function (e) {
                    return Os.prototype.copy.call(this, e), this.distance = e.distance, this.angle = e.angle, this.penumbra = e.penumbra, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this
                }
            }), ks.prototype = Object.assign(Object.create(Ds.prototype), {
                constructor: ks,
                isPointLightShadow: !0,
                updateMatrices: function (e, t) {
                    void 0 === t && (t = 0);
                    var n = this.camera,
                        r = this.matrix,
                        i = this._lightPositionWorld,
                        o = this._lookTarget,
                        a = this._projScreenMatrix;
                    i.setFromMatrixPosition(e.matrixWorld), n.position.copy(i), o.copy(n.position), o.add(this._cubeDirections[t]), n.up.copy(this._cubeUps[t]), n.lookAt(o), n.updateMatrixWorld(), r.makeTranslation(-i.x, -i.y, -i.z), a.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse), this._frustum.setFromProjectionMatrix(a)
                }
            }), zs.prototype = Object.assign(Object.create(Os.prototype), {
                constructor: zs,
                isPointLight: !0,
                copy: function (e) {
                    return Os.prototype.copy.call(this, e), this.distance = e.distance, this.decay = e.decay, this.shadow = e.shadow.clone(), this
                }
            }), Bs.prototype = Object.assign(Object.create(Ut.prototype), {
                constructor: Bs,
                isOrthographicCamera: !0,
                copy: function (e, t) {
                    return Ut.prototype.copy.call(this, e, t), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this.view = null === e.view ? null : Object.assign({}, e.view), this
                },
                setViewOffset: function (e, t, n, r, i, o) {
                    null === this.view && (this.view = {
                        enabled: !0,
                        fullWidth: 1,
                        fullHeight: 1,
                        offsetX: 0,
                        offsetY: 0,
                        width: 1,
                        height: 1
                    }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = r, this.view.width = i, this.view.height = o, this.updateProjectionMatrix()
                },
                clearViewOffset: function () {
                    null !== this.view && (this.view.enabled = !1), this.updateProjectionMatrix()
                },
                updateProjectionMatrix: function () {
                    var e = (this.right - this.left) / (2 * this.zoom),
                        t = (this.top - this.bottom) / (2 * this.zoom),
                        n = (this.right + this.left) / 2,
                        r = (this.top + this.bottom) / 2,
                        i = n - e,
                        o = n + e,
                        a = r + t,
                        s = r - t;
                    if (null !== this.view && this.view.enabled) {
                        var c = (this.right - this.left) / this.view.fullWidth / this.zoom,
                            l = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
                        o = (i += c * this.view.offsetX) + c * this.view.width, s = (a -= l * this.view.offsetY) - l * this.view.height
                    }
                    this.projectionMatrix.makeOrthographic(i, o, a, s, this.near, this.far), this.projectionMatrixInverse.getInverse(this.projectionMatrix)
                },
                toJSON: function (e) {
                    var t = W.prototype.toJSON.call(this, e);
                    return t.object.zoom = this.zoom, t.object.left = this.left, t.object.right = this.right, t.object.top = this.top, t.object.bottom = this.bottom, t.object.near = this.near, t.object.far = this.far, null !== this.view && (t.object.view = Object.assign({}, this.view)), t
                }
            }), Fs.prototype = Object.assign(Object.create(Ds.prototype), {
                constructor: Fs,
                isDirectionalLightShadow: !0,
                updateMatrices: function (e) {
                    Ds.prototype.updateMatrices.call(this, e)
                }
            }), Us.prototype = Object.assign(Object.create(Os.prototype), {
                constructor: Us,
                isDirectionalLight: !0,
                copy: function (e) {
                    return Os.prototype.copy.call(this, e), this.target = e.target.clone(), this.shadow = e.shadow.clone(), this
                }
            }), Hs.prototype = Object.assign(Object.create(Os.prototype), {
                constructor: Hs,
                isAmbientLight: !0
            }), Gs.prototype = Object.assign(Object.create(Os.prototype), {
                constructor: Gs,
                isRectAreaLight: !0,
                copy: function (e) {
                    return Os.prototype.copy.call(this, e), this.width = e.width, this.height = e.height, this
                },
                toJSON: function (e) {
                    var t = Os.prototype.toJSON.call(this, e);
                    return t.object.width = this.width, t.object.height = this.height, t
                }
            }), Object.assign(Vs.prototype, {
                isSphericalHarmonics3: !0,
                set: function (e) {
                    for (var t = 0; t < 9; t++) this.coefficients[t].copy(e[t]);
                    return this
                },
                zero: function () {
                    for (var e = 0; e < 9; e++) this.coefficients[e].set(0, 0, 0);
                    return this
                },
                getAt: function (e, t) {
                    var n = e.x,
                        r = e.y,
                        i = e.z,
                        o = this.coefficients;
                    return t.copy(o[0]).multiplyScalar(.282095), t.addScaledVector(o[1], .488603 * r), t.addScaledVector(o[2], .488603 * i), t.addScaledVector(o[3], .488603 * n), t.addScaledVector(o[4], n * r * 1.092548), t.addScaledVector(o[5], r * i * 1.092548), t.addScaledVector(o[6], .315392 * (3 * i * i - 1)), t.addScaledVector(o[7], n * i * 1.092548), t.addScaledVector(o[8], .546274 * (n * n - r * r)), t
                },
                getIrradianceAt: function (e, t) {
                    var n = e.x,
                        r = e.y,
                        i = e.z,
                        o = this.coefficients;
                    return t.copy(o[0]).multiplyScalar(.886227), t.addScaledVector(o[1], 1.023328 * r), t.addScaledVector(o[2], 1.023328 * i), t.addScaledVector(o[3], 1.023328 * n), t.addScaledVector(o[4], .858086 * n * r), t.addScaledVector(o[5], .858086 * r * i), t.addScaledVector(o[6], .743125 * i * i - .247708), t.addScaledVector(o[7], .858086 * n * i), t.addScaledVector(o[8], .429043 * (n * n - r * r)), t
                },
                add: function (e) {
                    for (var t = 0; t < 9; t++) this.coefficients[t].add(e.coefficients[t]);
                    return this
                },
                addScaledSH: function (e, t) {
                    for (var n = 0; n < 9; n++) this.coefficients[n].addScaledVector(e.coefficients[n], t);
                    return this
                },
                scale: function (e) {
                    for (var t = 0; t < 9; t++) this.coefficients[t].multiplyScalar(e);
                    return this
                },
                lerp: function (e, t) {
                    for (var n = 0; n < 9; n++) this.coefficients[n].lerp(e.coefficients[n], t);
                    return this
                },
                equals: function (e) {
                    for (var t = 0; t < 9; t++)
                        if (!this.coefficients[t].equals(e.coefficients[t])) return !1;
                    return !0
                },
                copy: function (e) {
                    return this.set(e.coefficients)
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                fromArray: function (e, t) {
                    void 0 === t && (t = 0);
                    for (var n = this.coefficients, r = 0; r < 9; r++) n[r].fromArray(e, t + 3 * r);
                    return this
                },
                toArray: function (e, t) {
                    void 0 === e && (e = []), void 0 === t && (t = 0);
                    for (var n = this.coefficients, r = 0; r < 9; r++) n[r].toArray(e, t + 3 * r);
                    return e
                }
            }), Object.assign(Vs, {
                getBasisAt: function (e, t) {
                    var n = e.x,
                        r = e.y,
                        i = e.z;
                    t[0] = .282095, t[1] = .488603 * r, t[2] = .488603 * i, t[3] = .488603 * n, t[4] = 1.092548 * n * r, t[5] = 1.092548 * r * i, t[6] = .315392 * (3 * i * i - 1), t[7] = 1.092548 * n * i, t[8] = .546274 * (n * n - r * r)
                }
            }), Ws.prototype = Object.assign(Object.create(Os.prototype), {
                constructor: Ws,
                isLightProbe: !0,
                copy: function (e) {
                    return Os.prototype.copy.call(this, e), this.sh.copy(e.sh), this
                },
                fromJSON: function (e) {
                    return this.intensity = e.intensity, this.sh.fromArray(e.sh), this
                },
                toJSON: function (e) {
                    var t = Os.prototype.toJSON.call(this, e);
                    return t.object.sh = this.sh.toArray(), t
                }
            }), qs.prototype = Object.assign(Object.create(es.prototype), {
                constructor: qs,
                load: function (e, t, n, r) {
                    var i = this,
                        o = new ns(i.manager);
                    o.setPath(i.path), o.load(e, (function (n) {
                        try {
                            t(i.parse(JSON.parse(n)))
                        } catch (t) {
                            r ? r(t) : console.error(t), i.manager.itemError(e)
                        }
                    }), n, r)
                },
                parse: function (e) {
                    var t = this.textures;

                    function n(e) {
                        return void 0 === t[e] && console.warn("THREE.MaterialLoader: Undefined texture", e), t[e]
                    }
                    var r = new Na[e.type];
                    if (void 0 !== e.uuid && (r.uuid = e.uuid), void 0 !== e.name && (r.name = e.name), void 0 !== e.color && r.color.setHex(e.color), void 0 !== e.roughness && (r.roughness = e.roughness), void 0 !== e.metalness && (r.metalness = e.metalness), void 0 !== e.sheen && (r.sheen = (new Ie).setHex(e.sheen)), void 0 !== e.emissive && r.emissive.setHex(e.emissive), void 0 !== e.specular && r.specular.setHex(e.specular), void 0 !== e.shininess && (r.shininess = e.shininess), void 0 !== e.clearcoat && (r.clearcoat = e.clearcoat), void 0 !== e.clearcoatRoughness && (r.clearcoatRoughness = e.clearcoatRoughness), void 0 !== e.fog && (r.fog = e.fog), void 0 !== e.flatShading && (r.flatShading = e.flatShading), void 0 !== e.blending && (r.blending = e.blending), void 0 !== e.combine && (r.combine = e.combine), void 0 !== e.side && (r.side = e.side), void 0 !== e.opacity && (r.opacity = e.opacity), void 0 !== e.transparent && (r.transparent = e.transparent), void 0 !== e.alphaTest && (r.alphaTest = e.alphaTest), void 0 !== e.depthTest && (r.depthTest = e.depthTest), void 0 !== e.depthWrite && (r.depthWrite = e.depthWrite), void 0 !== e.colorWrite && (r.colorWrite = e.colorWrite), void 0 !== e.stencilWrite && (r.stencilWrite = e.stencilWrite), void 0 !== e.stencilWriteMask && (r.stencilWriteMask = e.stencilWriteMask), void 0 !== e.stencilFunc && (r.stencilFunc = e.stencilFunc), void 0 !== e.stencilRef && (r.stencilRef = e.stencilRef), void 0 !== e.stencilFuncMask && (r.stencilFuncMask = e.stencilFuncMask), void 0 !== e.stencilFail && (r.stencilFail = e.stencilFail), void 0 !== e.stencilZFail && (r.stencilZFail = e.stencilZFail), void 0 !== e.stencilZPass && (r.stencilZPass = e.stencilZPass), void 0 !== e.wireframe && (r.wireframe = e.wireframe), void 0 !== e.wireframeLinewidth && (r.wireframeLinewidth = e.wireframeLinewidth), void 0 !== e.wireframeLinecap && (r.wireframeLinecap = e.wireframeLinecap), void 0 !== e.wireframeLinejoin && (r.wireframeLinejoin = e.wireframeLinejoin), void 0 !== e.rotation && (r.rotation = e.rotation), 1 !== e.linewidth && (r.linewidth = e.linewidth), void 0 !== e.dashSize && (r.dashSize = e.dashSize), void 0 !== e.gapSize && (r.gapSize = e.gapSize), void 0 !== e.scale && (r.scale = e.scale), void 0 !== e.polygonOffset && (r.polygonOffset = e.polygonOffset), void 0 !== e.polygonOffsetFactor && (r.polygonOffsetFactor = e.polygonOffsetFactor), void 0 !== e.polygonOffsetUnits && (r.polygonOffsetUnits = e.polygonOffsetUnits), void 0 !== e.skinning && (r.skinning = e.skinning), void 0 !== e.morphTargets && (r.morphTargets = e.morphTargets), void 0 !== e.morphNormals && (r.morphNormals = e.morphNormals), void 0 !== e.dithering && (r.dithering = e.dithering), void 0 !== e.vertexTangents && (r.vertexTangents = e.vertexTangents), void 0 !== e.visible && (r.visible = e.visible), void 0 !== e.toneMapped && (r.toneMapped = e.toneMapped), void 0 !== e.userData && (r.userData = e.userData), void 0 !== e.vertexColors && ("number" == typeof e.vertexColors ? r.vertexColors = e.vertexColors > 0 : r.vertexColors = e.vertexColors), void 0 !== e.uniforms)
                        for (var i in e.uniforms) {
                            var o = e.uniforms[i];
                            switch (r.uniforms[i] = {}, o.type) {
                                case "t":
                                    r.uniforms[i].value = n(o.value);
                                    break;
                                case "c":
                                    r.uniforms[i].value = (new Ie).setHex(o.value);
                                    break;
                                case "v2":
                                    r.uniforms[i].value = (new c).fromArray(o.value);
                                    break;
                                case "v3":
                                    r.uniforms[i].value = (new _).fromArray(o.value);
                                    break;
                                case "v4":
                                    r.uniforms[i].value = (new p).fromArray(o.value);
                                    break;
                                case "m3":
                                    r.uniforms[i].value = (new l).fromArray(o.value);
                                case "m4":
                                    r.uniforms[i].value = (new A).fromArray(o.value);
                                    break;
                                default:
                                    r.uniforms[i].value = o.value
                            }
                        }
                    if (void 0 !== e.defines && (r.defines = e.defines), void 0 !== e.vertexShader && (r.vertexShader = e.vertexShader), void 0 !== e.fragmentShader && (r.fragmentShader = e.fragmentShader), void 0 !== e.extensions)
                        for (var a in e.extensions) r.extensions[a] = e.extensions[a];
                    if (void 0 !== e.shading && (r.flatShading = 1 === e.shading), void 0 !== e.size && (r.size = e.size), void 0 !== e.sizeAttenuation && (r.sizeAttenuation = e.sizeAttenuation), void 0 !== e.map && (r.map = n(e.map)), void 0 !== e.matcap && (r.matcap = n(e.matcap)), void 0 !== e.alphaMap && (r.alphaMap = n(e.alphaMap)), void 0 !== e.bumpMap && (r.bumpMap = n(e.bumpMap)), void 0 !== e.bumpScale && (r.bumpScale = e.bumpScale), void 0 !== e.normalMap && (r.normalMap = n(e.normalMap)), void 0 !== e.normalMapType && (r.normalMapType = e.normalMapType), void 0 !== e.normalScale) {
                        var s = e.normalScale;
                        !1 === Array.isArray(s) && (s = [s, s]), r.normalScale = (new c).fromArray(s)
                    }
                    return void 0 !== e.displacementMap && (r.displacementMap = n(e.displacementMap)), void 0 !== e.displacementScale && (r.displacementScale = e.displacementScale), void 0 !== e.displacementBias && (r.displacementBias = e.displacementBias), void 0 !== e.roughnessMap && (r.roughnessMap = n(e.roughnessMap)), void 0 !== e.metalnessMap && (r.metalnessMap = n(e.metalnessMap)), void 0 !== e.emissiveMap && (r.emissiveMap = n(e.emissiveMap)), void 0 !== e.emissiveIntensity && (r.emissiveIntensity = e.emissiveIntensity), void 0 !== e.specularMap && (r.specularMap = n(e.specularMap)), void 0 !== e.envMap && (r.envMap = n(e.envMap)), void 0 !== e.envMapIntensity && (r.envMapIntensity = e.envMapIntensity), void 0 !== e.reflectivity && (r.reflectivity = e.reflectivity), void 0 !== e.refractionRatio && (r.refractionRatio = e.refractionRatio), void 0 !== e.lightMap && (r.lightMap = n(e.lightMap)), void 0 !== e.lightMapIntensity && (r.lightMapIntensity = e.lightMapIntensity), void 0 !== e.aoMap && (r.aoMap = n(e.aoMap)), void 0 !== e.aoMapIntensity && (r.aoMapIntensity = e.aoMapIntensity), void 0 !== e.gradientMap && (r.gradientMap = n(e.gradientMap)), void 0 !== e.clearcoatMap && (r.clearcoatMap = n(e.clearcoatMap)), void 0 !== e.clearcoatRoughnessMap && (r.clearcoatRoughnessMap = n(e.clearcoatRoughnessMap)), void 0 !== e.clearcoatNormalMap && (r.clearcoatNormalMap = n(e.clearcoatNormalMap)), void 0 !== e.clearcoatNormalScale && (r.clearcoatNormalScale = (new c).fromArray(e.clearcoatNormalScale)), r
                },
                setTextures: function (e) {
                    return this.textures = e, this
                }
            });
            var Xs = function (e) {
                var t = e.lastIndexOf("/");
                return -1 === t ? "./" : e.substr(0, t + 1)
            };

            function Ys() {
                ut.call(this), this.type = "InstancedBufferGeometry", this.instanceCount = 1 / 0
            }

            function Js(e, t, n, r) {
                "number" == typeof n && (r = n, n = !1, console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")), We.call(this, e, t, n), this.meshPerAttribute = r || 1
            }

            function Zs(e) {
                es.call(this, e)
            }
            Ys.prototype = Object.assign(Object.create(ut.prototype), {
                constructor: Ys,
                isInstancedBufferGeometry: !0,
                copy: function (e) {
                    return ut.prototype.copy.call(this, e), this.instanceCount = e.instanceCount, this
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                toJSON: function () {
                    var e = ut.prototype.toJSON.call(this);
                    return e.instanceCount = this.instanceCount, e.isInstancedBufferGeometry = !0, e
                }
            }), Js.prototype = Object.assign(Object.create(We.prototype), {
                constructor: Js,
                isInstancedBufferAttribute: !0,
                copy: function (e) {
                    return We.prototype.copy.call(this, e), this.meshPerAttribute = e.meshPerAttribute, this
                },
                toJSON: function () {
                    var e = We.prototype.toJSON.call(this);
                    return e.meshPerAttribute = this.meshPerAttribute, e.isInstancedBufferAttribute = !0, e
                }
            }), Zs.prototype = Object.assign(Object.create(es.prototype), {
                constructor: Zs,
                load: function (e, t, n, r) {
                    var i = this,
                        o = new ns(i.manager);
                    o.setPath(i.path), o.load(e, (function (n) {
                        try {
                            t(i.parse(JSON.parse(n)))
                        } catch (t) {
                            r ? r(t) : console.error(t), i.manager.itemError(e)
                        }
                    }), n, r)
                },
                parse: function (e) {
                    var t = e.isInstancedBufferGeometry ? new Ys : new ut,
                        n = e.data.index;
                    if (void 0 !== n) {
                        var r = new Qs[n.type](n.array);
                        t.setIndex(new We(r, 1))
                    }
                    var i = e.data.attributes;
                    for (var o in i) {
                        var a = i[o],
                            s = (r = new Qs[a.type](a.array), new(a.isInstancedBufferAttribute ? Js : We)(r, a.itemSize, a.normalized));
                        void 0 !== a.name && (s.name = a.name), t.setAttribute(o, s)
                    }
                    var c = e.data.morphAttributes;
                    if (c)
                        for (var o in c) {
                            for (var l = c[o], u = [], h = 0, d = l.length; h < d; h++) {
                                a = l[h], s = new We(r = new Qs[a.type](a.array), a.itemSize, a.normalized);
                                void 0 !== a.name && (s.name = a.name), u.push(s)
                            }
                            t.morphAttributes[o] = u
                        }
                    e.data.morphTargetsRelative && (t.morphTargetsRelative = !0);
                    var p = e.data.groups || e.data.drawcalls || e.data.offsets;
                    if (void 0 !== p) {
                        h = 0;
                        for (var f = p.length; h !== f; ++h) {
                            var m = p[h];
                            t.addGroup(m.start, m.count, m.materialIndex)
                        }
                    }
                    var g = e.data.boundingSphere;
                    if (void 0 !== g) {
                        var v = new _;
                        void 0 !== g.center && v.fromArray(g.center), t.boundingSphere = new le(v, g.radius)
                    }
                    return e.name && (t.name = e.name), e.userData && (t.userData = e.userData), t
                }
            });
            var Qs = {
                Int8Array,
                Uint8Array,
                Uint8ClampedArray: "undefined" != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array,
                Int16Array,
                Uint16Array,
                Int32Array,
                Uint32Array,
                Float32Array,
                Float64Array
            };

            function $s(e) {
                es.call(this, e)
            }
            $s.prototype = Object.assign(Object.create(es.prototype), {
                constructor: $s,
                load: function (e, t, n, r) {
                    var i = this,
                        o = "" === this.path ? Xs(e) : this.path;
                    this.resourcePath = this.resourcePath || o;
                    var a = new ns(i.manager);
                    a.setPath(this.path), a.load(e, (function (n) {
                        var o = null;
                        try {
                            o = JSON.parse(n)
                        } catch (t) {
                            return void 0 !== r && r(t), void console.error("THREE:ObjectLoader: Can't parse " + e + ".", t.message)
                        }
                        var a = o.metadata;
                        void 0 !== a && void 0 !== a.type && "geometry" !== a.type.toLowerCase() ? i.parse(o, t) : console.error("THREE.ObjectLoader: Can't load " + e)
                    }), n, r)
                },
                parse: function (e, t) {
                    var n = this.parseShape(e.shapes),
                        r = this.parseGeometries(e.geometries, n),
                        i = this.parseImages(e.images, (function () {
                            void 0 !== t && t(s)
                        })),
                        o = this.parseTextures(e.textures, i),
                        a = this.parseMaterials(e.materials, o),
                        s = this.parseObject(e.object, r, a);
                    return e.animations && (s.animations = this.parseAnimations(e.animations)), void 0 !== e.images && 0 !== e.images.length || void 0 !== t && t(s), s
                },
                parseShape: function (e) {
                    var t = {};
                    if (void 0 !== e)
                        for (var n = 0, r = e.length; n < r; n++) {
                            var i = (new Ps).fromJSON(e[n]);
                            t[i.uuid] = i
                        }
                    return t
                },
                parseGeometries: function (e, t) {
                    var n = {};
                    if (void 0 !== e)
                        for (var r = new Zs, i = 0, o = e.length; i < o; i++) {
                            var a, s = e[i];
                            switch (s.type) {
                                case "PlaneGeometry":
                                case "PlaneBufferGeometry":
                                    a = new Ta[s.type](s.width, s.height, s.widthSegments, s.heightSegments);
                                    break;
                                case "BoxGeometry":
                                case "BoxBufferGeometry":
                                case "CubeGeometry":
                                    a = new Ta[s.type](s.width, s.height, s.depth, s.widthSegments, s.heightSegments, s.depthSegments);
                                    break;
                                case "CircleGeometry":
                                case "CircleBufferGeometry":
                                    a = new Ta[s.type](s.radius, s.segments, s.thetaStart, s.thetaLength);
                                    break;
                                case "CylinderGeometry":
                                case "CylinderBufferGeometry":
                                    a = new Ta[s.type](s.radiusTop, s.radiusBottom, s.height, s.radialSegments, s.heightSegments, s.openEnded, s.thetaStart, s.thetaLength);
                                    break;
                                case "ConeGeometry":
                                case "ConeBufferGeometry":
                                    a = new Ta[s.type](s.radius, s.height, s.radialSegments, s.heightSegments, s.openEnded, s.thetaStart, s.thetaLength);
                                    break;
                                case "SphereGeometry":
                                case "SphereBufferGeometry":
                                    a = new Ta[s.type](s.radius, s.widthSegments, s.heightSegments, s.phiStart, s.phiLength, s.thetaStart, s.thetaLength);
                                    break;
                                case "DodecahedronGeometry":
                                case "DodecahedronBufferGeometry":
                                case "IcosahedronGeometry":
                                case "IcosahedronBufferGeometry":
                                case "OctahedronGeometry":
                                case "OctahedronBufferGeometry":
                                case "TetrahedronGeometry":
                                case "TetrahedronBufferGeometry":
                                    a = new Ta[s.type](s.radius, s.detail);
                                    break;
                                case "RingGeometry":
                                case "RingBufferGeometry":
                                    a = new Ta[s.type](s.innerRadius, s.outerRadius, s.thetaSegments, s.phiSegments, s.thetaStart, s.thetaLength);
                                    break;
                                case "TorusGeometry":
                                case "TorusBufferGeometry":
                                    a = new Ta[s.type](s.radius, s.tube, s.radialSegments, s.tubularSegments, s.arc);
                                    break;
                                case "TorusKnotGeometry":
                                case "TorusKnotBufferGeometry":
                                    a = new Ta[s.type](s.radius, s.tube, s.tubularSegments, s.radialSegments, s.p, s.q);
                                    break;
                                case "TubeGeometry":
                                case "TubeBufferGeometry":
                                    a = new Ta[s.type]((new js[s.path.type]).fromJSON(s.path), s.tubularSegments, s.radius, s.radialSegments, s.closed);
                                    break;
                                case "LatheGeometry":
                                case "LatheBufferGeometry":
                                    a = new Ta[s.type](s.points, s.segments, s.phiStart, s.phiLength);
                                    break;
                                case "PolyhedronGeometry":
                                case "PolyhedronBufferGeometry":
                                    a = new Ta[s.type](s.vertices, s.indices, s.radius, s.details);
                                    break;
                                case "ShapeGeometry":
                                case "ShapeBufferGeometry":
                                    for (var c = [], l = 0, u = s.shapes.length; l < u; l++) {
                                        var h = t[s.shapes[l]];
                                        c.push(h)
                                    }
                                    a = new Ta[s.type](c, s.curveSegments);
                                    break;
                                case "ExtrudeGeometry":
                                case "ExtrudeBufferGeometry":
                                    for (c = [], l = 0, u = s.shapes.length; l < u; l++) {
                                        h = t[s.shapes[l]];
                                        c.push(h)
                                    }
                                    var d = s.options.extrudePath;
                                    void 0 !== d && (s.options.extrudePath = (new js[d.type]).fromJSON(d)), a = new Ta[s.type](c, s.options);
                                    break;
                                case "BufferGeometry":
                                case "InstancedBufferGeometry":
                                    a = r.parse(s);
                                    break;
                                case "Geometry":
                                    console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');
                                    break;
                                default:
                                    console.warn('THREE.ObjectLoader: Unsupported geometry type "' + s.type + '"');
                                    continue
                            }
                            a.uuid = s.uuid, void 0 !== s.name && (a.name = s.name), !0 === a.isBufferGeometry && void 0 !== s.userData && (a.userData = s.userData), n[s.uuid] = a
                        }
                    return n
                },
                parseMaterials: function (e, t) {
                    var n = {},
                        r = {};
                    if (void 0 !== e) {
                        var i = new qs;
                        i.setTextures(t);
                        for (var o = 0, a = e.length; o < a; o++) {
                            var s = e[o];
                            if ("MultiMaterial" === s.type) {
                                for (var c = [], l = 0; l < s.materials.length; l++) {
                                    var u = s.materials[l];
                                    void 0 === n[u.uuid] && (n[u.uuid] = i.parse(u)), c.push(n[u.uuid])
                                }
                                r[s.uuid] = c
                            } else void 0 === n[s.uuid] && (n[s.uuid] = i.parse(s)), r[s.uuid] = n[s.uuid]
                        }
                    }
                    return r
                },
                parseAnimations: function (e) {
                    for (var t = [], n = 0; n < e.length; n++) {
                        var r = e[n],
                            i = Ja.parse(r);
                        void 0 !== r.uuid && (i.uuid = r.uuid), t.push(i)
                    }
                    return t
                },
                parseImages: function (e, t) {
                    var n = this,
                        r = {};

                    function i(e) {
                        return n.manager.itemStart(e), o.load(e, (function () {
                            n.manager.itemEnd(e)
                        }), void 0, (function () {
                            n.manager.itemError(e), n.manager.itemEnd(e)
                        }))
                    }
                    if (void 0 !== e && e.length > 0) {
                        var o = new as(new $a(t));
                        o.setCrossOrigin(this.crossOrigin);
                        for (var a = 0, s = e.length; a < s; a++) {
                            var c = e[a],
                                l = c.url;
                            if (Array.isArray(l)) {
                                r[c.uuid] = [];
                                for (var u = 0, h = l.length; u < h; u++) {
                                    var d = l[u],
                                        p = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(d) ? d : n.resourcePath + d;
                                    r[c.uuid].push(i(p))
                                }
                            } else {
                                p = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url) ? c.url : n.resourcePath + c.url;
                                r[c.uuid] = i(p)
                            }
                        }
                    }
                    return r
                },
                parseTextures: function (e, t) {
                    function n(e, t) {
                        return "number" == typeof e ? e : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", e), t[e])
                    }
                    var r = {};
                    if (void 0 !== e)
                        for (var i = 0, o = e.length; i < o; i++) {
                            var a, s = e[i];
                            void 0 === s.image && console.warn('THREE.ObjectLoader: No "image" specified for', s.uuid), void 0 === t[s.image] && console.warn("THREE.ObjectLoader: Undefined image", s.image), (a = Array.isArray(t[s.image]) ? new fn(t[s.image]) : new d(t[s.image])).needsUpdate = !0, a.uuid = s.uuid, void 0 !== s.name && (a.name = s.name), void 0 !== s.mapping && (a.mapping = n(s.mapping, ec)), void 0 !== s.offset && a.offset.fromArray(s.offset), void 0 !== s.repeat && a.repeat.fromArray(s.repeat), void 0 !== s.center && a.center.fromArray(s.center), void 0 !== s.rotation && (a.rotation = s.rotation), void 0 !== s.wrap && (a.wrapS = n(s.wrap[0], tc), a.wrapT = n(s.wrap[1], tc)), void 0 !== s.format && (a.format = s.format), void 0 !== s.type && (a.type = s.type), void 0 !== s.encoding && (a.encoding = s.encoding), void 0 !== s.minFilter && (a.minFilter = n(s.minFilter, nc)), void 0 !== s.magFilter && (a.magFilter = n(s.magFilter, nc)), void 0 !== s.anisotropy && (a.anisotropy = s.anisotropy), void 0 !== s.flipY && (a.flipY = s.flipY), void 0 !== s.premultiplyAlpha && (a.premultiplyAlpha = s.premultiplyAlpha), void 0 !== s.unpackAlignment && (a.unpackAlignment = s.unpackAlignment), r[s.uuid] = a
                        }
                    return r
                },
                parseObject: function (e, t, n) {
                    var r;

                    function i(e) {
                        return void 0 === t[e] && console.warn("THREE.ObjectLoader: Undefined geometry", e), t[e]
                    }

                    function o(e) {
                        if (void 0 !== e) {
                            if (Array.isArray(e)) {
                                for (var t = [], r = 0, i = e.length; r < i; r++) {
                                    var o = e[r];
                                    void 0 === n[o] && console.warn("THREE.ObjectLoader: Undefined material", o), t.push(n[o])
                                }
                                return t
                            }
                            return void 0 === n[e] && console.warn("THREE.ObjectLoader: Undefined material", e), n[e]
                        }
                    }
                    switch (e.type) {
                        case "Scene":
                            r = new q, void 0 !== e.background && Number.isInteger(e.background) && (r.background = new Ie(e.background)), void 0 !== e.fog && ("Fog" === e.fog.type ? r.fog = new ni(e.fog.color, e.fog.near, e.fog.far) : "FogExp2" === e.fog.type && (r.fog = new ti(e.fog.color, e.fog.density)));
                            break;
                        case "PerspectiveCamera":
                            r = new Ht(e.fov, e.aspect, e.near, e.far), void 0 !== e.focus && (r.focus = e.focus), void 0 !== e.zoom && (r.zoom = e.zoom), void 0 !== e.filmGauge && (r.filmGauge = e.filmGauge), void 0 !== e.filmOffset && (r.filmOffset = e.filmOffset), void 0 !== e.view && (r.view = Object.assign({}, e.view));
                            break;
                        case "OrthographicCamera":
                            r = new Bs(e.left, e.right, e.top, e.bottom, e.near, e.far), void 0 !== e.zoom && (r.zoom = e.zoom), void 0 !== e.view && (r.view = Object.assign({}, e.view));
                            break;
                        case "AmbientLight":
                            r = new Hs(e.color, e.intensity);
                            break;
                        case "DirectionalLight":
                            r = new Us(e.color, e.intensity);
                            break;
                        case "PointLight":
                            r = new zs(e.color, e.intensity, e.distance, e.decay);
                            break;
                        case "RectAreaLight":
                            r = new Gs(e.color, e.intensity, e.width, e.height);
                            break;
                        case "SpotLight":
                            r = new Is(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);
                            break;
                        case "HemisphereLight":
                            r = new Rs(e.color, e.groundColor, e.intensity);
                            break;
                        case "LightProbe":
                            r = (new Ws).fromJSON(e);
                            break;
                        case "SkinnedMesh":
                            console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
                        case "Mesh":
                            r = new jt(a = i(e.geometry), s = o(e.material));
                            break;
                        case "InstancedMesh":
                            var a = i(e.geometry),
                                s = o(e.material),
                                c = e.count,
                                l = e.instanceMatrix;
                            (r = new Bi(a, s, c)).instanceMatrix = new We(new Float32Array(l.array), 16);
                            break;
                        case "LOD":
                            r = new Li;
                            break;
                        case "Line":
                            r = new qi(i(e.geometry), o(e.material), e.mode);
                            break;
                        case "LineLoop":
                            r = new Zi(i(e.geometry), o(e.material));
                            break;
                        case "LineSegments":
                            r = new Ji(i(e.geometry), o(e.material));
                            break;
                        case "PointCloud":
                        case "Points":
                            r = new no(i(e.geometry), o(e.material));
                            break;
                        case "Sprite":
                            r = new xi(o(e.material));
                            break;
                        case "Group":
                            r = new Zr;
                            break;
                        default:
                            r = new W
                    }
                    if (r.uuid = e.uuid, void 0 !== e.name && (r.name = e.name), void 0 !== e.matrix ? (r.matrix.fromArray(e.matrix), void 0 !== e.matrixAutoUpdate && (r.matrixAutoUpdate = e.matrixAutoUpdate), r.matrixAutoUpdate && r.matrix.decompose(r.position, r.quaternion, r.scale)) : (void 0 !== e.position && r.position.fromArray(e.position), void 0 !== e.rotation && r.rotation.fromArray(e.rotation), void 0 !== e.quaternion && r.quaternion.fromArray(e.quaternion), void 0 !== e.scale && r.scale.fromArray(e.scale)), void 0 !== e.castShadow && (r.castShadow = e.castShadow), void 0 !== e.receiveShadow && (r.receiveShadow = e.receiveShadow), e.shadow && (void 0 !== e.shadow.bias && (r.shadow.bias = e.shadow.bias), void 0 !== e.shadow.radius && (r.shadow.radius = e.shadow.radius), void 0 !== e.shadow.mapSize && r.shadow.mapSize.fromArray(e.shadow.mapSize), void 0 !== e.shadow.camera && (r.shadow.camera = this.parseObject(e.shadow.camera))), void 0 !== e.visible && (r.visible = e.visible), void 0 !== e.frustumCulled && (r.frustumCulled = e.frustumCulled), void 0 !== e.renderOrder && (r.renderOrder = e.renderOrder), void 0 !== e.userData && (r.userData = e.userData), void 0 !== e.layers && (r.layers.mask = e.layers), void 0 !== e.children)
                        for (var u = e.children, h = 0; h < u.length; h++) r.add(this.parseObject(u[h], t, n));
                    if ("LOD" === e.type) {
                        void 0 !== e.autoUpdate && (r.autoUpdate = e.autoUpdate);
                        for (var d = e.levels, p = 0; p < d.length; p++) {
                            var f = d[p],
                                m = r.getObjectByProperty("uuid", f.object);
                            void 0 !== m && r.addLevel(m, f.distance)
                        }
                    }
                    return r
                }
            });
            var Ks, ec = {
                    UVMapping: 300,
                    CubeReflectionMapping: 301,
                    CubeRefractionMapping: 302,
                    EquirectangularReflectionMapping: 303,
                    EquirectangularRefractionMapping: 304,
                    SphericalReflectionMapping: 305,
                    CubeUVReflectionMapping: 306,
                    CubeUVRefractionMapping: 307
                },
                tc = {
                    RepeatWrapping: 1e3,
                    ClampToEdgeWrapping: 1001,
                    MirroredRepeatWrapping: 1002
                },
                nc = {
                    NearestFilter: 1003,
                    NearestMipmapNearestFilter: 1004,
                    NearestMipmapLinearFilter: 1005,
                    LinearFilter: 1006,
                    LinearMipmapNearestFilter: 1007,
                    LinearMipmapLinearFilter: 1008
                };

            function rc(e) {
                "undefined" == typeof createImageBitmap && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), "undefined" == typeof fetch && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), es.call(this, e), this.options = void 0
            }

            function ic() {
                this.type = "ShapePath", this.color = new Ie, this.subPaths = [], this.currentPath = null
            }

            function oc(e) {
                this.type = "Font", this.data = e
            }

            function ac(e, t, n, r, i) {
                var o = i.glyphs[e] || i.glyphs["?"];
                if (o) {
                    var a, s, c, l, u, h, d, p, f = new ic;
                    if (o.o)
                        for (var m = o._cachedOutline || (o._cachedOutline = o.o.split(" ")), g = 0, v = m.length; g < v;) {
                            switch (m[g++]) {
                                case "m":
                                    a = m[g++] * t + n, s = m[g++] * t + r, f.moveTo(a, s);
                                    break;
                                case "l":
                                    a = m[g++] * t + n, s = m[g++] * t + r, f.lineTo(a, s);
                                    break;
                                case "q":
                                    c = m[g++] * t + n, l = m[g++] * t + r, u = m[g++] * t + n, h = m[g++] * t + r, f.quadraticCurveTo(u, h, c, l);
                                    break;
                                case "b":
                                    c = m[g++] * t + n, l = m[g++] * t + r, u = m[g++] * t + n, h = m[g++] * t + r, d = m[g++] * t + n, p = m[g++] * t + r, f.bezierCurveTo(u, h, d, p, c, l)
                            }
                        }
                    return {
                        offsetX: o.ha * t,
                        path: f
                    }
                }
                console.error('THREE.Font: character "' + e + '" does not exists in font family ' + i.familyName + ".")
            }

            function sc(e) {
                es.call(this, e)
            }
            rc.prototype = Object.assign(Object.create(es.prototype), {
                constructor: rc,
                setOptions: function (e) {
                    return this.options = e, this
                },
                load: function (e, t, n, r) {
                    void 0 === e && (e = ""), void 0 !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
                    var i = this,
                        o = Qa.get(e);
                    if (void 0 !== o) return i.manager.itemStart(e), setTimeout((function () {
                        t && t(o), i.manager.itemEnd(e)
                    }), 0), o;
                    fetch(e).then((function (e) {
                        return e.blob()
                    })).then((function (e) {
                        return void 0 === i.options ? createImageBitmap(e) : createImageBitmap(e, i.options)
                    })).then((function (n) {
                        Qa.add(e, n), t && t(n), i.manager.itemEnd(e)
                    })).catch((function (t) {
                        r && r(t), i.manager.itemError(e), i.manager.itemEnd(e)
                    })), i.manager.itemStart(e)
                }
            }), Object.assign(ic.prototype, {
                moveTo: function (e, t) {
                    return this.currentPath = new Cs, this.subPaths.push(this.currentPath), this.currentPath.moveTo(e, t), this
                },
                lineTo: function (e, t) {
                    return this.currentPath.lineTo(e, t), this
                },
                quadraticCurveTo: function (e, t, n, r) {
                    return this.currentPath.quadraticCurveTo(e, t, n, r), this
                },
                bezierCurveTo: function (e, t, n, r, i, o) {
                    return this.currentPath.bezierCurveTo(e, t, n, r, i, o), this
                },
                splineThru: function (e) {
                    return this.currentPath.splineThru(e), this
                },
                toShapes: function (e, t) {
                    function n(e) {
                        for (var t = [], n = 0, r = e.length; n < r; n++) {
                            var i = e[n],
                                o = new Ps;
                            o.curves = i.curves, t.push(o)
                        }
                        return t
                    }

                    function r(e, t) {
                        for (var n = t.length, r = !1, i = n - 1, o = 0; o < n; i = o++) {
                            var a = t[i],
                                s = t[o],
                                c = s.x - a.x,
                                l = s.y - a.y;
                            if (Math.abs(l) > Number.EPSILON) {
                                if (l < 0 && (a = t[o], c = -c, s = t[i], l = -l), e.y < a.y || e.y > s.y) continue;
                                if (e.y === a.y) {
                                    if (e.x === a.x) return !0
                                } else {
                                    var u = l * (e.x - a.x) - c * (e.y - a.y);
                                    if (0 === u) return !0;
                                    if (u < 0) continue;
                                    r = !r
                                }
                            } else {
                                if (e.y !== a.y) continue;
                                if (s.x <= e.x && e.x <= a.x || a.x <= e.x && e.x <= s.x) return !0
                            }
                        }
                        return r
                    }
                    var i = Ko.isClockWise,
                        o = this.subPaths;
                    if (0 === o.length) return [];
                    if (!0 === t) return n(o);
                    var a, s, c, l = [];
                    if (1 === o.length) return s = o[0], (c = new Ps).curves = s.curves, l.push(c), l;
                    var u = !i(o[0].getPoints());
                    u = e ? !u : u;
                    var h, d, p = [],
                        f = [],
                        m = [],
                        g = 0;
                    f[g] = void 0, m[g] = [];
                    for (var v = 0, y = o.length; v < y; v++) a = i(h = (s = o[v]).getPoints()), (a = e ? !a : a) ? (!u && f[g] && g++, f[g] = {
                        s: new Ps,
                        p: h
                    }, f[g].s.curves = s.curves, u && g++, m[g] = []) : m[g].push({
                        h: s,
                        p: h[0]
                    });
                    if (!f[0]) return n(o);
                    if (f.length > 1) {
                        for (var _ = !1, x = [], b = 0, w = f.length; b < w; b++) p[b] = [];
                        for (b = 0, w = f.length; b < w; b++)
                            for (var M = m[b], T = 0; T < M.length; T++) {
                                for (var S = M[T], E = !0, A = 0; A < f.length; A++) r(S.p, f[A].p) && (b !== A && x.push({
                                    froms: b,
                                    tos: A,
                                    hole: T
                                }), E ? (E = !1, p[A].push(S)) : _ = !0);
                                E && p[b].push(S)
                            }
                        x.length > 0 && (_ || (m = p))
                    }
                    v = 0;
                    for (var j = f.length; v < j; v++) {
                        c = f[v].s, l.push(c);
                        for (var L = 0, C = (d = m[v]).length; L < C; L++) c.holes.push(d[L].h)
                    }
                    return l
                }
            }), Object.assign(oc.prototype, {
                isFont: !0,
                generateShapes: function (e, t) {
                    void 0 === t && (t = 100);
                    for (var n = [], r = function (e, t, n) {
                            for (var r = Array.from ? Array.from(e) : String(e).split(""), i = t / n.resolution, o = (n.boundingBox.yMax - n.boundingBox.yMin + n.underlineThickness) * i, a = [], s = 0, c = 0, l = 0; l < r.length; l++) {
                                var u = r[l];
                                if ("\n" === u) s = 0, c -= o;
                                else {
                                    var h = ac(u, i, s, c, n);
                                    s += h.offsetX, a.push(h.path)
                                }
                            }
                            return a
                        }(e, t, this.data), i = 0, o = r.length; i < o; i++) Array.prototype.push.apply(n, r[i].toShapes());
                    return n
                }
            }), sc.prototype = Object.assign(Object.create(es.prototype), {
                constructor: sc,
                load: function (e, t, n, r) {
                    var i = this,
                        o = new ns(this.manager);
                    o.setPath(this.path), o.load(e, (function (e) {
                        var n;
                        try {
                            n = JSON.parse(e)
                        } catch (t) {
                            console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."), n = JSON.parse(e.substring(65, e.length - 2))
                        }
                        var r = i.parse(n);
                        t && t(r)
                    }), n, r)
                },
                parse: function (e) {
                    return new oc(e)
                }
            });
            var cc = function () {
                return void 0 === Ks && (Ks = new(window.AudioContext || window.webkitAudioContext)), Ks
            };

            function lc(e) {
                es.call(this, e)
            }

            function uc(e, t, n) {
                Ws.call(this, void 0, n);
                var r = (new Ie).set(e),
                    i = (new Ie).set(t),
                    o = new _(r.r, r.g, r.b),
                    a = new _(i.r, i.g, i.b),
                    s = Math.sqrt(Math.PI),
                    c = s * Math.sqrt(.75);
                this.sh.coefficients[0].copy(o).add(a).multiplyScalar(s), this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(c)
            }

            function hc(e, t) {
                Ws.call(this, void 0, t);
                var n = (new Ie).set(e);
                this.sh.coefficients[0].set(n.r, n.g, n.b).multiplyScalar(2 * Math.sqrt(Math.PI))
            }
            lc.prototype = Object.assign(Object.create(es.prototype), {
                constructor: lc,
                load: function (e, t, n, r) {
                    var i = this,
                        o = new ns(i.manager);
                    o.setResponseType("arraybuffer"), o.setPath(i.path), o.load(e, (function (n) {
                        try {
                            var o = n.slice(0);
                            cc().decodeAudioData(o, (function (e) {
                                t(e)
                            }))
                        } catch (t) {
                            r ? r(t) : console.error(t), i.manager.itemError(e)
                        }
                    }), n, r)
                }
            }), uc.prototype = Object.assign(Object.create(Ws.prototype), {
                constructor: uc,
                isHemisphereLightProbe: !0,
                copy: function (e) {
                    return Ws.prototype.copy.call(this, e), this
                },
                toJSON: function (e) {
                    return Ws.prototype.toJSON.call(this, e)
                }
            }), hc.prototype = Object.assign(Object.create(Ws.prototype), {
                constructor: hc,
                isAmbientLightProbe: !0,
                copy: function (e) {
                    return Ws.prototype.copy.call(this, e), this
                },
                toJSON: function (e) {
                    return Ws.prototype.toJSON.call(this, e)
                }
            });
            var dc = new A,
                pc = new A;

            function fc(e) {
                this.autoStart = void 0 === e || e, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1
            }
            Object.assign(function () {
                this.type = "StereoCamera", this.aspect = 1, this.eyeSep = .064, this.cameraL = new Ht, this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new Ht, this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1, this._cache = {
                    focus: null,
                    fov: null,
                    aspect: null,
                    near: null,
                    far: null,
                    zoom: null,
                    eyeSep: null
                }
            }.prototype, {
                update: function (e) {
                    var t = this._cache;
                    if (t.focus !== e.focus || t.fov !== e.fov || t.aspect !== e.aspect * this.aspect || t.near !== e.near || t.far !== e.far || t.zoom !== e.zoom || t.eyeSep !== this.eyeSep) {
                        t.focus = e.focus, t.fov = e.fov, t.aspect = e.aspect * this.aspect, t.near = e.near, t.far = e.far, t.zoom = e.zoom, t.eyeSep = this.eyeSep;
                        var n, r, i = e.projectionMatrix.clone(),
                            o = t.eyeSep / 2,
                            a = o * t.near / t.focus,
                            c = t.near * Math.tan(s.DEG2RAD * t.fov * .5) / t.zoom;
                        pc.elements[12] = -o, dc.elements[12] = o, n = -c * t.aspect + a, r = c * t.aspect + a, i.elements[0] = 2 * t.near / (r - n), i.elements[8] = (r + n) / (r - n), this.cameraL.projectionMatrix.copy(i), n = -c * t.aspect - a, r = c * t.aspect - a, i.elements[0] = 2 * t.near / (r - n), i.elements[8] = (r + n) / (r - n), this.cameraR.projectionMatrix.copy(i)
                    }
                    this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(pc), this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(dc)
                }
            }), Object.assign(fc.prototype, {
                start: function () {
                    this.startTime = ("undefined" == typeof performance ? Date : performance).now(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0
                },
                stop: function () {
                    this.getElapsedTime(), this.running = !1, this.autoStart = !1
                },
                getElapsedTime: function () {
                    return this.getDelta(), this.elapsedTime
                },
                getDelta: function () {
                    var e = 0;
                    if (this.autoStart && !this.running) return this.start(), 0;
                    if (this.running) {
                        var t = ("undefined" == typeof performance ? Date : performance).now();
                        e = (t - this.oldTime) / 1e3, this.oldTime = t, this.elapsedTime += e
                    }
                    return e
                }
            });
            var mc = new _,
                gc = new g,
                vc = new _,
                yc = new _;

            function _c() {
                W.call(this), this.type = "AudioListener", this.context = cc(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null, this.timeDelta = 0, this._clock = new fc
            }

            function xc(e) {
                W.call(this), this.type = "Audio", this.listener = e, this.context = e.context, this.gain = this.context.createGain(), this.gain.connect(e.getInput()), this.autoplay = !1, this.buffer = null, this.detune = 0, this.loop = !1, this.loopStart = 0, this.loopEnd = 0, this.offset = 0, this.duration = void 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.sourceType = "empty", this._startedAt = 0, this._progress = 0, this.filters = []
            }
            _c.prototype = Object.assign(Object.create(W.prototype), {
                constructor: _c,
                getInput: function () {
                    return this.gain
                },
                removeFilter: function () {
                    return null !== this.filter && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this
                },
                getFilter: function () {
                    return this.filter
                },
                setFilter: function (e) {
                    return null !== this.filter ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = e, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this
                },
                getMasterVolume: function () {
                    return this.gain.gain.value
                },
                setMasterVolume: function (e) {
                    return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this
                },
                updateMatrixWorld: function (e) {
                    W.prototype.updateMatrixWorld.call(this, e);
                    var t = this.context.listener,
                        n = this.up;
                    if (this.timeDelta = this._clock.getDelta(), this.matrixWorld.decompose(mc, gc, vc), yc.set(0, 0, -1).applyQuaternion(gc), t.positionX) {
                        var r = this.context.currentTime + this.timeDelta;
                        t.positionX.linearRampToValueAtTime(mc.x, r), t.positionY.linearRampToValueAtTime(mc.y, r), t.positionZ.linearRampToValueAtTime(mc.z, r), t.forwardX.linearRampToValueAtTime(yc.x, r), t.forwardY.linearRampToValueAtTime(yc.y, r), t.forwardZ.linearRampToValueAtTime(yc.z, r), t.upX.linearRampToValueAtTime(n.x, r), t.upY.linearRampToValueAtTime(n.y, r), t.upZ.linearRampToValueAtTime(n.z, r)
                    } else t.setPosition(mc.x, mc.y, mc.z), t.setOrientation(yc.x, yc.y, yc.z, n.x, n.y, n.z)
                }
            }), xc.prototype = Object.assign(Object.create(W.prototype), {
                constructor: xc,
                getOutput: function () {
                    return this.gain
                },
                setNodeSource: function (e) {
                    return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = e, this.connect(), this
                },
                setMediaElementSource: function (e) {
                    return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(e), this.connect(), this
                },
                setMediaStreamSource: function (e) {
                    return this.hasPlaybackControl = !1, this.sourceType = "mediaStreamNode", this.source = this.context.createMediaStreamSource(e), this.connect(), this
                },
                setBuffer: function (e) {
                    return this.buffer = e, this.sourceType = "buffer", this.autoplay && this.play(), this
                },
                play: function (e) {
                    if (void 0 === e && (e = 0), !0 !== this.isPlaying) {
                        if (!1 !== this.hasPlaybackControl) {
                            this._startedAt = this.context.currentTime + e;
                            var t = this.context.createBufferSource();
                            return t.buffer = this.buffer, t.loop = this.loop, t.loopStart = this.loopStart, t.loopEnd = this.loopEnd, t.onended = this.onEnded.bind(this), t.start(this._startedAt, this._progress + this.offset, this.duration), this.isPlaying = !0, this.source = t, this.setDetune(this.detune), this.setPlaybackRate(this.playbackRate), this.connect()
                        }
                        console.warn("THREE.Audio: this Audio has no playback control.")
                    } else console.warn("THREE.Audio: Audio is already playing.")
                },
                pause: function () {
                    if (!1 !== this.hasPlaybackControl) return !0 === this.isPlaying && (this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate, !0 === this.loop && (this._progress = this._progress % (this.duration || this.buffer.duration)), this.source.stop(), this.source.onended = null, this.isPlaying = !1), this;
                    console.warn("THREE.Audio: this Audio has no playback control.")
                },
                stop: function () {
                    if (!1 !== this.hasPlaybackControl) return this._progress = 0, this.source.stop(), this.source.onended = null, this.isPlaying = !1, this;
                    console.warn("THREE.Audio: this Audio has no playback control.")
                },
                connect: function () {
                    if (this.filters.length > 0) {
                        this.source.connect(this.filters[0]);
                        for (var e = 1, t = this.filters.length; e < t; e++) this.filters[e - 1].connect(this.filters[e]);
                        this.filters[this.filters.length - 1].connect(this.getOutput())
                    } else this.source.connect(this.getOutput());
                    return this
                },
                disconnect: function () {
                    if (this.filters.length > 0) {
                        this.source.disconnect(this.filters[0]);
                        for (var e = 1, t = this.filters.length; e < t; e++) this.filters[e - 1].disconnect(this.filters[e]);
                        this.filters[this.filters.length - 1].disconnect(this.getOutput())
                    } else this.source.disconnect(this.getOutput());
                    return this
                },
                getFilters: function () {
                    return this.filters
                },
                setFilters: function (e) {
                    return e || (e = []), !0 === this.isPlaying ? (this.disconnect(), this.filters = e, this.connect()) : this.filters = e, this
                },
                setDetune: function (e) {
                    if (this.detune = e, void 0 !== this.source.detune) return !0 === this.isPlaying && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01), this
                },
                getDetune: function () {
                    return this.detune
                },
                getFilter: function () {
                    return this.getFilters()[0]
                },
                setFilter: function (e) {
                    return this.setFilters(e ? [e] : [])
                },
                setPlaybackRate: function (e) {
                    if (!1 !== this.hasPlaybackControl) return this.playbackRate = e, !0 === this.isPlaying && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01), this;
                    console.warn("THREE.Audio: this Audio has no playback control.")
                },
                getPlaybackRate: function () {
                    return this.playbackRate
                },
                onEnded: function () {
                    this.isPlaying = !1
                },
                getLoop: function () {
                    return !1 === this.hasPlaybackControl ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop
                },
                setLoop: function (e) {
                    if (!1 !== this.hasPlaybackControl) return this.loop = e, !0 === this.isPlaying && (this.source.loop = this.loop), this;
                    console.warn("THREE.Audio: this Audio has no playback control.")
                },
                setLoopStart: function (e) {
                    return this.loopStart = e, this
                },
                setLoopEnd: function (e) {
                    return this.loopEnd = e, this
                },
                getVolume: function () {
                    return this.gain.gain.value
                },
                setVolume: function (e) {
                    return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this
                }
            });
            var bc = new _,
                wc = new g,
                Mc = new _,
                Tc = new _;

            function Sc(e) {
                xc.call(this, e), this.panner = this.context.createPanner(), this.panner.panningModel = "HRTF", this.panner.connect(this.gain)
            }

            function Ec(e, t) {
                this.analyser = e.context.createAnalyser(), this.analyser.fftSize = void 0 !== t ? t : 2048, this.data = new Uint8Array(this.analyser.frequencyBinCount), e.getOutput().connect(this.analyser)
            }

            function Ac(e, t, n) {
                var r, i, o;
                switch (this.binding = e, this.valueSize = n, t) {
                    case "quaternion":
                        r = this._slerp, i = this._slerpAdditive, o = this._setAdditiveIdentityQuaternion, this.buffer = new Float64Array(6 * n), this._workIndex = 5;
                        break;
                    case "string":
                    case "bool":
                        r = this._select, i = this._select, o = this._setAdditiveIdentityOther, this.buffer = new Array(5 * n);
                        break;
                    default:
                        r = this._lerp, i = this._lerpAdditive, o = this._setAdditiveIdentityNumeric, this.buffer = new Float64Array(5 * n)
                }
                this._mixBufferRegion = r, this._mixBufferRegionAdditive = i, this._setIdentity = o, this._origIndex = 3, this._addIndex = 4, this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, this.useCount = 0, this.referenceCount = 0
            }
            Sc.prototype = Object.assign(Object.create(xc.prototype), {
                constructor: Sc,
                getOutput: function () {
                    return this.panner
                },
                getRefDistance: function () {
                    return this.panner.refDistance
                },
                setRefDistance: function (e) {
                    return this.panner.refDistance = e, this
                },
                getRolloffFactor: function () {
                    return this.panner.rolloffFactor
                },
                setRolloffFactor: function (e) {
                    return this.panner.rolloffFactor = e, this
                },
                getDistanceModel: function () {
                    return this.panner.distanceModel
                },
                setDistanceModel: function (e) {
                    return this.panner.distanceModel = e, this
                },
                getMaxDistance: function () {
                    return this.panner.maxDistance
                },
                setMaxDistance: function (e) {
                    return this.panner.maxDistance = e, this
                },
                setDirectionalCone: function (e, t, n) {
                    return this.panner.coneInnerAngle = e, this.panner.coneOuterAngle = t, this.panner.coneOuterGain = n, this
                },
                updateMatrixWorld: function (e) {
                    if (W.prototype.updateMatrixWorld.call(this, e), !0 !== this.hasPlaybackControl || !1 !== this.isPlaying) {
                        this.matrixWorld.decompose(bc, wc, Mc), Tc.set(0, 0, 1).applyQuaternion(wc);
                        var t = this.panner;
                        if (t.positionX) {
                            var n = this.context.currentTime + this.listener.timeDelta;
                            t.positionX.linearRampToValueAtTime(bc.x, n), t.positionY.linearRampToValueAtTime(bc.y, n), t.positionZ.linearRampToValueAtTime(bc.z, n), t.orientationX.linearRampToValueAtTime(Tc.x, n), t.orientationY.linearRampToValueAtTime(Tc.y, n), t.orientationZ.linearRampToValueAtTime(Tc.z, n)
                        } else t.setPosition(bc.x, bc.y, bc.z), t.setOrientation(Tc.x, Tc.y, Tc.z)
                    }
                }
            }), Object.assign(Ec.prototype, {
                getFrequencyData: function () {
                    return this.analyser.getByteFrequencyData(this.data), this.data
                },
                getAverageFrequency: function () {
                    for (var e = 0, t = this.getFrequencyData(), n = 0; n < t.length; n++) e += t[n];
                    return e / t.length
                }
            }), Object.assign(Ac.prototype, {
                accumulate: function (e, t) {
                    var n = this.buffer,
                        r = this.valueSize,
                        i = e * r + r,
                        o = this.cumulativeWeight;
                    if (0 === o) {
                        for (var a = 0; a !== r; ++a) n[i + a] = n[a];
                        o = t
                    } else {
                        var s = t / (o += t);
                        this._mixBufferRegion(n, i, 0, s, r)
                    }
                    this.cumulativeWeight = o
                },
                accumulateAdditive: function (e) {
                    var t = this.buffer,
                        n = this.valueSize,
                        r = n * this._addIndex;
                    0 === this.cumulativeWeightAdditive && this._setIdentity(), this._mixBufferRegionAdditive(t, r, 0, e, n), this.cumulativeWeightAdditive += e
                },
                apply: function (e) {
                    var t = this.valueSize,
                        n = this.buffer,
                        r = e * t + t,
                        i = this.cumulativeWeight,
                        o = this.cumulativeWeightAdditive,
                        a = this.binding;
                    if (this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, i < 1) {
                        var s = t * this._origIndex;
                        this._mixBufferRegion(n, r, s, 1 - i, t)
                    }
                    o > 0 && this._mixBufferRegionAdditive(n, r, this._addIndex * t, 1, t);
                    for (var c = t, l = t + t; c !== l; ++c)
                        if (n[c] !== n[c + t]) {
                            a.setValue(n, r);
                            break
                        }
                },
                saveOriginalState: function () {
                    var e = this.binding,
                        t = this.buffer,
                        n = this.valueSize,
                        r = n * this._origIndex;
                    e.getValue(t, r);
                    for (var i = n, o = r; i !== o; ++i) t[i] = t[r + i % n];
                    this._setIdentity(), this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0
                },
                restoreOriginalState: function () {
                    var e = 3 * this.valueSize;
                    this.binding.setValue(this.buffer, e)
                },
                _setAdditiveIdentityNumeric: function () {
                    for (var e = this._addIndex * this.valueSize, t = e + this.valueSize, n = e; n < t; n++) this.buffer[n] = 0
                },
                _setAdditiveIdentityQuaternion: function () {
                    this._setAdditiveIdentityNumeric(), this.buffer[4 * this._addIndex + 3] = 1
                },
                _setAdditiveIdentityOther: function () {
                    for (var e = this._origIndex * this.valueSize, t = this._addIndex * this.valueSize, n = 0; n < this.valueSize; n++) this.buffer[t + n] = this.buffer[e + n]
                },
                _select: function (e, t, n, r, i) {
                    if (r >= .5)
                        for (var o = 0; o !== i; ++o) e[t + o] = e[n + o]
                },
                _slerp: function (e, t, n, r) {
                    g.slerpFlat(e, t, e, t, e, n, r)
                },
                _slerpAdditive: function (e, t, n, r, i) {
                    var o = this._workIndex * i;
                    g.multiplyQuaternionsFlat(e, o, e, t, e, n), g.slerpFlat(e, t, e, t, e, o, r)
                },
                _lerp: function (e, t, n, r, i) {
                    for (var o = 1 - r, a = 0; a !== i; ++a) {
                        var s = t + a;
                        e[s] = e[s] * o + e[n + a] * r
                    }
                },
                _lerpAdditive: function (e, t, n, r, i) {
                    for (var o = 0; o !== i; ++o) {
                        var a = t + o;
                        e[a] = e[a] + e[n + o] * r
                    }
                }
            });
            var jc = new RegExp("[\\[\\]\\.:\\/]", "g"),
                Lc = "[^" + "\\[\\]\\.:\\/".replace("\\.", "") + "]",
                Cc = /((?:WC+[\/:])*)/.source.replace("WC", "[^\\[\\]\\.:\\/]"),
                Pc = /(WCOD+)?/.source.replace("WCOD", Lc),
                Oc = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", "[^\\[\\]\\.:\\/]"),
                Rc = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", "[^\\[\\]\\.:\\/]"),
                Dc = new RegExp("^" + Cc + Pc + Oc + Rc + "$"),
                Nc = ["material", "materials", "bones"];

            function Ic(e, t, n) {
                var r = n || kc.parseTrackName(t);
                this._targetGroup = e, this._bindings = e.subscribe_(t, r)
            }

            function kc(e, t, n) {
                this.path = t, this.parsedPath = n || kc.parseTrackName(t), this.node = kc.findNode(e, this.parsedPath.nodeName) || e, this.rootNode = e
            }

            function zc(e, t, n, r) {
                this._mixer = e, this._clip = t, this._localRoot = n || null, this.blendMode = r || t.blendMode;
                for (var i = t.tracks, o = i.length, a = new Array(o), s = {
                        endingStart: 2400,
                        endingEnd: 2400
                    }, c = 0; c !== o; ++c) {
                    var l = i[c].createInterpolant(null);
                    a[c] = l, l.settings = s
                }
                this._interpolantSettings = s, this._interpolants = a, this._propertyBindings = new Array(o), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = 2201, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0
            }

            function Bc(e) {
                this._root = e, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1
            }

            function Fc(e) {
                "string" == typeof e && (console.warn("THREE.Uniform: Type parameter is no longer needed."), e = arguments[1]), this.value = e
            }

            function Uc(e, t, n) {
                ri.call(this, e, t), this.meshPerAttribute = n || 1
            }

            function Hc(e, t, n, r) {
                this.ray = new ve(e, t), this.near = n || 0, this.far = r || 1 / 0, this.camera = null, this.layers = new P, this.params = {
                    Mesh: {},
                    Line: {
                        threshold: 1
                    },
                    LOD: {},
                    Points: {
                        threshold: 1
                    },
                    Sprite: {}
                }, Object.defineProperties(this.params, {
                    PointCloud: {
                        get: function () {
                            return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."), this.Points
                        }
                    }
                })
            }

            function Gc(e, t) {
                return e.distance - t.distance
            }

            function Vc(e, t, n, r) {
                if (e.layers.test(t.layers) && e.raycast(t, n), !0 === r)
                    for (var i = e.children, o = 0, a = i.length; o < a; o++) Vc(i[o], t, n, !0)
            }
            Object.assign(Ic.prototype, {
                getValue: function (e, t) {
                    this.bind();
                    var n = this._targetGroup.nCachedObjects_,
                        r = this._bindings[n];
                    void 0 !== r && r.getValue(e, t)
                },
                setValue: function (e, t) {
                    for (var n = this._bindings, r = this._targetGroup.nCachedObjects_, i = n.length; r !== i; ++r) n[r].setValue(e, t)
                },
                bind: function () {
                    for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t) e[t].bind()
                },
                unbind: function () {
                    for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t) e[t].unbind()
                }
            }), Object.assign(kc, {
                Composite: Ic,
                create: function (e, t, n) {
                    return e && e.isAnimationObjectGroup ? new kc.Composite(e, t, n) : new kc(e, t, n)
                },
                sanitizeNodeName: function (e) {
                    return e.replace(/\s/g, "_").replace(jc, "")
                },
                parseTrackName: function (e) {
                    var t = Dc.exec(e);
                    if (!t) throw new Error("PropertyBinding: Cannot parse trackName: " + e);
                    var n = {
                            nodeName: t[2],
                            objectName: t[3],
                            objectIndex: t[4],
                            propertyName: t[5],
                            propertyIndex: t[6]
                        },
                        r = n.nodeName && n.nodeName.lastIndexOf(".");
                    if (void 0 !== r && -1 !== r) {
                        var i = n.nodeName.substring(r + 1); - 1 !== Nc.indexOf(i) && (n.nodeName = n.nodeName.substring(0, r), n.objectName = i)
                    }
                    if (null === n.propertyName || 0 === n.propertyName.length) throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
                    return n
                },
                findNode: function (e, t) {
                    if (!t || "" === t || "." === t || -1 === t || t === e.name || t === e.uuid) return e;
                    if (e.skeleton) {
                        var n = e.skeleton.getBoneByName(t);
                        if (void 0 !== n) return n
                    }
                    if (e.children) {
                        var r = function (e) {
                                for (var n = 0; n < e.length; n++) {
                                    var i = e[n];
                                    if (i.name === t || i.uuid === t) return i;
                                    var o = r(i.children);
                                    if (o) return o
                                }
                                return null
                            },
                            i = r(e.children);
                        if (i) return i
                    }
                    return null
                }
            }), Object.assign(kc.prototype, {
                _getValue_unavailable: function () {},
                _setValue_unavailable: function () {},
                BindingType: {
                    Direct: 0,
                    EntireArray: 1,
                    ArrayElement: 2,
                    HasFromToArray: 3
                },
                Versioning: {
                    None: 0,
                    NeedsUpdate: 1,
                    MatrixWorldNeedsUpdate: 2
                },
                GetterByBindingType: [function (e, t) {
                    e[t] = this.node[this.propertyName]
                }, function (e, t) {
                    for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r) e[t++] = n[r]
                }, function (e, t) {
                    e[t] = this.resolvedProperty[this.propertyIndex]
                }, function (e, t) {
                    this.resolvedProperty.toArray(e, t)
                }],
                SetterByBindingTypeAndVersioning: [
                    [function (e, t) {
                        this.targetObject[this.propertyName] = e[t]
                    }, function (e, t) {
                        this.targetObject[this.propertyName] = e[t], this.targetObject.needsUpdate = !0
                    }, function (e, t) {
                        this.targetObject[this.propertyName] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0
                    }],
                    [function (e, t) {
                        for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r) n[r] = e[t++]
                    }, function (e, t) {
                        for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r) n[r] = e[t++];
                        this.targetObject.needsUpdate = !0
                    }, function (e, t) {
                        for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r) n[r] = e[t++];
                        this.targetObject.matrixWorldNeedsUpdate = !0
                    }],
                    [function (e, t) {
                        this.resolvedProperty[this.propertyIndex] = e[t]
                    }, function (e, t) {
                        this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.needsUpdate = !0
                    }, function (e, t) {
                        this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0
                    }],
                    [function (e, t) {
                        this.resolvedProperty.fromArray(e, t)
                    }, function (e, t) {
                        this.resolvedProperty.fromArray(e, t), this.targetObject.needsUpdate = !0
                    }, function (e, t) {
                        this.resolvedProperty.fromArray(e, t), this.targetObject.matrixWorldNeedsUpdate = !0
                    }]
                ],
                getValue: function (e, t) {
                    this.bind(), this.getValue(e, t)
                },
                setValue: function (e, t) {
                    this.bind(), this.setValue(e, t)
                },
                bind: function () {
                    var e = this.node,
                        t = this.parsedPath,
                        n = t.objectName,
                        r = t.propertyName,
                        i = t.propertyIndex;
                    if (e || (e = kc.findNode(this.rootNode, t.nodeName) || this.rootNode, this.node = e), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, e) {
                        if (n) {
                            var o = t.objectIndex;
                            switch (n) {
                                case "materials":
                                    if (!e.material) return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                                    if (!e.material.materials) return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                                    e = e.material.materials;
                                    break;
                                case "bones":
                                    if (!e.skeleton) return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                                    e = e.skeleton.bones;
                                    for (var a = 0; a < e.length; a++)
                                        if (e[a].name === o) {
                                            o = a;
                                            break
                                        } break;
                                default:
                                    if (void 0 === e[n]) return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                                    e = e[n]
                            }
                            if (void 0 !== o) {
                                if (void 0 === e[o]) return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, e);
                                e = e[o]
                            }
                        }
                        var s = e[r];
                        if (void 0 !== s) {
                            var c = this.Versioning.None;
                            this.targetObject = e, void 0 !== e.needsUpdate ? c = this.Versioning.NeedsUpdate : void 0 !== e.matrixWorldNeedsUpdate && (c = this.Versioning.MatrixWorldNeedsUpdate);
                            var l = this.BindingType.Direct;
                            if (void 0 !== i) {
                                if ("morphTargetInfluences" === r) {
                                    if (!e.geometry) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                                    if (!e.geometry.isBufferGeometry) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.", this);
                                    if (!e.geometry.morphAttributes) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                                    void 0 !== e.morphTargetDictionary[i] && (i = e.morphTargetDictionary[i])
                                }
                                l = this.BindingType.ArrayElement, this.resolvedProperty = s, this.propertyIndex = i
                            } else void 0 !== s.fromArray && void 0 !== s.toArray ? (l = this.BindingType.HasFromToArray, this.resolvedProperty = s) : Array.isArray(s) ? (l = this.BindingType.EntireArray, this.resolvedProperty = s) : this.propertyName = r;
                            this.getValue = this.GetterByBindingType[l], this.setValue = this.SetterByBindingTypeAndVersioning[l][c]
                        } else {
                            var u = t.nodeName;
                            console.error("THREE.PropertyBinding: Trying to update property for track: " + u + "." + r + " but it wasn't found.", e)
                        }
                    } else console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.")
                },
                unbind: function () {
                    this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound
                }
            }), Object.assign(kc.prototype, {
                _getValue_unbound: kc.prototype.getValue,
                _setValue_unbound: kc.prototype.setValue
            }), Object.assign(function () {
                this.uuid = s.generateUUID(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
                var e = {};
                this._indicesByUUID = e;
                for (var t = 0, n = arguments.length; t !== n; ++t) e[arguments[t].uuid] = t;
                this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
                var r = this;
                this.stats = {
                    objects: {
                        get total() {
                            return r._objects.length
                        },
                        get inUse() {
                            return this.total - r.nCachedObjects_
                        }
                    },
                    get bindingsPerObject() {
                        return r._bindings.length
                    }
                }
            }.prototype, {
                isAnimationObjectGroup: !0,
                add: function () {
                    for (var e = this._objects, t = e.length, n = this.nCachedObjects_, r = this._indicesByUUID, i = this._paths, o = this._parsedPaths, a = this._bindings, s = a.length, c = void 0, l = 0, u = arguments.length; l !== u; ++l) {
                        var h = arguments[l],
                            d = h.uuid,
                            p = r[d];
                        if (void 0 === p) {
                            p = t++, r[d] = p, e.push(h);
                            for (var f = 0, m = s; f !== m; ++f) a[f].push(new kc(h, i[f], o[f]))
                        } else if (p < n) {
                            c = e[p];
                            var g = --n,
                                v = e[g];
                            r[v.uuid] = p, e[p] = v, r[d] = g, e[g] = h;
                            for (f = 0, m = s; f !== m; ++f) {
                                var y = a[f],
                                    _ = y[g],
                                    x = y[p];
                                y[p] = _, void 0 === x && (x = new kc(h, i[f], o[f])), y[g] = x
                            }
                        } else e[p] !== c && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")
                    }
                    this.nCachedObjects_ = n
                },
                remove: function () {
                    for (var e = this._objects, t = this.nCachedObjects_, n = this._indicesByUUID, r = this._bindings, i = r.length, o = 0, a = arguments.length; o !== a; ++o) {
                        var s = arguments[o],
                            c = s.uuid,
                            l = n[c];
                        if (void 0 !== l && l >= t) {
                            var u = t++,
                                h = e[u];
                            n[h.uuid] = l, e[l] = h, n[c] = u, e[u] = s;
                            for (var d = 0, p = i; d !== p; ++d) {
                                var f = r[d],
                                    m = f[u],
                                    g = f[l];
                                f[l] = m, f[u] = g
                            }
                        }
                    }
                    this.nCachedObjects_ = t
                },
                uncache: function () {
                    for (var e = this._objects, t = e.length, n = this.nCachedObjects_, r = this._indicesByUUID, i = this._bindings, o = i.length, a = 0, s = arguments.length; a !== s; ++a) {
                        var c = arguments[a],
                            l = c.uuid,
                            u = r[l];
                        if (void 0 !== u)
                            if (delete r[l], u < n) {
                                var h = --n,
                                    d = e[h],
                                    p = e[y = --t];
                                r[d.uuid] = u, e[u] = d, r[p.uuid] = h, e[h] = p, e.pop();
                                for (var f = 0, m = o; f !== m; ++f) {
                                    var g = (_ = i[f])[h],
                                        v = _[y];
                                    _[u] = g, _[h] = v, _.pop()
                                }
                            } else {
                                var y;
                                r[(p = e[y = --t]).uuid] = u, e[u] = p, e.pop();
                                for (f = 0, m = o; f !== m; ++f) {
                                    var _;
                                    (_ = i[f])[u] = _[y], _.pop()
                                }
                            }
                    }
                    this.nCachedObjects_ = n
                },
                subscribe_: function (e, t) {
                    var n = this._bindingsIndicesByPath,
                        r = n[e],
                        i = this._bindings;
                    if (void 0 !== r) return i[r];
                    var o = this._paths,
                        a = this._parsedPaths,
                        s = this._objects,
                        c = s.length,
                        l = this.nCachedObjects_,
                        u = new Array(c);
                    r = i.length, n[e] = r, o.push(e), a.push(t), i.push(u);
                    for (var h = l, d = s.length; h !== d; ++h) {
                        var p = s[h];
                        u[h] = new kc(p, e, t)
                    }
                    return u
                },
                unsubscribe_: function (e) {
                    var t = this._bindingsIndicesByPath,
                        n = t[e];
                    if (void 0 !== n) {
                        var r = this._paths,
                            i = this._parsedPaths,
                            o = this._bindings,
                            a = o.length - 1,
                            s = o[a];
                        t[e[a]] = n, o[n] = s, o.pop(), i[n] = i[a], i.pop(), r[n] = r[a], r.pop()
                    }
                }
            }), Object.assign(zc.prototype, {
                play: function () {
                    return this._mixer._activateAction(this), this
                },
                stop: function () {
                    return this._mixer._deactivateAction(this), this.reset()
                },
                reset: function () {
                    return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping()
                },
                isRunning: function () {
                    return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
                },
                isScheduled: function () {
                    return this._mixer._isActiveAction(this)
                },
                startAt: function (e) {
                    return this._startTime = e, this
                },
                setLoop: function (e, t) {
                    return this.loop = e, this.repetitions = t, this
                },
                setEffectiveWeight: function (e) {
                    return this.weight = e, this._effectiveWeight = this.enabled ? e : 0, this.stopFading()
                },
                getEffectiveWeight: function () {
                    return this._effectiveWeight
                },
                fadeIn: function (e) {
                    return this._scheduleFading(e, 0, 1)
                },
                fadeOut: function (e) {
                    return this._scheduleFading(e, 1, 0)
                },
                crossFadeFrom: function (e, t, n) {
                    if (e.fadeOut(t), this.fadeIn(t), n) {
                        var r = this._clip.duration,
                            i = e._clip.duration,
                            o = i / r,
                            a = r / i;
                        e.warp(1, o, t), this.warp(a, 1, t)
                    }
                    return this
                },
                crossFadeTo: function (e, t, n) {
                    return e.crossFadeFrom(this, t, n)
                },
                stopFading: function () {
                    var e = this._weightInterpolant;
                    return null !== e && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this
                },
                setEffectiveTimeScale: function (e) {
                    return this.timeScale = e, this._effectiveTimeScale = this.paused ? 0 : e, this.stopWarping()
                },
                getEffectiveTimeScale: function () {
                    return this._effectiveTimeScale
                },
                setDuration: function (e) {
                    return this.timeScale = this._clip.duration / e, this.stopWarping()
                },
                syncWith: function (e) {
                    return this.time = e.time, this.timeScale = e.timeScale, this.stopWarping()
                },
                halt: function (e) {
                    return this.warp(this._effectiveTimeScale, 0, e)
                },
                warp: function (e, t, n) {
                    var r = this._mixer,
                        i = r.time,
                        o = this._timeScaleInterpolant,
                        a = this.timeScale;
                    null === o && (o = r._lendControlInterpolant(), this._timeScaleInterpolant = o);
                    var s = o.parameterPositions,
                        c = o.sampleValues;
                    return s[0] = i, s[1] = i + n, c[0] = e / a, c[1] = t / a, this
                },
                stopWarping: function () {
                    var e = this._timeScaleInterpolant;
                    return null !== e && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this
                },
                getMixer: function () {
                    return this._mixer
                },
                getClip: function () {
                    return this._clip
                },
                getRoot: function () {
                    return this._localRoot || this._mixer._root
                },
                _update: function (e, t, n, r) {
                    if (this.enabled) {
                        var i = this._startTime;
                        if (null !== i) {
                            var o = (e - i) * n;
                            if (o < 0 || 0 === n) return;
                            this._startTime = null, t = n * o
                        }
                        t *= this._updateTimeScale(e);
                        var a = this._updateTime(t),
                            s = this._updateWeight(e);
                        if (s > 0) {
                            var c = this._interpolants,
                                l = this._propertyBindings;
                            switch (this.blendMode) {
                                case 2501:
                                    for (var u = 0, h = c.length; u !== h; ++u) c[u].evaluate(a), l[u].accumulateAdditive(s);
                                    break;
                                case 2500:
                                default:
                                    for (u = 0, h = c.length; u !== h; ++u) c[u].evaluate(a), l[u].accumulate(r, s)
                            }
                        }
                    } else this._updateWeight(e)
                },
                _updateWeight: function (e) {
                    var t = 0;
                    if (this.enabled) {
                        t = this.weight;
                        var n = this._weightInterpolant;
                        if (null !== n) {
                            var r = n.evaluate(e)[0];
                            t *= r, e > n.parameterPositions[1] && (this.stopFading(), 0 === r && (this.enabled = !1))
                        }
                    }
                    return this._effectiveWeight = t, t
                },
                _updateTimeScale: function (e) {
                    var t = 0;
                    if (!this.paused) {
                        t = this.timeScale;
                        var n = this._timeScaleInterpolant;
                        if (null !== n) t *= n.evaluate(e)[0], e > n.parameterPositions[1] && (this.stopWarping(), 0 === t ? this.paused = !0 : this.timeScale = t)
                    }
                    return this._effectiveTimeScale = t, t
                },
                _updateTime: function (e) {
                    var t = this.time + e,
                        n = this._clip.duration,
                        r = this.loop,
                        i = this._loopCount,
                        o = 2202 === r;
                    if (0 === e) return -1 === i ? t : o && 1 == (1 & i) ? n - t : t;
                    if (2200 === r) {
                        -1 === i && (this._loopCount = 0, this._setEndings(!0, !0, !1));
                        e: {
                            if (t >= n) t = n;
                            else {
                                if (!(t < 0)) {
                                    this.time = t;
                                    break e
                                }
                                t = 0
                            }
                            this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                            this.time = t,
                            this._mixer.dispatchEvent({
                                type: "finished",
                                action: this,
                                direction: e < 0 ? -1 : 1
                            })
                        }
                    } else {
                        if (-1 === i && (e >= 0 ? (i = 0, this._setEndings(!0, 0 === this.repetitions, o)) : this._setEndings(0 === this.repetitions, !0, o)), t >= n || t < 0) {
                            var a = Math.floor(t / n);
                            t -= n * a, i += Math.abs(a);
                            var s = this.repetitions - i;
                            if (s <= 0) this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, t = e > 0 ? n : 0, this.time = t, this._mixer.dispatchEvent({
                                type: "finished",
                                action: this,
                                direction: e > 0 ? 1 : -1
                            });
                            else {
                                if (1 === s) {
                                    var c = e < 0;
                                    this._setEndings(c, !c, o)
                                } else this._setEndings(!1, !1, o);
                                this._loopCount = i, this.time = t, this._mixer.dispatchEvent({
                                    type: "loop",
                                    action: this,
                                    loopDelta: a
                                })
                            }
                        } else this.time = t;
                        if (o && 1 == (1 & i)) return n - t
                    }
                    return t
                },
                _setEndings: function (e, t, n) {
                    var r = this._interpolantSettings;
                    n ? (r.endingStart = 2401, r.endingEnd = 2401) : (r.endingStart = e ? this.zeroSlopeAtStart ? 2401 : 2400 : 2402, r.endingEnd = t ? this.zeroSlopeAtEnd ? 2401 : 2400 : 2402)
                },
                _scheduleFading: function (e, t, n) {
                    var r = this._mixer,
                        i = r.time,
                        o = this._weightInterpolant;
                    null === o && (o = r._lendControlInterpolant(), this._weightInterpolant = o);
                    var a = o.parameterPositions,
                        s = o.sampleValues;
                    return a[0] = i, s[0] = t, a[1] = i + e, s[1] = n, this
                }
            }), Bc.prototype = Object.assign(Object.create(r.prototype), {
                constructor: Bc,
                _bindAction: function (e, t) {
                    var n = e._localRoot || this._root,
                        r = e._clip.tracks,
                        i = r.length,
                        o = e._propertyBindings,
                        a = e._interpolants,
                        s = n.uuid,
                        c = this._bindingsByRootAndName,
                        l = c[s];
                    void 0 === l && (l = {}, c[s] = l);
                    for (var u = 0; u !== i; ++u) {
                        var h = r[u],
                            d = h.name,
                            p = l[d];
                        if (void 0 !== p) o[u] = p;
                        else {
                            if (void 0 !== (p = o[u])) {
                                null === p._cacheIndex && (++p.referenceCount, this._addInactiveBinding(p, s, d));
                                continue
                            }
                            var f = t && t._propertyBindings[u].binding.parsedPath;
                            ++(p = new Ac(kc.create(n, d, f), h.ValueTypeName, h.getValueSize())).referenceCount, this._addInactiveBinding(p, s, d), o[u] = p
                        }
                        a[u].resultBuffer = p.buffer
                    }
                },
                _activateAction: function (e) {
                    if (!this._isActiveAction(e)) {
                        if (null === e._cacheIndex) {
                            var t = (e._localRoot || this._root).uuid,
                                n = e._clip.uuid,
                                r = this._actionsByClip[n];
                            this._bindAction(e, r && r.knownActions[0]), this._addInactiveAction(e, n, t)
                        }
                        for (var i = e._propertyBindings, o = 0, a = i.length; o !== a; ++o) {
                            var s = i[o];
                            0 == s.useCount++ && (this._lendBinding(s), s.saveOriginalState())
                        }
                        this._lendAction(e)
                    }
                },
                _deactivateAction: function (e) {
                    if (this._isActiveAction(e)) {
                        for (var t = e._propertyBindings, n = 0, r = t.length; n !== r; ++n) {
                            var i = t[n];
                            0 == --i.useCount && (i.restoreOriginalState(), this._takeBackBinding(i))
                        }
                        this._takeBackAction(e)
                    }
                },
                _initMemoryManager: function () {
                    this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
                    var e = this;
                    this.stats = {
                        actions: {
                            get total() {
                                return e._actions.length
                            },
                            get inUse() {
                                return e._nActiveActions
                            }
                        },
                        bindings: {
                            get total() {
                                return e._bindings.length
                            },
                            get inUse() {
                                return e._nActiveBindings
                            }
                        },
                        controlInterpolants: {
                            get total() {
                                return e._controlInterpolants.length
                            },
                            get inUse() {
                                return e._nActiveControlInterpolants
                            }
                        }
                    }
                },
                _isActiveAction: function (e) {
                    var t = e._cacheIndex;
                    return null !== t && t < this._nActiveActions
                },
                _addInactiveAction: function (e, t, n) {
                    var r = this._actions,
                        i = this._actionsByClip,
                        o = i[t];
                    if (void 0 === o) o = {
                        knownActions: [e],
                        actionByRoot: {}
                    }, e._byClipCacheIndex = 0, i[t] = o;
                    else {
                        var a = o.knownActions;
                        e._byClipCacheIndex = a.length, a.push(e)
                    }
                    e._cacheIndex = r.length, r.push(e), o.actionByRoot[n] = e
                },
                _removeInactiveAction: function (e) {
                    var t = this._actions,
                        n = t[t.length - 1],
                        r = e._cacheIndex;
                    n._cacheIndex = r, t[r] = n, t.pop(), e._cacheIndex = null;
                    var i = e._clip.uuid,
                        o = this._actionsByClip,
                        a = o[i],
                        s = a.knownActions,
                        c = s[s.length - 1],
                        l = e._byClipCacheIndex;
                    c._byClipCacheIndex = l, s[l] = c, s.pop(), e._byClipCacheIndex = null, delete a.actionByRoot[(e._localRoot || this._root).uuid], 0 === s.length && delete o[i], this._removeInactiveBindingsForAction(e)
                },
                _removeInactiveBindingsForAction: function (e) {
                    for (var t = e._propertyBindings, n = 0, r = t.length; n !== r; ++n) {
                        var i = t[n];
                        0 == --i.referenceCount && this._removeInactiveBinding(i)
                    }
                },
                _lendAction: function (e) {
                    var t = this._actions,
                        n = e._cacheIndex,
                        r = this._nActiveActions++,
                        i = t[r];
                    e._cacheIndex = r, t[r] = e, i._cacheIndex = n, t[n] = i
                },
                _takeBackAction: function (e) {
                    var t = this._actions,
                        n = e._cacheIndex,
                        r = --this._nActiveActions,
                        i = t[r];
                    e._cacheIndex = r, t[r] = e, i._cacheIndex = n, t[n] = i
                },
                _addInactiveBinding: function (e, t, n) {
                    var r = this._bindingsByRootAndName,
                        i = r[t],
                        o = this._bindings;
                    void 0 === i && (i = {}, r[t] = i), i[n] = e, e._cacheIndex = o.length, o.push(e)
                },
                _removeInactiveBinding: function (e) {
                    var t = this._bindings,
                        n = e.binding,
                        r = n.rootNode.uuid,
                        i = n.path,
                        o = this._bindingsByRootAndName,
                        a = o[r],
                        s = t[t.length - 1],
                        c = e._cacheIndex;
                    s._cacheIndex = c, t[c] = s, t.pop(), delete a[i], 0 === Object.keys(a).length && delete o[r]
                },
                _lendBinding: function (e) {
                    var t = this._bindings,
                        n = e._cacheIndex,
                        r = this._nActiveBindings++,
                        i = t[r];
                    e._cacheIndex = r, t[r] = e, i._cacheIndex = n, t[n] = i
                },
                _takeBackBinding: function (e) {
                    var t = this._bindings,
                        n = e._cacheIndex,
                        r = --this._nActiveBindings,
                        i = t[r];
                    e._cacheIndex = r, t[r] = e, i._cacheIndex = n, t[n] = i
                },
                _lendControlInterpolant: function () {
                    var e = this._controlInterpolants,
                        t = this._nActiveControlInterpolants++,
                        n = e[t];
                    return void 0 === n && ((n = new Ba(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer)).__cacheIndex = t, e[t] = n), n
                },
                _takeBackControlInterpolant: function (e) {
                    var t = this._controlInterpolants,
                        n = e.__cacheIndex,
                        r = --this._nActiveControlInterpolants,
                        i = t[r];
                    e.__cacheIndex = r, t[r] = e, i.__cacheIndex = n, t[n] = i
                },
                _controlInterpolantsResultBuffer: new Float32Array(1),
                clipAction: function (e, t, n) {
                    var r = t || this._root,
                        i = r.uuid,
                        o = "string" == typeof e ? Ja.findByName(r, e) : e,
                        a = null !== o ? o.uuid : e,
                        s = this._actionsByClip[a],
                        c = null;
                    if (void 0 === n && (n = null !== o ? o.blendMode : 2500), void 0 !== s) {
                        var l = s.actionByRoot[i];
                        if (void 0 !== l && l.blendMode === n) return l;
                        c = s.knownActions[0], null === o && (o = c._clip)
                    }
                    if (null === o) return null;
                    var u = new zc(this, o, t, n);
                    return this._bindAction(u, c), this._addInactiveAction(u, a, i), u
                },
                existingAction: function (e, t) {
                    var n = t || this._root,
                        r = n.uuid,
                        i = "string" == typeof e ? Ja.findByName(n, e) : e,
                        o = i ? i.uuid : e,
                        a = this._actionsByClip[o];
                    return void 0 !== a && a.actionByRoot[r] || null
                },
                stopAllAction: function () {
                    for (var e = this._actions, t = this._nActiveActions - 1; t >= 0; --t) e[t].stop();
                    return this
                },
                update: function (e) {
                    e *= this.timeScale;
                    for (var t = this._actions, n = this._nActiveActions, r = this.time += e, i = Math.sign(e), o = this._accuIndex ^= 1, a = 0; a !== n; ++a) {
                        t[a]._update(r, e, i, o)
                    }
                    var s = this._bindings,
                        c = this._nActiveBindings;
                    for (a = 0; a !== c; ++a) s[a].apply(o);
                    return this
                },
                setTime: function (e) {
                    this.time = 0;
                    for (var t = 0; t < this._actions.length; t++) this._actions[t].time = 0;
                    return this.update(e)
                },
                getRoot: function () {
                    return this._root
                },
                uncacheClip: function (e) {
                    var t = this._actions,
                        n = e.uuid,
                        r = this._actionsByClip,
                        i = r[n];
                    if (void 0 !== i) {
                        for (var o = i.knownActions, a = 0, s = o.length; a !== s; ++a) {
                            var c = o[a];
                            this._deactivateAction(c);
                            var l = c._cacheIndex,
                                u = t[t.length - 1];
                            c._cacheIndex = null, c._byClipCacheIndex = null, u._cacheIndex = l, t[l] = u, t.pop(), this._removeInactiveBindingsForAction(c)
                        }
                        delete r[n]
                    }
                },
                uncacheRoot: function (e) {
                    var t = e.uuid,
                        n = this._actionsByClip;
                    for (var r in n) {
                        var i = n[r].actionByRoot[t];
                        void 0 !== i && (this._deactivateAction(i), this._removeInactiveAction(i))
                    }
                    var o = this._bindingsByRootAndName[t];
                    if (void 0 !== o)
                        for (var a in o) {
                            var s = o[a];
                            s.restoreOriginalState(), this._removeInactiveBinding(s)
                        }
                },
                uncacheAction: function (e, t) {
                    var n = this.existingAction(e, t);
                    null !== n && (this._deactivateAction(n), this._removeInactiveAction(n))
                }
            }), Fc.prototype.clone = function () {
                return new Fc(void 0 === this.value.clone ? this.value : this.value.clone())
            }, Uc.prototype = Object.assign(Object.create(ri.prototype), {
                constructor: Uc,
                isInstancedInterleavedBuffer: !0,
                copy: function (e) {
                    return ri.prototype.copy.call(this, e), this.meshPerAttribute = e.meshPerAttribute, this
                }
            }), Object.assign(Hc.prototype, {
                set: function (e, t) {
                    this.ray.set(e, t)
                },
                setFromCamera: function (e, t) {
                    t && t.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld), this.ray.direction.set(e.x, e.y, .5).unproject(t).sub(this.ray.origin).normalize(), this.camera = t) : t && t.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (t.near + t.far) / (t.near - t.far)).unproject(t), this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld), this.camera = t) : console.error("THREE.Raycaster: Unsupported camera type.")
                },
                intersectObject: function (e, t, n) {
                    var r = n || [];
                    return Vc(e, this, r, t), r.sort(Gc), r
                },
                intersectObjects: function (e, t, n) {
                    var r = n || [];
                    if (!1 === Array.isArray(e)) return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."), r;
                    for (var i = 0, o = e.length; i < o; i++) Vc(e[i], this, r, t);
                    return r.sort(Gc), r
                }
            }), Object.assign(function (e, t, n) {
                return this.radius = void 0 !== e ? e : 1, this.phi = void 0 !== t ? t : 0, this.theta = void 0 !== n ? n : 0, this
            }.prototype, {
                set: function (e, t, n) {
                    return this.radius = e, this.phi = t, this.theta = n, this
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    return this.radius = e.radius, this.phi = e.phi, this.theta = e.theta, this
                },
                makeSafe: function () {
                    return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this
                },
                setFromVector3: function (e) {
                    return this.setFromCartesianCoords(e.x, e.y, e.z)
                },
                setFromCartesianCoords: function (e, t, n) {
                    return this.radius = Math.sqrt(e * e + t * t + n * n), 0 === this.radius ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(e, n), this.phi = Math.acos(s.clamp(t / this.radius, -1, 1))), this
                }
            }), Object.assign(function (e, t, n) {
                return this.radius = void 0 !== e ? e : 1, this.theta = void 0 !== t ? t : 0, this.y = void 0 !== n ? n : 0, this
            }.prototype, {
                set: function (e, t, n) {
                    return this.radius = e, this.theta = t, this.y = n, this
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    return this.radius = e.radius, this.theta = e.theta, this.y = e.y, this
                },
                setFromVector3: function (e) {
                    return this.setFromCartesianCoords(e.x, e.y, e.z)
                },
                setFromCartesianCoords: function (e, t, n) {
                    return this.radius = Math.sqrt(e * e + n * n), this.theta = Math.atan2(e, n), this.y = t, this
                }
            });
            var Wc = new c;

            function qc(e, t) {
                this.min = void 0 !== e ? e : new c(1 / 0, 1 / 0), this.max = void 0 !== t ? t : new c(-1 / 0, -1 / 0)
            }
            Object.assign(qc.prototype, {
                set: function (e, t) {
                    return this.min.copy(e), this.max.copy(t), this
                },
                setFromPoints: function (e) {
                    this.makeEmpty();
                    for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
                    return this
                },
                setFromCenterAndSize: function (e, t) {
                    var n = Wc.copy(t).multiplyScalar(.5);
                    return this.min.copy(e).sub(n), this.max.copy(e).add(n), this
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    return this.min.copy(e.min), this.max.copy(e.max), this
                },
                makeEmpty: function () {
                    return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this
                },
                isEmpty: function () {
                    return this.max.x < this.min.x || this.max.y < this.min.y
                },
                getCenter: function (e) {
                    return void 0 === e && (console.warn("THREE.Box2: .getCenter() target is now required"), e = new c), this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
                },
                getSize: function (e) {
                    return void 0 === e && (console.warn("THREE.Box2: .getSize() target is now required"), e = new c), this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min)
                },
                expandByPoint: function (e) {
                    return this.min.min(e), this.max.max(e), this
                },
                expandByVector: function (e) {
                    return this.min.sub(e), this.max.add(e), this
                },
                expandByScalar: function (e) {
                    return this.min.addScalar(-e), this.max.addScalar(e), this
                },
                containsPoint: function (e) {
                    return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y)
                },
                containsBox: function (e) {
                    return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y
                },
                getParameter: function (e, t) {
                    return void 0 === t && (console.warn("THREE.Box2: .getParameter() target is now required"), t = new c), t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y))
                },
                intersectsBox: function (e) {
                    return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y)
                },
                clampPoint: function (e, t) {
                    return void 0 === t && (console.warn("THREE.Box2: .clampPoint() target is now required"), t = new c), t.copy(e).clamp(this.min, this.max)
                },
                distanceToPoint: function (e) {
                    return Wc.copy(e).clamp(this.min, this.max).sub(e).length()
                },
                intersect: function (e) {
                    return this.min.max(e.min), this.max.min(e.max), this
                },
                union: function (e) {
                    return this.min.min(e.min), this.max.max(e.max), this
                },
                translate: function (e) {
                    return this.min.add(e), this.max.add(e), this
                },
                equals: function (e) {
                    return e.min.equals(this.min) && e.max.equals(this.max)
                }
            });
            var Xc = new _,
                Yc = new _;

            function Jc(e, t) {
                this.start = void 0 !== e ? e : new _, this.end = void 0 !== t ? t : new _
            }

            function Zc(e) {
                W.call(this), this.material = e, this.render = function () {}, this.hasPositions = !1, this.hasNormals = !1, this.hasColors = !1, this.hasUvs = !1, this.positionArray = null, this.normalArray = null, this.colorArray = null, this.uvArray = null, this.count = 0
            }
            Object.assign(Jc.prototype, {
                set: function (e, t) {
                    return this.start.copy(e), this.end.copy(t), this
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                },
                copy: function (e) {
                    return this.start.copy(e.start), this.end.copy(e.end), this
                },
                getCenter: function (e) {
                    return void 0 === e && (console.warn("THREE.Line3: .getCenter() target is now required"), e = new _), e.addVectors(this.start, this.end).multiplyScalar(.5)
                },
                delta: function (e) {
                    return void 0 === e && (console.warn("THREE.Line3: .delta() target is now required"), e = new _), e.subVectors(this.end, this.start)
                },
                distanceSq: function () {
                    return this.start.distanceToSquared(this.end)
                },
                distance: function () {
                    return this.start.distanceTo(this.end)
                },
                at: function (e, t) {
                    return void 0 === t && (console.warn("THREE.Line3: .at() target is now required"), t = new _), this.delta(t).multiplyScalar(e).add(this.start)
                },
                closestPointToPointParameter: function (e, t) {
                    Xc.subVectors(e, this.start), Yc.subVectors(this.end, this.start);
                    var n = Yc.dot(Yc),
                        r = Yc.dot(Xc) / n;
                    return t && (r = s.clamp(r, 0, 1)), r
                },
                closestPointToPoint: function (e, t, n) {
                    var r = this.closestPointToPointParameter(e, t);
                    return void 0 === n && (console.warn("THREE.Line3: .closestPointToPoint() target is now required"), n = new _), this.delta(n).multiplyScalar(r).add(this.start)
                },
                applyMatrix4: function (e) {
                    return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this
                },
                equals: function (e) {
                    return e.start.equals(this.start) && e.end.equals(this.end)
                }
            }), Zc.prototype = Object.create(W.prototype), Zc.prototype.constructor = Zc, Zc.prototype.isImmediateRenderObject = !0;
            var Qc = new _;

            function $c(e, t) {
                W.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = t;
                for (var n = new ut, r = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], i = 0, o = 1; i < 32; i++, o++) {
                    var a = i / 32 * Math.PI * 2,
                        s = o / 32 * Math.PI * 2;
                    r.push(Math.cos(a), Math.sin(a), 1, Math.cos(s), Math.sin(s), 1)
                }
                n.setAttribute("position", new Ke(r, 3));
                var c = new Fi({
                    fog: !1,
                    toneMapped: !1
                });
                this.cone = new Ji(n, c), this.add(this.cone), this.update()
            }
            $c.prototype = Object.create(W.prototype), $c.prototype.constructor = $c, $c.prototype.dispose = function () {
                this.cone.geometry.dispose(), this.cone.material.dispose()
            }, $c.prototype.update = function () {
                this.light.updateMatrixWorld();
                var e = this.light.distance ? this.light.distance : 1e3,
                    t = e * Math.tan(this.light.angle);
                this.cone.scale.set(t, t, e), Qc.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(Qc), void 0 !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color)
            };
            var Kc = new _,
                el = new A,
                tl = new A;

            function nl(e) {
                for (var t = function e(t) {
                        var n = [];
                        t && t.isBone && n.push(t);
                        for (var r = 0; r < t.children.length; r++) n.push.apply(n, e(t.children[r]));
                        return n
                    }(e), n = new ut, r = [], i = [], o = new Ie(0, 0, 1), a = new Ie(0, 1, 0), s = 0; s < t.length; s++) {
                    var c = t[s];
                    c.parent && c.parent.isBone && (r.push(0, 0, 0), r.push(0, 0, 0), i.push(o.r, o.g, o.b), i.push(a.r, a.g, a.b))
                }
                n.setAttribute("position", new Ke(r, 3)), n.setAttribute("color", new Ke(i, 3));
                var l = new Fi({
                    vertexColors: !0,
                    depthTest: !1,
                    depthWrite: !1,
                    toneMapped: !1,
                    transparent: !0
                });
                Ji.call(this, n, l), this.type = "SkeletonHelper", this.root = e, this.bones = t, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1
            }

            function rl(e, t, n) {
                this.light = e, this.light.updateMatrixWorld(), this.color = n;
                var r = new la(t, 4, 2),
                    i = new Ge({
                        wireframe: !0,
                        fog: !1,
                        toneMapped: !1
                    });
                jt.call(this, r, i), this.type = "PointLightHelper", this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update()
            }
            nl.prototype = Object.create(Ji.prototype), nl.prototype.constructor = nl, nl.prototype.isSkeletonHelper = !0, nl.prototype.updateMatrixWorld = function (e) {
                var t = this.bones,
                    n = this.geometry,
                    r = n.getAttribute("position");
                tl.getInverse(this.root.matrixWorld);
                for (var i = 0, o = 0; i < t.length; i++) {
                    var a = t[i];
                    a.parent && a.parent.isBone && (el.multiplyMatrices(tl, a.matrixWorld), Kc.setFromMatrixPosition(el), r.setXYZ(o, Kc.x, Kc.y, Kc.z), el.multiplyMatrices(tl, a.parent.matrixWorld), Kc.setFromMatrixPosition(el), r.setXYZ(o + 1, Kc.x, Kc.y, Kc.z), o += 2)
                }
                n.getAttribute("position").needsUpdate = !0, W.prototype.updateMatrixWorld.call(this, e)
            }, rl.prototype = Object.create(jt.prototype), rl.prototype.constructor = rl, rl.prototype.dispose = function () {
                this.geometry.dispose(), this.material.dispose()
            }, rl.prototype.update = function () {
                void 0 !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color)
            };
            var il = new _,
                ol = new Ie,
                al = new Ie;

            function sl(e, t, n) {
                W.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = n;
                var r = new vo(t);
                r.rotateY(.5 * Math.PI), this.material = new Ge({
                    wireframe: !0,
                    fog: !1,
                    toneMapped: !1
                }), void 0 === this.color && (this.material.vertexColors = !0);
                var i = r.getAttribute("position"),
                    o = new Float32Array(3 * i.count);
                r.setAttribute("color", new We(o, 3)), this.add(new jt(r, this.material)), this.update()
            }

            function cl(e, t, n, r) {
                e = e || 10, t = t || 10, n = new Ie(void 0 !== n ? n : 4473924), r = new Ie(void 0 !== r ? r : 8947848);
                for (var i = t / 2, o = e / t, a = e / 2, s = [], c = [], l = 0, u = 0, h = -a; l <= t; l++, h += o) {
                    s.push(-a, 0, h, a, 0, h), s.push(h, 0, -a, h, 0, a);
                    var d = l === i ? n : r;
                    d.toArray(c, u), u += 3, d.toArray(c, u), u += 3, d.toArray(c, u), u += 3, d.toArray(c, u), u += 3
                }
                var p = new ut;
                p.setAttribute("position", new Ke(s, 3)), p.setAttribute("color", new Ke(c, 3));
                var f = new Fi({
                    vertexColors: !0,
                    toneMapped: !1
                });
                Ji.call(this, p, f), this.type = "GridHelper"
            }

            function ll(e, t, n, r, i, o) {
                e = e || 10, t = t || 16, n = n || 8, r = r || 64, i = new Ie(void 0 !== i ? i : 4473924), o = new Ie(void 0 !== o ? o : 8947848);
                var a, s, c, l, u, h, d, p = [],
                    f = [];
                for (l = 0; l <= t; l++) c = l / t * (2 * Math.PI), a = Math.sin(c) * e, s = Math.cos(c) * e, p.push(0, 0, 0), p.push(a, 0, s), d = 1 & l ? i : o, f.push(d.r, d.g, d.b), f.push(d.r, d.g, d.b);
                for (l = 0; l <= n; l++)
                    for (d = 1 & l ? i : o, h = e - e / n * l, u = 0; u < r; u++) c = u / r * (2 * Math.PI), a = Math.sin(c) * h, s = Math.cos(c) * h, p.push(a, 0, s), f.push(d.r, d.g, d.b), c = (u + 1) / r * (2 * Math.PI), a = Math.sin(c) * h, s = Math.cos(c) * h, p.push(a, 0, s), f.push(d.r, d.g, d.b);
                var m = new ut;
                m.setAttribute("position", new Ke(p, 3)), m.setAttribute("color", new Ke(f, 3));
                var g = new Fi({
                    vertexColors: !0,
                    toneMapped: !1
                });
                Ji.call(this, m, g), this.type = "PolarGridHelper"
            }
            sl.prototype = Object.create(W.prototype), sl.prototype.constructor = sl, sl.prototype.dispose = function () {
                this.children[0].geometry.dispose(), this.children[0].material.dispose()
            }, sl.prototype.update = function () {
                var e = this.children[0];
                if (void 0 !== this.color) this.material.color.set(this.color);
                else {
                    var t = e.geometry.getAttribute("color");
                    ol.copy(this.light.color), al.copy(this.light.groundColor);
                    for (var n = 0, r = t.count; n < r; n++) {
                        var i = n < r / 2 ? ol : al;
                        t.setXYZ(n, i.r, i.g, i.b)
                    }
                    t.needsUpdate = !0
                }
                e.lookAt(il.setFromMatrixPosition(this.light.matrixWorld).negate())
            }, cl.prototype = Object.assign(Object.create(Ji.prototype), {
                constructor: cl,
                copy: function (e) {
                    return Ji.prototype.copy.call(this, e), this.geometry.copy(e.geometry), this.material.copy(e.material), this
                },
                clone: function () {
                    return (new this.constructor).copy(this)
                }
            }), ll.prototype = Object.create(Ji.prototype), ll.prototype.constructor = ll;
            var ul = new _,
                hl = new _,
                dl = new _;

            function pl(e, t, n) {
                W.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = n, void 0 === t && (t = 1);
                var r = new ut;
                r.setAttribute("position", new Ke([-t, t, 0, t, t, 0, t, -t, 0, -t, -t, 0, -t, t, 0], 3));
                var i = new Fi({
                    fog: !1,
                    toneMapped: !1
                });
                this.lightPlane = new qi(r, i), this.add(this.lightPlane), (r = new ut).setAttribute("position", new Ke([0, 0, 0, 0, 0, 1], 3)), this.targetLine = new qi(r, i), this.add(this.targetLine), this.update()
            }
            pl.prototype = Object.create(W.prototype), pl.prototype.constructor = pl, pl.prototype.dispose = function () {
                this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose()
            }, pl.prototype.update = function () {
                ul.setFromMatrixPosition(this.light.matrixWorld), hl.setFromMatrixPosition(this.light.target.matrixWorld), dl.subVectors(hl, ul), this.lightPlane.lookAt(hl), void 0 !== this.color ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(hl), this.targetLine.scale.z = dl.length()
            };
            var fl = new _,
                ml = new Ut;

            function gl(e) {
                var t = new ut,
                    n = new Fi({
                        color: 16777215,
                        vertexColors: !0,
                        toneMapped: !1
                    }),
                    r = [],
                    i = [],
                    o = {},
                    a = new Ie(16755200),
                    s = new Ie(16711680),
                    c = new Ie(43775),
                    l = new Ie(16777215),
                    u = new Ie(3355443);

                function h(e, t, n) {
                    d(e, n), d(t, n)
                }

                function d(e, t) {
                    r.push(0, 0, 0), i.push(t.r, t.g, t.b), void 0 === o[e] && (o[e] = []), o[e].push(r.length / 3 - 1)
                }
                h("n1", "n2", a), h("n2", "n4", a), h("n4", "n3", a), h("n3", "n1", a), h("f1", "f2", a), h("f2", "f4", a), h("f4", "f3", a), h("f3", "f1", a), h("n1", "f1", a), h("n2", "f2", a), h("n3", "f3", a), h("n4", "f4", a), h("p", "n1", s), h("p", "n2", s), h("p", "n3", s), h("p", "n4", s), h("u1", "u2", c), h("u2", "u3", c), h("u3", "u1", c), h("c", "t", l), h("p", "c", u), h("cn1", "cn2", u), h("cn3", "cn4", u), h("cf1", "cf2", u), h("cf3", "cf4", u), t.setAttribute("position", new Ke(r, 3)), t.setAttribute("color", new Ke(i, 3)), Ji.call(this, t, n), this.type = "CameraHelper", this.camera = e, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = o, this.update()
            }

            function vl(e, t, n, r, i, o, a) {
                fl.set(i, o, a).unproject(r);
                var s = t[e];
                if (void 0 !== s)
                    for (var c = n.getAttribute("position"), l = 0, u = s.length; l < u; l++) c.setXYZ(s[l], fl.x, fl.y, fl.z)
            }
            gl.prototype = Object.create(Ji.prototype), gl.prototype.constructor = gl, gl.prototype.update = function () {
                var e = this.geometry,
                    t = this.pointMap;
                ml.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse), vl("c", t, e, ml, 0, 0, -1), vl("t", t, e, ml, 0, 0, 1), vl("n1", t, e, ml, -1, -1, -1), vl("n2", t, e, ml, 1, -1, -1), vl("n3", t, e, ml, -1, 1, -1), vl("n4", t, e, ml, 1, 1, -1), vl("f1", t, e, ml, -1, -1, 1), vl("f2", t, e, ml, 1, -1, 1), vl("f3", t, e, ml, -1, 1, 1), vl("f4", t, e, ml, 1, 1, 1), vl("u1", t, e, ml, .7, 1.1, -1), vl("u2", t, e, ml, -.7, 1.1, -1), vl("u3", t, e, ml, 0, 2, -1), vl("cf1", t, e, ml, -1, 0, 1), vl("cf2", t, e, ml, 1, 0, 1), vl("cf3", t, e, ml, 0, -1, 1), vl("cf4", t, e, ml, 0, 1, 1), vl("cn1", t, e, ml, -1, 0, -1), vl("cn2", t, e, ml, 1, 0, -1), vl("cn3", t, e, ml, 0, -1, -1), vl("cn4", t, e, ml, 0, 1, -1), e.getAttribute("position").needsUpdate = !0
            };
            var yl = new ae;

            function _l(e, t) {
                this.object = e, void 0 === t && (t = 16776960);
                var n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]),
                    r = new Float32Array(24),
                    i = new ut;
                i.setIndex(new We(n, 1)), i.setAttribute("position", new We(r, 3)), Ji.call(this, i, new Fi({
                    color: t,
                    toneMapped: !1
                })), this.type = "BoxHelper", this.matrixAutoUpdate = !1, this.update()
            }

            function xl(e, t) {
                this.type = "Box3Helper", this.box = e, t = t || 16776960;
                var n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]),
                    r = new ut;
                r.setIndex(new We(n, 1)), r.setAttribute("position", new Ke([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1], 3)), Ji.call(this, r, new Fi({
                    color: t,
                    toneMapped: !1
                })), this.type = "Box3Helper", this.geometry.computeBoundingSphere()
            }

            function bl(e, t, n) {
                this.plane = e, this.size = void 0 === t ? 1 : t;
                var r = void 0 !== n ? n : 16776960,
                    i = new ut;
                i.setAttribute("position", new Ke([1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 3)), i.computeBoundingSphere(), qi.call(this, i, new Fi({
                    color: r,
                    toneMapped: !1
                })), this.type = "PlaneHelper";
                var o = new ut;
                o.setAttribute("position", new Ke([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1], 3)), o.computeBoundingSphere(), this.add(new jt(o, new Ge({
                    color: r,
                    opacity: .2,
                    transparent: !0,
                    depthWrite: !1,
                    toneMapped: !1
                })))
            }
            _l.prototype = Object.create(Ji.prototype), _l.prototype.constructor = _l, _l.prototype.update = function (e) {
                if (void 0 !== e && console.warn("THREE.BoxHelper: .update() has no longer arguments."), void 0 !== this.object && yl.setFromObject(this.object), !yl.isEmpty()) {
                    var t = yl.min,
                        n = yl.max,
                        r = this.geometry.attributes.position,
                        i = r.array;
                    i[0] = n.x, i[1] = n.y, i[2] = n.z, i[3] = t.x, i[4] = n.y, i[5] = n.z, i[6] = t.x, i[7] = t.y, i[8] = n.z, i[9] = n.x, i[10] = t.y, i[11] = n.z, i[12] = n.x, i[13] = n.y, i[14] = t.z, i[15] = t.x, i[16] = n.y, i[17] = t.z, i[18] = t.x, i[19] = t.y, i[20] = t.z, i[21] = n.x, i[22] = t.y, i[23] = t.z, r.needsUpdate = !0, this.geometry.computeBoundingSphere()
                }
            }, _l.prototype.setFromObject = function (e) {
                return this.object = e, this.update(), this
            }, _l.prototype.copy = function (e) {
                return Ji.prototype.copy.call(this, e), this.object = e.object, this
            }, _l.prototype.clone = function () {
                return (new this.constructor).copy(this)
            }, xl.prototype = Object.create(Ji.prototype), xl.prototype.constructor = xl, xl.prototype.updateMatrixWorld = function (e) {
                var t = this.box;
                t.isEmpty() || (t.getCenter(this.position), t.getSize(this.scale), this.scale.multiplyScalar(.5), W.prototype.updateMatrixWorld.call(this, e))
            }, bl.prototype = Object.create(qi.prototype), bl.prototype.constructor = bl, bl.prototype.updateMatrixWorld = function (e) {
                var t = -this.plane.constant;
                Math.abs(t) < 1e-8 && (t = 1e-8), this.scale.set(.5 * this.size, .5 * this.size, t), this.children[0].material.side = t < 0 ? 1 : 0, this.lookAt(this.plane.normal), W.prototype.updateMatrixWorld.call(this, e)
            };
            var wl, Ml, Tl = new _;

            function Sl(e, t, n, r, i, o) {
                W.call(this), this.type = "ArrowHelper", void 0 === e && (e = new _(0, 0, 1)), void 0 === t && (t = new _(0, 0, 0)), void 0 === n && (n = 1), void 0 === r && (r = 16776960), void 0 === i && (i = .2 * n), void 0 === o && (o = .2 * i), void 0 === wl && ((wl = new ut).setAttribute("position", new Ke([0, 0, 0, 0, 1, 0], 3)), (Ml = new _a(0, .5, 1, 5, 1)).translate(0, -.5, 0)), this.position.copy(t), this.line = new qi(wl, new Fi({
                    color: r,
                    toneMapped: !1
                })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new jt(Ml, new Ge({
                    color: r,
                    toneMapped: !1
                })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(e), this.setLength(n, i, o)
            }

            function El(e) {
                var t = [0, 0, 0, e = e || 1, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e],
                    n = new ut;
                n.setAttribute("position", new Ke(t, 3)), n.setAttribute("color", new Ke([1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1], 3));
                var r = new Fi({
                    vertexColors: !0,
                    toneMapped: !1
                });
                Ji.call(this, n, r), this.type = "AxesHelper"
            }
            Sl.prototype = Object.create(W.prototype), Sl.prototype.constructor = Sl, Sl.prototype.setDirection = function (e) {
                if (e.y > .99999) this.quaternion.set(0, 0, 0, 1);
                else if (e.y < -.99999) this.quaternion.set(1, 0, 0, 0);
                else {
                    Tl.set(e.z, 0, -e.x).normalize();
                    var t = Math.acos(e.y);
                    this.quaternion.setFromAxisAngle(Tl, t)
                }
            }, Sl.prototype.setLength = function (e, t, n) {
                void 0 === t && (t = .2 * e), void 0 === n && (n = .2 * t), this.line.scale.set(1, Math.max(1e-4, e - t), 1), this.line.updateMatrix(), this.cone.scale.set(n, t, n), this.cone.position.y = e, this.cone.updateMatrix()
            }, Sl.prototype.setColor = function (e) {
                this.line.material.color.set(e), this.cone.material.color.set(e)
            }, Sl.prototype.copy = function (e) {
                return W.prototype.copy.call(this, e, !1), this.line.copy(e.line), this.cone.copy(e.cone), this
            }, Sl.prototype.clone = function () {
                return (new this.constructor).copy(this)
            }, El.prototype = Object.create(Ji.prototype), El.prototype.constructor = El;
            var Al = Math.pow(2, 8),
                jl = [.125, .215, .35, .446, .526, .582],
                Ll = 5 + jl.length,
                Cl = {
                    3e3: 0,
                    3001: 1,
                    3002: 2,
                    3004: 3,
                    3005: 4,
                    3006: 5,
                    3007: 6
                },
                Pl = new Bs,
                {
                    _lodPlanes: Ol,
                    _sizeLods: Rl,
                    _sigmas: Dl
                } = function () {
                    for (var e = [], t = [], n = [], r = 8, i = 0; i < Ll; i++) {
                        var o = Math.pow(2, r);
                        t.push(o);
                        var a = 1 / o;
                        i > 4 ? a = jl[i - 8 + 4 - 1] : 0 == i && (a = 0), n.push(a);
                        for (var s = 1 / (o - 1), c = -s / 2, l = 1 + s / 2, u = [c, c, l, c, l, l, c, c, l, l, c, l], h = new Float32Array(108), d = new Float32Array(72), p = new Float32Array(36), f = 0; f < 6; f++) {
                            var m = f % 3 * 2 / 3 - 1,
                                g = f > 2 ? 0 : -1,
                                v = [m, g, 0, m + 2 / 3, g, 0, m + 2 / 3, g + 1, 0, m, g, 0, m + 2 / 3, g + 1, 0, m, g + 1, 0];
                            h.set(v, 18 * f), d.set(u, 12 * f);
                            var y = [f, f, f, f, f, f];
                            p.set(y, 6 * f)
                        }
                        var _ = new ut;
                        _.setAttribute("position", new We(h, 3)), _.setAttribute("uv", new We(d, 2)), _.setAttribute("faceIndex", new We(p, 1)), e.push(_), r > 4 && r--
                    }
                    return {
                        _lodPlanes: e,
                        _sizeLods: t,
                        _sigmas: n
                    }
                }(),
                Nl = null,
                Il = (1 + Math.sqrt(5)) / 2,
                kl = 1 / Il,
                zl = [new _(1, 1, 1), new _(-1, 1, 1), new _(1, 1, -1), new _(-1, 1, -1), new _(0, Il, kl), new _(0, Il, -kl), new _(kl, 0, Il), new _(-kl, 0, Il), new _(Il, kl, 0), new _(-Il, kl, 0)];

            function Bl(e) {
                var t, n, r, i;
                this._renderer = e, this._pingPongRenderTarget = null, this._blurMaterial = (t = 20, n = new Float32Array(t), r = new _(0, 1, 0), (i = new Ea({
                    defines: {
                        n: t
                    },
                    uniforms: {
                        envMap: {
                            value: null
                        },
                        samples: {
                            value: 1
                        },
                        weights: {
                            value: n
                        },
                        latitudinal: {
                            value: !1
                        },
                        dTheta: {
                            value: 0
                        },
                        mipInt: {
                            value: 0
                        },
                        poleAxis: {
                            value: r
                        },
                        inputEncoding: {
                            value: Cl[3e3]
                        },
                        outputEncoding: {
                            value: Cl[3e3]
                        }
                    },
                    vertexShader: Wl(),
                    fragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform int samples;\nuniform float weights[n];\nuniform bool latitudinal;\nuniform float dTheta;\nuniform float mipInt;\nuniform vec3 poleAxis;\n\n${ql()}\n\n#define ENVMAP_TYPE_CUBE_UV\n#include <cube_uv_reflection_fragment>\n\nvec3 getSample(float theta, vec3 axis) {\n\tfloat cosTheta = cos(theta);\n\t// Rodrigues' axis-angle rotation\n\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t+ cross(axis, vOutputDirection) * sin(theta)\n\t\t+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\n\treturn bilinearCubeUV(envMap, sampleDirection, mipInt);\n}\n\nvoid main() {\n\tvec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\n\tif (all(equal(axis, vec3(0.0))))\n\t\taxis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);\n\taxis = normalize(axis);\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb += weights[0] * getSample(0.0, axis);\n\tfor (int i = 1; i < n; i++) {\n\t\tif (i >= samples)\n\t\t\tbreak;\n\t\tfloat theta = dTheta * float(i);\n\t\tgl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);\n\t\tgl_FragColor.rgb += weights[i] * getSample(theta, axis);\n\t}\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,
                    blending: 0,
                    depthTest: !1,
                    depthWrite: !1
                })).type = "SphericalGaussianBlur", i), this._equirectShader = null, this._cubemapShader = null, this._compileMaterial(this._blurMaterial)
            }

            function Fl(e) {
                return void 0 !== e && 1009 === e.type && (3e3 === e.encoding || 3001 === e.encoding || 3007 === e.encoding)
            }

            function Ul(e) {
                var t = new f(3 * Al, 3 * Al, e);
                return t.texture.mapping = 306, t.texture.name = "PMREM.cubeUv", t.scissorTest = !0, t
            }

            function Hl(e, t, n, r, i) {
                e.viewport.set(t, n, r, i), e.scissor.set(t, n, r, i)
            }

            function Gl() {
                var e = new Ea({
                    uniforms: {
                        envMap: {
                            value: null
                        },
                        texelSize: {
                            value: new c(1, 1)
                        },
                        inputEncoding: {
                            value: Cl[3e3]
                        },
                        outputEncoding: {
                            value: Cl[3e3]
                        }
                    },
                    vertexShader: Wl(),
                    fragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform vec2 texelSize;\n\n${ql()}\n\n#include <common>\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tvec3 outputDirection = normalize(vOutputDirection);\n\tvec2 uv = equirectUv( outputDirection );\n\tvec2 f = fract(uv / texelSize - 0.5);\n\tuv -= f * texelSize;\n\tvec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x += texelSize.x;\n\tvec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.y += texelSize.y;\n\tvec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x -= texelSize.x;\n\tvec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tvec3 tm = mix(tl, tr, f.x);\n\tvec3 bm = mix(bl, br, f.x);\n\tgl_FragColor.rgb = mix(tm, bm, f.y);\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,
                    blending: 0,
                    depthTest: !1,
                    depthWrite: !1
                });
                return e.type = "EquirectangularToCubeUV", e
            }

            function Vl() {
                var e = new Ea({
                    uniforms: {
                        envMap: {
                            value: null
                        },
                        inputEncoding: {
                            value: Cl[3e3]
                        },
                        outputEncoding: {
                            value: Cl[3e3]
                        }
                    },
                    vertexShader: Wl(),
                    fragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform samplerCube envMap;\n\n${ql()}\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,
                    blending: 0,
                    depthTest: !1,
                    depthWrite: !1
                });
                return e.type = "CubemapToCubeUV", e
            }

            function Wl() {
                return "\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\n\n// RH coordinate system; PMREM face-indexing convention\nvec3 getDirection(vec2 uv, float face) {\n\tuv = 2.0 * uv - 1.0;\n\tvec3 direction = vec3(uv, 1.0);\n\tif (face == 0.0) {\n\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\t} else if (face == 1.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\t} else if (face == 2.0) {\n\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\t} else if (face == 3.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\t} else if (face == 4.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\t} else if (face == 5.0) {\n\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\t}\n\treturn direction;\n}\n\nvoid main() {\n\tvOutputDirection = getDirection(uv, faceIndex);\n\tgl_Position = vec4( position, 1.0 );\n}\n\t"
            }

            function ql() {
                return "\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding == 0){\n\t\treturn value;\n\t}else if(inputEncoding == 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding == 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding == 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding == 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding == 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding == 0){\n\t\treturn value;\n\t}else if(outputEncoding == 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding == 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding == 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding == 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding == 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t"
            }
            Bl.prototype = {
                constructor: Bl,
                fromScene: function (e, t = 0, n = .1, r = 100) {
                    Nl = this._renderer.getRenderTarget();
                    var i = this._allocateTargets();
                    return this._sceneToCubeUV(e, n, r, i), t > 0 && this._blur(i, 0, 0, t), this._applyPMREM(i), this._cleanup(i), i
                },
                fromEquirectangular: function (e) {
                    return e.magFilter = 1003, e.minFilter = 1003, e.generateMipmaps = !1, this.fromCubemap(e)
                },
                fromCubemap: function (e) {
                    Nl = this._renderer.getRenderTarget();
                    var t = this._allocateTargets(e);
                    return this._textureToCubeUV(e, t), this._applyPMREM(t), this._cleanup(t), t
                },
                compileCubemapShader: function () {
                    null === this._cubemapShader && (this._cubemapShader = Vl(), this._compileMaterial(this._cubemapShader))
                },
                compileEquirectangularShader: function () {
                    null === this._equirectShader && (this._equirectShader = Gl(), this._compileMaterial(this._equirectShader))
                },
                dispose: function () {
                    this._blurMaterial.dispose(), null !== this._cubemapShader && this._cubemapShader.dispose(), null !== this._equirectShader && this._equirectShader.dispose();
                    for (var e = 0; e < Ol.length; e++) Ol[e].dispose()
                },
                _cleanup: function (e) {
                    this._pingPongRenderTarget.dispose(), this._renderer.setRenderTarget(Nl), e.scissorTest = !1, e.setSize(e.width, e.height)
                },
                _allocateTargets: function (e) {
                    var t = {
                            magFilter: 1003,
                            minFilter: 1003,
                            generateMipmaps: !1,
                            type: 1009,
                            format: 1023,
                            encoding: Fl(e) ? e.encoding : 3002,
                            depthBuffer: !1,
                            stencilBuffer: !1
                        },
                        n = Ul(t);
                    return n.depthBuffer = !e, this._pingPongRenderTarget = Ul(t), n
                },
                _compileMaterial: function (e) {
                    var t = new jt(Ol[0], e);
                    this._renderer.compile(t, Pl)
                },
                _sceneToCubeUV: function (e, t, n, r) {
                    var i = new Ht(90, 1, t, n),
                        o = [1, -1, 1, 1, 1, 1],
                        a = [1, 1, 1, -1, -1, -1],
                        s = this._renderer,
                        c = s.outputEncoding,
                        l = s.toneMapping,
                        u = s.toneMappingExposure,
                        h = s.getClearColor(),
                        d = s.getClearAlpha();
                    s.toneMapping = 1, s.toneMappingExposure = 1, s.outputEncoding = 3e3;
                    var p = e.background;
                    if (p && p.isColor) {
                        p.convertSRGBToLinear();
                        var f = Math.max(p.r, p.g, p.b),
                            m = Math.min(Math.max(Math.ceil(Math.log2(f)), -128), 127);
                        p = p.multiplyScalar(Math.pow(2, -m));
                        var g = (m + 128) / 255;
                        s.setClearColor(p, g), e.background = null
                    }
                    for (var v = 0; v < 6; v++) {
                        var y = v % 3;
                        0 == y ? (i.up.set(0, o[v], 0), i.lookAt(a[v], 0, 0)) : 1 == y ? (i.up.set(0, 0, o[v]), i.lookAt(0, a[v], 0)) : (i.up.set(0, o[v], 0), i.lookAt(0, 0, a[v])), Hl(r, y * Al, v > 2 ? Al : 0, Al, Al), s.setRenderTarget(r), s.render(e, i)
                    }
                    s.toneMapping = l, s.toneMappingExposure = u, s.outputEncoding = c, s.setClearColor(h, d)
                },
                _textureToCubeUV: function (e, t) {
                    var n = this._renderer;
                    e.isCubeTexture ? null == this._cubemapShader && (this._cubemapShader = Vl()) : null == this._equirectShader && (this._equirectShader = Gl());
                    var r = e.isCubeTexture ? this._cubemapShader : this._equirectShader,
                        i = new jt(Ol[0], r),
                        o = r.uniforms;
                    o.envMap.value = e, e.isCubeTexture || o.texelSize.value.set(1 / e.image.width, 1 / e.image.height), o.inputEncoding.value = Cl[e.encoding], o.outputEncoding.value = Cl[t.texture.encoding], Hl(t, 0, 0, 3 * Al, 2 * Al), n.setRenderTarget(t), n.render(i, Pl)
                },
                _applyPMREM: function (e) {
                    var t = this._renderer,
                        n = t.autoClear;
                    t.autoClear = !1;
                    for (var r = 1; r < Ll; r++) {
                        var i = Math.sqrt(Dl[r] * Dl[r] - Dl[r - 1] * Dl[r - 1]),
                            o = zl[(r - 1) % zl.length];
                        this._blur(e, r - 1, r, i, o)
                    }
                    t.autoClear = n
                },
                _blur: function (e, t, n, r, i) {
                    var o = this._pingPongRenderTarget;
                    this._halfBlur(e, o, t, n, r, "latitudinal", i), this._halfBlur(o, e, n, n, r, "longitudinal", i)
                },
                _halfBlur: function (e, t, n, r, i, o, a) {
                    var s = this._renderer,
                        c = this._blurMaterial;
                    "latitudinal" !== o && "longitudinal" !== o && console.error("blur direction must be either latitudinal or longitudinal!");
                    var l = new jt(Ol[r], c),
                        u = c.uniforms,
                        h = Rl[n] - 1,
                        d = isFinite(i) ? Math.PI / (2 * h) : 2 * Math.PI / 39,
                        p = i / d,
                        f = isFinite(i) ? 1 + Math.floor(3 * p) : 20;
                    f > 20 && console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);
                    for (var m = [], g = 0, v = 0; v < 20; ++v) {
                        var y = v / p,
                            _ = Math.exp(-y * y / 2);
                        m.push(_), 0 == v ? g += _ : v < f && (g += 2 * _)
                    }
                    for (v = 0; v < m.length; v++) m[v] = m[v] / g;
                    u.envMap.value = e.texture, u.samples.value = f, u.weights.value = m, u.latitudinal.value = "latitudinal" === o, a && (u.poleAxis.value = a), u.dTheta.value = d, u.mipInt.value = 8 - n, u.inputEncoding.value = Cl[e.texture.encoding], u.outputEncoding.value = Cl[e.texture.encoding];
                    var x = Rl[r];
                    Hl(t, y = 3 * Math.max(0, Al - 2 * x), (0 === r ? 0 : 2 * Al) + 2 * x * (r > 4 ? r - 8 + 4 : 0), 3 * x, 2 * x), s.setRenderTarget(t), s.render(l, Pl)
                }
            };

            function Xl(e) {
                console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."), vs.call(this, e), this.type = "catmullrom"
            }
            ls.create = function (e, t) {
                return console.log("THREE.Curve.create() has been deprecated"), e.prototype = Object.create(ls.prototype), e.prototype.constructor = e, e.prototype.getPoint = t, e
            }, Object.assign(Ls.prototype, {
                createPointsGeometry: function (e) {
                    console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
                    var t = this.getPoints(e);
                    return this.createGeometry(t)
                },
                createSpacedPointsGeometry: function (e) {
                    console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
                    var t = this.getSpacedPoints(e);
                    return this.createGeometry(t)
                },
                createGeometry: function (e) {
                    console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
                    for (var t = new Nt, n = 0, r = e.length; n < r; n++) {
                        var i = e[n];
                        t.vertices.push(new _(i.x, i.y, i.z || 0))
                    }
                    return t
                }
            }), Object.assign(Cs.prototype, {
                fromPoints: function (e) {
                    return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."), this.setFromPoints(e)
                }
            }), Object.create(vs.prototype), Object.create(vs.prototype), Xl.prototype = Object.create(vs.prototype), Object.assign(Xl.prototype, {
                initFromArray: function () {
                    console.error("THREE.Spline: .initFromArray() has been removed.")
                },
                getControlPointsArray: function () {
                    console.error("THREE.Spline: .getControlPointsArray() has been removed.")
                },
                reparametrizeByArcLength: function () {
                    console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")
                }
            }), cl.prototype.setColors = function () {
                console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")
            }, nl.prototype.update = function () {
                console.error("THREE.SkeletonHelper: update() no longer needs to be called.")
            }, Object.assign(es.prototype, {
                extractUrlBase: function (e) {
                    return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."), Xs(e)
                }
            }), es.Handlers = {
                add: function () {
                    console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")
                },
                get: function () {
                    console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")
                }
            }, Object.assign($s.prototype, {
                setTexturePath: function (e) {
                    return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."), this.setResourcePath(e)
                }
            }), Object.assign(qc.prototype, {
                center: function (e) {
                    return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(e)
                },
                empty: function () {
                    return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty()
                },
                isIntersectionBox: function (e) {
                    return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e)
                },
                size: function (e) {
                    return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(e)
                }
            }), Object.assign(ae.prototype, {
                center: function (e) {
                    return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(e)
                },
                empty: function () {
                    return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty()
                },
                isIntersectionBox: function (e) {
                    return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e)
                },
                isIntersectionSphere: function (e) {
                    return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(e)
                },
                size: function (e) {
                    return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(e)
                }
            }), Object.assign(le.prototype, {
                empty: function () {
                    return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."), this.isEmpty()
                }
            }), Yt.prototype.setFromMatrix = function (e) {
                return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."), this.setFromProjectionMatrix(e)
            }, Jc.prototype.center = function (e) {
                return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(e)
            }, Object.assign(s, {
                random16: function () {
                    return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."), Math.random()
                },
                nearestPowerOfTwo: function (e) {
                    return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."), s.floorPowerOfTwo(e)
                },
                nextPowerOfTwo: function (e) {
                    return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."), s.ceilPowerOfTwo(e)
                }
            }), Object.assign(l.prototype, {
                flattenToArrayOffset: function (e, t) {
                    return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(e, t)
                },
                multiplyVector3: function (e) {
                    return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), e.applyMatrix3(this)
                },
                multiplyVector3Array: function () {
                    console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")
                },
                applyToBufferAttribute: function (e) {
                    return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."), e.applyMatrix3(this)
                },
                applyToVector3Array: function () {
                    console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")
                }
            }), Object.assign(A.prototype, {
                extractPosition: function (e) {
                    return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(e)
                },
                flattenToArrayOffset: function (e, t) {
                    return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(e, t)
                },
                getPosition: function () {
                    return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), (new _).setFromMatrixColumn(this, 3)
                },
                setRotationFromQuaternion: function (e) {
                    return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(e)
                },
                multiplyToArray: function () {
                    console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")
                },
                multiplyVector3: function (e) {
                    return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
                },
                multiplyVector4: function (e) {
                    return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
                },
                multiplyVector3Array: function () {
                    console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")
                },
                rotateAxis: function (e) {
                    console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), e.transformDirection(this)
                },
                crossVector: function (e) {
                    return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
                },
                translate: function () {
                    console.error("THREE.Matrix4: .translate() has been removed.")
                },
                rotateX: function () {
                    console.error("THREE.Matrix4: .rotateX() has been removed.")
                },
                rotateY: function () {
                    console.error("THREE.Matrix4: .rotateY() has been removed.")
                },
                rotateZ: function () {
                    console.error("THREE.Matrix4: .rotateZ() has been removed.")
                },
                rotateByAxis: function () {
                    console.error("THREE.Matrix4: .rotateByAxis() has been removed.")
                },
                applyToBufferAttribute: function (e) {
                    return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
                },
                applyToVector3Array: function () {
                    console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")
                },
                makeFrustum: function (e, t, n, r, i, o) {
                    return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."), this.makePerspective(e, t, r, n, i, o)
                }
            }), be.prototype.isIntersectionLine = function (e) {
                return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(e)
            }, g.prototype.multiplyVector3 = function (e) {
                return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), e.applyQuaternion(this)
            }, Object.assign(ve.prototype, {
                isIntersectionBox: function (e) {
                    return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e)
                },
                isIntersectionPlane: function (e) {
                    return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(e)
                },
                isIntersectionSphere: function (e) {
                    return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(e)
                }
            }), Object.assign(Oe.prototype, {
                area: function () {
                    return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."), this.getArea()
                },
                barycoordFromPoint: function (e, t) {
                    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), this.getBarycoord(e, t)
                },
                midpoint: function (e) {
                    return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."), this.getMidpoint(e)
                },
                normal: function (e) {
                    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), this.getNormal(e)
                },
                plane: function (e) {
                    return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."), this.getPlane(e)
                }
            }), Object.assign(Oe, {
                barycoordFromPoint: function (e, t, n, r, i) {
                    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), Oe.getBarycoord(e, t, n, r, i)
                },
                normal: function (e, t, n, r) {
                    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), Oe.getNormal(e, t, n, r)
                }
            }), Object.assign(Ps.prototype, {
                extractAllPoints: function (e) {
                    return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."), this.extractPoints(e)
                },
                extrude: function (e) {
                    return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new na(this, e)
                },
                makeGeometry: function (e) {
                    return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new fa(this, e)
                }
            }), Object.assign(c.prototype, {
                fromAttribute: function (e, t, n) {
                    return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n)
                },
                distanceToManhattan: function (e) {
                    return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(e)
                },
                lengthManhattan: function () {
                    return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength()
                }
            }), Object.assign(_.prototype, {
                setEulerFromRotationMatrix: function () {
                    console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
                },
                setEulerFromQuaternion: function () {
                    console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
                },
                getPositionFromMatrix: function (e) {
                    return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(e)
                },
                getScaleFromMatrix: function (e) {
                    return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(e)
                },
                getColumnFromMatrix: function (e, t) {
                    return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(t, e)
                },
                applyProjection: function (e) {
                    return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."), this.applyMatrix4(e)
                },
                fromAttribute: function (e, t, n) {
                    return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n)
                },
                distanceToManhattan: function (e) {
                    return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(e)
                },
                lengthManhattan: function () {
                    return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength()
                }
            }), Object.assign(p.prototype, {
                fromAttribute: function (e, t, n) {
                    return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n)
                },
                lengthManhattan: function () {
                    return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength()
                }
            }), Object.assign(Nt.prototype, {
                computeTangents: function () {
                    console.error("THREE.Geometry: .computeTangents() has been removed.")
                },
                computeLineDistances: function () {
                    console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")
                },
                applyMatrix: function (e) {
                    return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(e)
                }
            }), Object.assign(W.prototype, {
                getChildByName: function (e) {
                    return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(e)
                },
                renderDepth: function () {
                    console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")
                },
                translate: function (e, t) {
                    return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(t, e)
                },
                getWorldRotation: function () {
                    console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")
                },
                applyMatrix: function (e) {
                    return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(e)
                }
            }), Object.defineProperties(W.prototype, {
                eulerOrder: {
                    get: function () {
                        return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order
                    },
                    set: function (e) {
                        console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = e
                    }
                },
                useQuaternion: {
                    get: function () {
                        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
                    },
                    set: function () {
                        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
                    }
                }
            }), Object.assign(jt.prototype, {
                setDrawMode: function () {
                    console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")
                }
            }), Object.defineProperties(jt.prototype, {
                drawMode: {
                    get: function () {
                        return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."), 0
                    },
                    set: function () {
                        console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")
                    }
                }
            }), Object.defineProperties(Li.prototype, {
                objects: {
                    get: function () {
                        return console.warn("THREE.LOD: .objects has been renamed to .levels."), this.levels
                    }
                }
            }), Object.defineProperty(Ri.prototype, "useVertexTexture", {
                get: function () {
                    console.warn("THREE.Skeleton: useVertexTexture has been removed.")
                },
                set: function () {
                    console.warn("THREE.Skeleton: useVertexTexture has been removed.")
                }
            }), Ci.prototype.initBones = function () {
                console.error("THREE.SkinnedMesh: initBones() has been removed.")
            }, Object.defineProperty(ls.prototype, "__arcLengthDivisions", {
                get: function () {
                    return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions
                },
                set: function (e) {
                    console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions = e
                }
            }), Ht.prototype.setLens = function (e, t) {
                console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), void 0 !== t && (this.filmGauge = t), this.setFocalLength(e)
            }, Object.defineProperties(Os.prototype, {
                onlyShadow: {
                    set: function () {
                        console.warn("THREE.Light: .onlyShadow has been removed.")
                    }
                },
                shadowCameraFov: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = e
                    }
                },
                shadowCameraLeft: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = e
                    }
                },
                shadowCameraRight: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = e
                    }
                },
                shadowCameraTop: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = e
                    }
                },
                shadowCameraBottom: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = e
                    }
                },
                shadowCameraNear: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = e
                    }
                },
                shadowCameraFar: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = e
                    }
                },
                shadowCameraVisible: {
                    set: function () {
                        console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")
                    }
                },
                shadowBias: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = e
                    }
                },
                shadowDarkness: {
                    set: function () {
                        console.warn("THREE.Light: .shadowDarkness has been removed.")
                    }
                },
                shadowMapWidth: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = e
                    }
                },
                shadowMapHeight: {
                    set: function (e) {
                        console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = e
                    }
                }
            }), Object.defineProperties(We.prototype, {
                length: {
                    get: function () {
                        return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."), this.array.length
                    }
                },
                dynamic: {
                    get: function () {
                        return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), 35048 === this.usage
                    },
                    set: function () {
                        console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.setUsage(35048)
                    }
                }
            }), Object.assign(We.prototype, {
                setDynamic: function (e) {
                    return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(!0 === e ? 35048 : 35044), this
                },
                copyIndicesArray: function () {
                    console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")
                },
                setArray: function () {
                    console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")
                }
            }), Object.assign(ut.prototype, {
                addIndex: function (e) {
                    console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(e)
                },
                addAttribute: function (e, t) {
                    return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."), t && t.isBufferAttribute || t && t.isInterleavedBufferAttribute ? "index" === e ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(t), this) : this.setAttribute(e, t) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.setAttribute(e, new We(arguments[1], arguments[2])))
                },
                addDrawCall: function (e, t, n) {
                    void 0 !== n && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(e, t)
                },
                clearDrawCalls: function () {
                    console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups()
                },
                computeTangents: function () {
                    console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")
                },
                computeOffsets: function () {
                    console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")
                },
                removeAttribute: function (e) {
                    return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."), this.deleteAttribute(e)
                },
                applyMatrix: function (e) {
                    return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(e)
                }
            }), Object.defineProperties(ut.prototype, {
                drawcalls: {
                    get: function () {
                        return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups
                    }
                },
                offsets: {
                    get: function () {
                        return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups
                    }
                }
            }), Object.defineProperties(Ys.prototype, {
                maxInstancedCount: {
                    get: function () {
                        return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."), this.instanceCount
                    },
                    set: function (e) {
                        console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."), this.instanceCount = e
                    }
                }
            }), Object.defineProperties(Hc.prototype, {
                linePrecision: {
                    get: function () {
                        return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."), this.params.Line.threshold
                    },
                    set: function (e) {
                        console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."), this.params.Line.threshold = e
                    }
                }
            }), Object.defineProperties(ri.prototype, {
                dynamic: {
                    get: function () {
                        return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."), 35048 === this.usage
                    },
                    set: function (e) {
                        console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."), this.setUsage(e)
                    }
                }
            }), Object.assign(ri.prototype, {
                setDynamic: function (e) {
                    return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(!0 === e ? 35048 : 35044), this
                },
                setArray: function () {
                    console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")
                }
            }), Object.assign(ra.prototype, {
                getArrays: function () {
                    console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")
                },
                addShapeList: function () {
                    console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")
                },
                addShape: function () {
                    console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")
                }
            }), Object.defineProperties(Fc.prototype, {
                dynamic: {
                    set: function () {
                        console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")
                    }
                },
                onUpdate: {
                    value: function () {
                        return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this
                    }
                }
            }), Object.defineProperties(He.prototype, {
                wrapAround: {
                    get: function () {
                        console.warn("THREE.Material: .wrapAround has been removed.")
                    },
                    set: function () {
                        console.warn("THREE.Material: .wrapAround has been removed.")
                    }
                },
                overdraw: {
                    get: function () {
                        console.warn("THREE.Material: .overdraw has been removed.")
                    },
                    set: function () {
                        console.warn("THREE.Material: .overdraw has been removed.")
                    }
                },
                wrapRGB: {
                    get: function () {
                        return console.warn("THREE.Material: .wrapRGB has been removed."), new Ie
                    }
                },
                shading: {
                    get: function () {
                        console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.")
                    },
                    set: function (e) {
                        console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = 1 === e
                    }
                },
                stencilMask: {
                    get: function () {
                        return console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask
                    },
                    set: function (e) {
                        console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask = e
                    }
                }
            }), Object.defineProperties(La.prototype, {
                metal: {
                    get: function () {
                        return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."), !1
                    },
                    set: function () {
                        console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")
                    }
                }
            }), Object.defineProperties(Ft.prototype, {
                derivatives: {
                    get: function () {
                        return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives
                    },
                    set: function (e) {
                        console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = e
                    }
                }
            }), Object.assign(ei.prototype, {
                clearTarget: function (e, t, n, r) {
                    console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."), this.setRenderTarget(e), this.clear(t, n, r)
                },
                animate: function (e) {
                    console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."), this.setAnimationLoop(e)
                },
                getCurrentRenderTarget: function () {
                    return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."), this.getRenderTarget()
                },
                getMaxAnisotropy: function () {
                    return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."), this.capabilities.getMaxAnisotropy()
                },
                getPrecision: function () {
                    return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."), this.capabilities.precision
                },
                resetGLState: function () {
                    return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."), this.state.reset()
                },
                supportsFloatTextures: function () {
                    return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float")
                },
                supportsHalfFloatTextures: function () {
                    return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float")
                },
                supportsStandardDerivatives: function () {
                    return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives")
                },
                supportsCompressedTextureS3TC: function () {
                    return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc")
                },
                supportsCompressedTexturePVRTC: function () {
                    return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc")
                },
                supportsBlendMinMax: function () {
                    return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax")
                },
                supportsVertexTextures: function () {
                    return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."), this.capabilities.vertexTextures
                },
                supportsInstancedArrays: function () {
                    return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays")
                },
                enableScissorTest: function (e) {
                    console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(e)
                },
                initMaterial: function () {
                    console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
                },
                addPrePlugin: function () {
                    console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
                },
                addPostPlugin: function () {
                    console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
                },
                updateShadowMap: function () {
                    console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
                },
                setFaceCulling: function () {
                    console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")
                },
                allocTextureUnit: function () {
                    console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")
                },
                setTexture: function () {
                    console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")
                },
                setTexture2D: function () {
                    console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")
                },
                setTextureCube: function () {
                    console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")
                },
                getActiveMipMapLevel: function () {
                    return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."), this.getActiveMipmapLevel()
                }
            }), Object.defineProperties(ei.prototype, {
                shadowMapEnabled: {
                    get: function () {
                        return this.shadowMap.enabled
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = e
                    }
                },
                shadowMapType: {
                    get: function () {
                        return this.shadowMap.type
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = e
                    }
                },
                shadowMapCullFace: {
                    get: function () {
                        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
                    },
                    set: function () {
                        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
                    }
                },
                context: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."), this.getContext()
                    }
                },
                vr: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"), this.xr
                    }
                },
                gammaInput: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."), !1
                    },
                    set: function () {
                        console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")
                    }
                },
                gammaOutput: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), !1
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), this.outputEncoding = !0 === e ? 3001 : 3e3
                    }
                }
            }), Object.defineProperties(Wr.prototype, {
                cullFace: {
                    get: function () {
                        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
                    },
                    set: function () {
                        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
                    }
                },
                renderReverseSided: {
                    get: function () {
                        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
                    },
                    set: function () {
                        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
                    }
                },
                renderSingleSided: {
                    get: function () {
                        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
                    },
                    set: function () {
                        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
                    }
                }
            }), Object.defineProperties(f.prototype, {
                wrapS: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = e
                    }
                },
                wrapT: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = e
                    }
                },
                magFilter: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = e
                    }
                },
                minFilter: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = e
                    }
                },
                anisotropy: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = e
                    }
                },
                offset: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = e
                    }
                },
                repeat: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = e
                    }
                },
                format: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = e
                    }
                },
                type: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = e
                    }
                },
                generateMipmaps: {
                    get: function () {
                        return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps
                    },
                    set: function (e) {
                        console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = e
                    }
                }
            }), Object.defineProperties(xc.prototype, {
                load: {
                    value: function (e) {
                        console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
                        var t = this;
                        return (new lc).load(e, (function (e) {
                            t.setBuffer(e)
                        })), this
                    }
                },
                startTime: {
                    set: function () {
                        console.warn("THREE.Audio: .startTime is now .play( delay ).")
                    }
                }
            }), Ec.prototype.getData = function () {
                return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData()
            }, Gt.prototype.updateCubeMap = function (e, t) {
                return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."), this.update(e, t)
            };
            u.crossOrigin = void 0, u.loadTexture = function (e, t, n, r) {
                console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
                var i = new cs;
                i.setCrossOrigin(this.crossOrigin);
                var o = i.load(e, n, void 0, r);
                return t && (o.mapping = t), o
            }, u.loadTextureCube = function (e, t, n, r) {
                console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
                var i = new ss;
                i.setCrossOrigin(this.crossOrigin);
                var o = i.load(e, n, void 0, r);
                return t && (o.mapping = t), o
            }, u.loadCompressedTexture = function () {
                console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
            }, u.loadCompressedTextureCube = function () {
                console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
            };
            "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", {
                detail: {
                    revision: "117"
                }
            }))
        },
        "./node_modules/tslib/tslib.es6.js": function (e, t, n) {
            "use strict";
            n.d(t, "c", (function () {
                return i
            })), n.d(t, "a", (function () {
                return o
            })), n.d(t, "b", (function () {
                return a
            })), n.d(t, "d", (function () {
                return s
            }));
            var r = function (e, t) {
                return (r = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function (e, t) {
                        e.__proto__ = t
                    } || function (e, t) {
                        for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                    })(e, t)
            };

            function i(e, t) {
                function n() {
                    this.constructor = e
                }
                r(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
            }
            var o = function () {
                return (o = Object.assign || function (e) {
                    for (var t, n = 1, r = arguments.length; n < r; n++)
                        for (var i in t = arguments[n]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                    return e
                }).apply(this, arguments)
            };

            function a(e, t, n, r) {
                var i, o = arguments.length,
                    a = o < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, n) : r;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, n, r);
                else
                    for (var s = e.length - 1; s >= 0; s--)(i = e[s]) && (a = (o < 3 ? i(a) : o > 3 ? i(t, n, a) : i(t, n)) || a);
                return o > 3 && a && Object.defineProperty(t, n, a), a
            }

            function s() {
                for (var e = 0, t = 0, n = arguments.length; t < n; t++) e += arguments[t].length;
                var r = Array(e),
                    i = 0;
                for (t = 0; t < n; t++)
                    for (var o = arguments[t], a = 0, s = o.length; a < s; a++, i++) r[i] = o[a];
                return r
            }
        },
        "./node_modules/webpack/buildin/global.js": function (e, t) {
            var n;
            n = function () {
                return this
            }();
            try {
                n = n || new Function("return this")()
            } catch (e) {
                "object" == typeof window && (n = window)
            }
            e.exports = n
        }
    }
]);
//# sourceMappingURL=vendors.js.map